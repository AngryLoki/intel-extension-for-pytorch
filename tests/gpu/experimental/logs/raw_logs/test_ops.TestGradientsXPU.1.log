test_fn_fail_gradgrad___getitem___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad___getitem___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad___radd___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad___radd___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad___rdiv___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad___rdiv___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad___rmatmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad___rmod___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad___rmul___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad___rmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad___rpow___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad___rpow___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad___rsub___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad___rsub___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_abs_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_abs_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_acos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_acos_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_acosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_acosh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_addbmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_addcdiv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_addcdiv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_addcmul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_addcmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_addmm_decomposed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_addmm_decomposed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_addmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_addmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_addmv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_addr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_addr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_all_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_all_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_amax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_amin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_aminmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "onlyOnCPUAndCUDA: doesn't run on xpu"
test_fn_fail_gradgrad_angle_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_angle_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_any_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_any_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_argmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_argmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_asin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_asin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_asinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_asinh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_atan2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_atan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_atan_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_atanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_atanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_baddbmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_bitwise_left_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_bitwise_right_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_block_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_block_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_bmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_bmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_broadcast_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_broadcast_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_broadcast_to_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_broadcast_to_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cdist_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: the derivative for '_cdist_backward' is not implemented."
test_fn_fail_gradgrad_ceil_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cholesky_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cholesky_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_chunk_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_chunk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_clamp_scalar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_clamp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_clone_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_clone_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_conj_physical_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_conj_physical_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_contiguous_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_contiguous_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_copysign_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_corrcoef_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_corrcoef_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cos_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cosh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_count_nonzero_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_count_nonzero_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_cov_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cov_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cross_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cross_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cummax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cummin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cumprod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cumprod_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cumsum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_cumulative_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_cumulative_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_deg2rad_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_diag_embed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_diag_embed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_diagonal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_diagonal_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_diff_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_diff_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_digamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_dist_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_dist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_div_floor_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_div_floor_rounding_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_div_no_rounding_mode_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_div_no_rounding_mode_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_div_trunc_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_div_trunc_rounding_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_dsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_dsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_dstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_dstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_einsum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_einsum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_eq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_eq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_erf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_erfc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_erfinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_exp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_exp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_expand_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_expand_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_expand_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_expand_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_expm1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_fft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fft_fft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_fftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fft_fftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_hfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fft_hfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_ifft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fft_ifft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_ifftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_irfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fft_irfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_irfftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_rfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fill__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fill__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_flip_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_flip_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fliplr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_fliplr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_flipud_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_flipud_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_float_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_float_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_floor_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_floor_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fmod_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_fmod_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_frac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_frexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_gather_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_gather_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_ge_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_geqrf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_geqrf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_gradient_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_gradient_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_gt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_hsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_hsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_hstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_hstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_hypot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_i0_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_igamma_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_igamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_igammac_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_igammac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_imag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_index_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_index_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_index_copy_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_index_copy_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_index_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_index_fill_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_index_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_index_put_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_index_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_index_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_inner_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_inner_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_isin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_kron_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_kron_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_kthvalue_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_le_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_lerp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_lerp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_lgamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_cholesky_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_cholesky_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_cond_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_cond_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_det_singular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_det_singular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_det_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_det_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_eigh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_eigh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_eigvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_eigvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_eigvalsh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_eigvalsh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_householder_product_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_inv_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_inv_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_inv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_inv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_lstsq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_lstsq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_linalg_matrix_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_matrix_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_matrix_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_matrix_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_matrix_rank_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_matrix_rank_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_linalg_matrix_rank_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_matrix_rank_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_linalg_multi_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_multi_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_pinv_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_pinv_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_pinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_pinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_slogdet_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_slogdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_svdvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_tensorinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_tensorinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_linalg_vector_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_linalg_vector_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_log10_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_log10_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_log1p_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_log2_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_log2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_log_softmax_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_log_softmax_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_log_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_log_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_log_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_logaddexp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_logaddexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_logcumsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_logdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_logical_not_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_logical_not_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_logit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_logsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_lt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_lu_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_lu_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_lu_unpack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_lu_unpack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_lu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_lu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_masked_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_masked_fill_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_masked_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_masked_scatter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_masked_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_masked_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_matmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_matrix_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_max_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_max_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_max_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_maximum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_median_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_meshgrid_list_of_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_meshgrid_variadic_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_min_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_min_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_min_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_minimum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_mm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_mm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_mode_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_movedim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_movedim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_msort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_mul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_mul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_mv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_mv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_mvlgamma_mvlgamma_p_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_mvlgamma_mvlgamma_p_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_fail_gradgrad_mvlgamma_mvlgamma_p_5_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_fail_gradgrad_nan_to_num_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nanmean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nanmedian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nanquantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nansum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_narrow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_narrow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_ne_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_ne_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_neg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nextafter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_cosine_similarity_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_gelu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_fail_gradgrad_nn_functional_hardshrink_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_hardswish_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::hardswish' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hardswish' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_fail_gradgrad_nn_functional_hardtanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_interpolate_bicubic_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_leaky_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_logsigmoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_mse_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_nll_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_normalize_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_pad_circular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_nn_functional_pad_circular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_pad_constant_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_nn_functional_pad_constant_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_pad_reflect_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_pad_replicate_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_nn_functional_pad_replicate_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_relu6_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_norm_fro_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_norm_fro_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_norm_inf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_norm_inf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_norm_nuc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_norm_nuc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_ormqr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_ormqr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_outer_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_outer_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_permute_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_permute_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_pinverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_pinverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_polar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_polygamma_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_polygamma_polygamma_n_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_fail_gradgrad_polygamma_polygamma_n_2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_fail_gradgrad_polygamma_polygamma_n_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_fail_gradgrad_polygamma_polygamma_n_4_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_fail_gradgrad_positive_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_positive_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_pow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_pow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_prod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_prod_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_put_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_quantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_rad2deg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_ravel_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_ravel_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_reciprocal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_reciprocal_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_remainder_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_remainder_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_renorm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_renorm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_repeat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_repeat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_reshape_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_reshape_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_reshape_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_reshape_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_resize__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_resize__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_resize_as__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_resize_as__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_resolve_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_resolve_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_resolve_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_resolve_neg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_roll_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_roll_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_rot90_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_rot90_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_round_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_rsqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_rsqrt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_rsub_rsub_scalar_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_rsub_rsub_tensor_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_rsub_rsub_tensor_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_scatter_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_scatter_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_scatter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sgn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sgn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sigmoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sigmoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sign_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_signbit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_sin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sinc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sinc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sinh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_softmax_with_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_softmax_with_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_entr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_fail_gradgrad_special_i0e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_i1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_i1e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_ndtr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_ndtri_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_polygamma_special_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_xlog1py_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_zeta_grad_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_special_zeta_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_fail_gradgrad_split_list_args_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_split_list_args_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_split_with_sizes_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_split_with_sizes_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sqrt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_square_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_square_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_squeeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_squeeze_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_stack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_stack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_std_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_std_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_std_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_std_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sub_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sub_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_sum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_sum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_symeig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_symeig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_t_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_t_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_take_along_dim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_take_along_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_take_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_take_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_tan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_tan_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_tanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_tanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_tensor_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_tensor_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_tensordot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_tensordot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_tile_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_tile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_to_sparse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_to_sparse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_topk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_trace_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_trace_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_transpose_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_transpose_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_trapz_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_trapz_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_triangular_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_triangular_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_tril_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_tril_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_triu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_triu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_true_divide_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_true_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_trunc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_unfold_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_unsqueeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_unsqueeze_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_var_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_var_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_var_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_var_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_vdot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_vdot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_view_as_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_view_as_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_view_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_view_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_view_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_view_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_vsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_vsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_vstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_vstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_where_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_where_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_xlogy_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_fail_gradgrad_zero__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_fail_gradgrad_zero__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does support gradgrad'
test_fn_grad___getitem___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad___getitem___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad___radd___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad___radd___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad___rdiv___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad___rdiv___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad___rmatmul___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad___rmod___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad___rmul___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad___rmul___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad___rpow___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad___rpow___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad___rsub___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad___rsub___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_abs_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_abs_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_acos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_acos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_acosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_acosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_add_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_addbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_addcdiv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_addcdiv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_addcmul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_addcmul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_addmm_decomposed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_addmm_decomposed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_addmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_addmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_addmv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_addr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_addr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_all_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_all_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_amax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_amin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_aminmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "onlyOnCPUAndCUDA: doesn't run on xpu"
test_fn_grad_angle_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_angle_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_any_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_any_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_argmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_argmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_asin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_asin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_asinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_asinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_atan2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_atan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_atan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_atanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_atanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_baddbmm_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_bitwise_left_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_bitwise_right_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_block_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_block_diag_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_bmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_bmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_broadcast_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_broadcast_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_broadcast_to_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_broadcast_to_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cat_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cdist_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_ceil_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cholesky_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cholesky_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_chunk_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_chunk_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_clamp_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_clamp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_clone_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_clone_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_complex_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_conj_physical_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_conj_physical_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_conj_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_contiguous_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_contiguous_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_copysign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_corrcoef_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_corrcoef_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_count_nonzero_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_count_nonzero_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_cov_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cov_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cross_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cross_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cummax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_cummax_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummax_helper' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_cummin_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_cummin_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummin_helper' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_cumprod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cumprod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cumsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_cumulative_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_cumulative_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_deg2rad_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_diag_embed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_diag_embed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_diag_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_diagonal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_diagonal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_diff_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_diff_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_digamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_dist_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_dist_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_div_floor_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_div_floor_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_div_no_rounding_mode_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_div_no_rounding_mode_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_div_trunc_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_div_trunc_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_dot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_dsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_dsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_dstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_dstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_eig_xpu_float64 (__main__.TestGradientsXPU) ... /home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py:496: UserWarning: torch.eig is deprecated in favor of torch.linalg.eig and will be removed in a future PyTorch release.
torch.linalg.eig returns complex tensors of dtype cfloat or cdouble rather than real tensors mimicking complex tensors.
L, _ = torch.eig(A)
should be replaced with
L_complex = torch.linalg.eigvals(A)
and
L, V = torch.eig(A, eigenvectors=True)
should be replaced with
L_complex, V_complex = torch.linalg.eig(A) (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2882.)
  gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
ok
test_fn_grad_einsum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_einsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_eq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_eq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_erf_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_erfc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_erfinv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_exp2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_exp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_exp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_expand_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_expand_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_expand_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_expand_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_expm1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_fft_fft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fft_fft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_fftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fft_fftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_hfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fft_hfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_ifft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fft_ifft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_ifftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_irfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fft_irfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_irfftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_rfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_fill__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fill__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_flip_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_flip_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_fliplr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_fliplr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_flipud_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_flipud_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_float_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_float_power_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_floor_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_floor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_fmax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_fmin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_fmod_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_fmod_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_frac_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_frexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::frexp.Tensor_out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::frexp.Tensor_out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_gather_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_gather_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_ge_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_geqrf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_geqrf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_gradient_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_gradient_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_gt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_hsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_hsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_hstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_hstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_hypot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hypot.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hypot.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_i0_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::i0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::i0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_igamma_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::igamma.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::igamma.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_igamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_igammac_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::igammac.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::igammac.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_igammac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_imag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_index_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_index_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_index_copy_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_index_copy_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_index_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_index_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_index_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_index_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_index_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_index_select_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_inner_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_inner_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_inverse_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_isin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_kron_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_kron_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_kthvalue_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_le_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_lerp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_lerp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_lgamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_cholesky_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_cholesky_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_cond_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_cond_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_det_singular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_det_singular_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::lu_unpack' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::lu_unpack' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_det_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_det_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_linalg_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_eig_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_eigh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_eigh_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_eigh' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_eigh' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_eigvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_eigvals_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_eigvalsh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_eigvalsh_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_eigh' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_eigh' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_householder_product_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_linalg_inv_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_inv_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_inv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_inv_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_lstsq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_lstsq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_linalg_matrix_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_matrix_norm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_matrix_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_matrix_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_matrix_rank_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_matrix_rank_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_linalg_matrix_rank_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_matrix_rank_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_linalg_multi_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_multi_dot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_pinv_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_pinv_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_eigh' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_eigh' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_pinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_pinv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_qr_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_linalg_slogdet_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_slogdet_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_solve_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_svd_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_linalg_svdvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_linalg_tensorinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_tensorinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_linalg_vector_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_linalg_vector_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_log10_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_log10_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_log1p_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_log2_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_log2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_log_softmax_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_log_softmax_dtype_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_log_softmax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_log_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_log_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_logaddexp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logaddexp2.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logaddexp2.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_logaddexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logaddexp.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logaddexp.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_logcumsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_logcumsumexp' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_logcumsumexp' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_logdet_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_logical_not_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_logical_not_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_logit_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logit' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logit' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_logsumexp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_lt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_lu_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_lu_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::lu_unpack' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::lu_unpack' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_lu_unpack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_lu_unpack_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_lu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_lu_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_masked_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_masked_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_masked_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_masked_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_masked_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_masked_select_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_matmul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_matrix_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::matrix_exp' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::matrix_exp' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_max_binary_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_max_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_max_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_maximum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_mean_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_median_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::median.dim_values' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::median.dim_values' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_meshgrid_list_of_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_meshgrid_variadic_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_min_binary_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_min_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_min_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_minimum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_mm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_mm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_mode_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_movedim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_movedim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_msort_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_mul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_mul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_mv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_mv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_mvlgamma_mvlgamma_p_1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_mvlgamma_mvlgamma_p_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_mvlgamma_mvlgamma_p_5_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_nan_to_num_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nan_to_num.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nan_to_num.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_nanmean_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nanmedian_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nanmedian' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nanmedian' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_nanquantile_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nansum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_narrow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_narrow_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_ne_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_ne_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_neg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nextafter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_cosine_similarity_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_gelu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_hardshrink_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_hardswish_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hardswish' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hardswish' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_nn_functional_hardtanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_interpolate_bicubic_xpu_float64 (__main__.TestGradientsXPU) ... /home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
ok
test_fn_grad_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_leaky_relu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_logsigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_mse_loss_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_nll_loss_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_normalize_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_pad_circular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_nn_functional_pad_circular_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_pad_constant_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_nn_functional_pad_constant_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_pad_reflect_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_nn_functional_pad_replicate_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_nn_functional_pad_replicate_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::replication_pad1d.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::replication_pad1d.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_nn_functional_relu6_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_relu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_norm_fro_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_norm_fro_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_norm_inf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_norm_inf_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::count_nonzero.dim_IntList' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::count_nonzero.dim_IntList' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_norm_nuc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_norm_nuc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_norm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_ormqr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_ormqr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_outer_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_outer_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_permute_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_permute_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_pinverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_pinverse_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_polar_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::polar.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::polar.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_polygamma_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_polygamma_polygamma_n_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_polygamma_polygamma_n_2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_polygamma_polygamma_n_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_polygamma_polygamma_n_4_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_positive_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_positive_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_pow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_pow_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_prod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_prod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_qr_xpu_float64 (__main__.TestGradientsXPU) ... /home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py:496: UserWarning: torch.qr is deprecated in favor of torch.linalg.qr and will be removed in a future PyTorch release.
The boolean parameter 'some' has been replaced with a string parameter 'mode'.
Q, R = torch.qr(A, some)
should be replaced with
Q, R = torch.linalg.qr(A, 'reduced' if some else 'complete') (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:1931.)
  gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
ERROR
test_fn_grad_quantile_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_rad2deg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_ravel_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_ravel_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_reciprocal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_reciprocal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_remainder_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_remainder_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_renorm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_renorm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_repeat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_repeat_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_reshape_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_reshape_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_reshape_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_reshape_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_resize__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_resize__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_resize_as__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_resize_as__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_resolve_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_resolve_conj_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_resolve_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_resolve_neg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_roll_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_roll_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_rot90_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_rot90_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_round_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_rsqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_rsqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_rsub_rsub_scalar_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_rsub_rsub_tensor_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_rsub_rsub_tensor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_scatter_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_scatter_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_select_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_sgn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sgn_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_sigmoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_sign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_signbit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_sin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_sinc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sinc_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sinc.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sinc.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_sinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_softmax_with_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_softmax_with_dtype_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_softmax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_solve_xpu_float64 (__main__.TestGradientsXPU) ... /home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py:496: UserWarning: torch.solve is deprecated in favor of torch.linalg.solveand will be removed in a future PyTorch release.
torch.linalg.solve has its arguments reversed and does not return the LU factorization.
To get the LU factorization see torch.lu, which can be used with torch.lu_solve or torch.lu_unpack.
X = torch.solve(B, A).solution
should be replaced with
X = torch.linalg.solve(A, B) (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:758.)
  gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
ok
test_fn_grad_sort_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sort.stable' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sort.stable' is only available for these backends: [CPU, QuantizedCPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nQuantizedCPU: registered at aten/src/ATen/RegisterQuantizedCPU.cpp:1068 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_entr_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_entr.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_entr.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_special_i0e_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_i0e.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i0e.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_i1_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_i1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_i1e_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_i1e.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i1e.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_ndtr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_special_ndtri_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_ndtri.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_ndtri.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_polygamma_special_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_special_xlog1py_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_xlog1py.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_xlog1py.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_zeta_grad_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_zeta.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_zeta.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_special_zeta_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_grad_split_list_args_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_split_list_args_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_split_with_sizes_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_split_with_sizes_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_split_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_sqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_square_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_square_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_squeeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_squeeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_stack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_stack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_std_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_std_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_std_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_std_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_sub_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sub_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_sum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_sum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_svd_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_symeig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_symeig_xpu_float64 (__main__.TestGradientsXPU) ... /home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py:5878: UserWarning: torch.symeig is deprecated in favor of torch.linalg.eigh and will be removed in a future PyTorch release.
The default behavior has changed from using the upper triangular portion of the matrix by default to using the lower triangular portion.
L, _ = torch.symeig(A, upper=upper)
should be replaced with
L = torch.linalg.eigvalsh(A, UPLO='U' if upper else 'L')
and
L, V = torch.symeig(A, eigenvectors=True)
should be replaced with
L, V = torch.linalg.eigh(A, UPLO='U' if upper else 'L') (Triggered internally at  ../aten/src/ATen/native/BatchLinearAlgebra.cpp:2487.)
  return op(input + input.conj().transpose(-2, -1), *args, **kwargs)
ok
test_fn_grad_t_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_t_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_take_along_dim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_take_along_dim_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_take_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_take_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_tan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_tan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_tanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_tanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_tensor_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_tensor_split_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_tensordot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_tensordot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_tile_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_tile_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_to_sparse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_to_sparse_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::to_sparse' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::to_sparse' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_topk_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_trace_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_trace_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_transpose_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_transpose_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_trapz_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_trapz_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_triangular_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_triangular_solve_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_tril_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_tril_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_triu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_triu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_true_divide_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_true_divide_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_trunc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_unfold_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::unfold_backward' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::unfold_backward' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_unsqueeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_unsqueeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_var_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_var_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_grad_var_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_var_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_grad_vdot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_vdot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::vdot' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::vdot' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: fallthrough registered at ../aten/src/ATen/ConjugateFallback.cpp:22 [kernel]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_view_as_complex_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_view_as_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_view_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_view_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_view_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_view_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_vsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_vsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_vstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_vstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_where_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_where_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_grad_xlogy_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::xlogy.OutTensor' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::xlogy.OutTensor' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_grad_zero__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_grad_zero__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad___getitem___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad___getitem___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad___radd___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad___radd___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad___rdiv___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad___rdiv___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad___rmatmul___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad___rmod___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad___rmul___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad___rmul___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad___rpow___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad___rpow___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad___rsub___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad___rsub___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_abs_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_abs_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_acos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_acos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_acosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_acosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_add_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_addbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_addcdiv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_addcdiv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_addcmul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_addcmul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_addmm_decomposed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_addmm_decomposed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_addmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_addmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_addmv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_addr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_addr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_all_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_all_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_amax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_amin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_aminmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "onlyOnCPUAndCUDA: doesn't run on xpu"
test_fn_gradgrad_angle_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_angle_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_any_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_any_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_argmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_argmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_asin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_asin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_asinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_asinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_atan2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_atan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_atan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_atanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_atanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_baddbmm_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_bitwise_left_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_bitwise_right_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_block_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_block_diag_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_bmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_bmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_broadcast_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_broadcast_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_broadcast_to_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_broadcast_to_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cat_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cdist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support gradgrad'
test_fn_gradgrad_ceil_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cholesky_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cholesky_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_chunk_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_chunk_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_clamp_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_clamp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_clone_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_clone_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_complex_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_conj_physical_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_conj_physical_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_conj_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_contiguous_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_contiguous_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_copysign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_corrcoef_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_corrcoef_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_count_nonzero_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_count_nonzero_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_cov_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cov_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cross_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cross_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cummax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_cummax_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummax_helper' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_cummin_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_cummin_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummin_helper' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_cumprod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cumprod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cumsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_cumulative_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_cumulative_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_deg2rad_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_diag_embed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_diag_embed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_diag_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_diagonal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_diagonal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_diff_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_diff_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_digamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_dist_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_dist_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_div_floor_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_div_floor_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_div_no_rounding_mode_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_div_no_rounding_mode_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_div_trunc_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_div_trunc_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_dot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_dsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_dsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_dstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_dstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_eig_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_einsum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_einsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_eq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_eq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_erf_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_erfc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_erfinv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_exp2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_exp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_exp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_expand_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_expand_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_expand_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_expand_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_expm1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_fft_fft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fft_fft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_fftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fft_fftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_hfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fft_hfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_ifft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fft_ifft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_ifftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_irfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fft_irfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_irfftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_rfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_fill__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fill__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_flip_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_flip_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_fliplr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_fliplr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_flipud_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_flipud_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_float_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_float_power_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_floor_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_floor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_fmax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_fmin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_fmod_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_fmod_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_frac_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_frexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::frexp.Tensor_out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::frexp.Tensor_out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_gather_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_gather_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_ge_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_geqrf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_geqrf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_gradient_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_gradient_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_gt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_hsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_hsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_hstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_hstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_hypot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hypot.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hypot.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_i0_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::i0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::i0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_igamma_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::igamma.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::igamma.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_igamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_igammac_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::igammac.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::igammac.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_igammac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_imag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_index_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_index_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_index_copy_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_index_copy_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_index_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_index_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_index_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_index_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_index_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_index_select_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_inner_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_inner_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_inverse_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_isin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_kron_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_kron_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_kthvalue_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_le_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_lerp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_lerp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_lgamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_cholesky_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_cholesky_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_cond_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_cond_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_det_singular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_det_singular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_linalg_det_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_det_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_linalg_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_eig_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_eigh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_eigh_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_eigh' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_eigh' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_eigvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_eigvals_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_eigvalsh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_eigvalsh_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_eigh' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_eigh' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_householder_product_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_linalg_inv_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_inv_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_inv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_inv_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_lstsq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_lstsq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_linalg_matrix_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_matrix_norm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_matrix_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_matrix_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_matrix_rank_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_matrix_rank_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_linalg_matrix_rank_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_matrix_rank_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_linalg_multi_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_multi_dot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_pinv_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_pinv_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_eigh' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_eigh' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_pinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_pinv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_qr_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_linalg_slogdet_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_slogdet_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_solve_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_svd_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_linalg_svdvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_linalg_tensorinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_tensorinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_linalg_vector_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_linalg_vector_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_log10_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_log10_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_log1p_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_log2_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_log2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_log_softmax_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_log_softmax_dtype_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_log_softmax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_log_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_log_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_logaddexp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logaddexp2.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logaddexp2.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_logaddexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logaddexp.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logaddexp.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_logcumsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_logcumsumexp' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_logcumsumexp' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_logdet_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_logical_not_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_logical_not_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_logit_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logit' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logit' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_logsumexp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_lt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_lu_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_lu_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::lu_unpack' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::lu_unpack' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_lu_unpack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_lu_unpack_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_lu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_lu_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_masked_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_masked_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_masked_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_masked_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_masked_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_masked_select_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_matmul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_matrix_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::matrix_exp' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::matrix_exp' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_max_binary_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_max_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_max_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_maximum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_mean_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_median_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::median.dim_values' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::median.dim_values' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_meshgrid_list_of_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_meshgrid_variadic_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_min_binary_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_min_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_min_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_minimum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_mm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_mm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_mode_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_movedim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_movedim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_msort_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_mul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_mul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_mv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_mv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_mvlgamma_mvlgamma_p_1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_mvlgamma_mvlgamma_p_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_mvlgamma_mvlgamma_p_5_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_nan_to_num_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nan_to_num.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nan_to_num.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_nanmean_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nanmedian_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nanmedian' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nanmedian' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_nanquantile_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nansum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_narrow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_narrow_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_ne_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_ne_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_neg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nextafter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_cosine_similarity_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_gelu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support gradgrad'
test_fn_gradgrad_nn_functional_hardshrink_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_hardswish_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support gradgrad'
test_fn_gradgrad_nn_functional_hardtanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_interpolate_bicubic_xpu_float64 (__main__.TestGradientsXPU) ... /home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3631: UserWarning: Default upsampling behavior when mode=bicubic is changed to align_corners=False since 0.4.0. Please specify align_corners=True if the old behavior is desired. See the documentation of nn.Upsample for details.
  warnings.warn(
/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py:3679: UserWarning: The default behavior for interpolate/upsample with float scale_factor changed in 1.6.0 to align with other frameworks/libraries, and now uses scale_factor directly, instead of relying on the computed output size. If you wish to restore the old behavior, please set recompute_scale_factor=True. See the documentation of nn.Upsample for details. 
  warnings.warn(
ok
test_fn_gradgrad_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_leaky_relu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_logsigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_mse_loss_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_nll_loss_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_normalize_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_pad_circular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_nn_functional_pad_circular_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_pad_constant_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_nn_functional_pad_constant_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_pad_reflect_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_pad_replicate_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_nn_functional_pad_replicate_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::replication_pad1d.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::replication_pad1d.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_nn_functional_relu6_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_relu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_norm_fro_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_norm_fro_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_norm_inf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_norm_inf_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::count_nonzero.dim_IntList' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::count_nonzero.dim_IntList' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_norm_nuc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_norm_nuc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_norm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_ormqr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_ormqr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_outer_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_outer_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_permute_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_permute_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_pinverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_pinverse_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_polar_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::polar.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::polar.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_polygamma_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_polygamma_polygamma_n_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_polygamma_polygamma_n_2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_polygamma_polygamma_n_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_polygamma_polygamma_n_4_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_positive_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_positive_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_pow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_pow_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_prod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_prod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_qr_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_quantile_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_rad2deg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_ravel_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_ravel_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_reciprocal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_reciprocal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_remainder_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_remainder_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_renorm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_renorm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_repeat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_repeat_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_reshape_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_reshape_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_reshape_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_reshape_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_resize__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_resize__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_resize_as__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_resize_as__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_resolve_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_resolve_conj_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_resolve_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_resolve_neg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_roll_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_roll_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_rot90_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_rot90_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_round_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_rsqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_rsqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_rsub_rsub_scalar_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_rsub_rsub_tensor_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_rsub_rsub_tensor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_scatter_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_scatter_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_select_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_sgn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sgn_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_sigmoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_sign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_signbit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_sin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_sinc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sinc_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sinc.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sinc.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_sinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_softmax_with_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_softmax_with_dtype_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_softmax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_solve_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_sort_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sort.stable' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sort.stable' is only available for these backends: [CPU, QuantizedCPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nQuantizedCPU: registered at aten/src/ATen/RegisterQuantizedCPU.cpp:1068 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_entr_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_entr.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_entr.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_special_i0e_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_i0e.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i0e.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_i1_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_i1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_i1e_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_i1e.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i1e.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_ndtr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_special_ndtri_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_ndtri.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_ndtri.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_polygamma_special_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_special_xlog1py_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_xlog1py.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_xlog1py.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_zeta_grad_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_zeta.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_zeta.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_special_zeta_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_fn_gradgrad_split_list_args_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_split_list_args_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_split_with_sizes_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_split_with_sizes_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_split_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_sqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_square_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_square_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_squeeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_squeeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_stack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_stack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_std_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_std_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_std_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_std_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_sub_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sub_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_sum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_sum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_svd_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_symeig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_symeig_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_t_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_t_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_take_along_dim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_take_along_dim_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_take_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_take_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_tan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_tan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_tanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_tanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_tensor_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_tensor_split_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_tensordot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_tensordot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_tile_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_tile_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_to_sparse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_to_sparse_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::to_sparse' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::to_sparse' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_topk_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_fn_gradgrad_trace_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_trace_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_transpose_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_transpose_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_trapz_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_trapz_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_triangular_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_triangular_solve_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_tril_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_tril_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_triu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_triu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_true_divide_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_true_divide_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_trunc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_unfold_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::unfold_backward' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::unfold_backward' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_unsqueeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_unsqueeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_var_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_var_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_fn_gradgrad_var_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_var_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_vdot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_vdot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::vdot' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::vdot' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: fallthrough registered at ../aten/src/ATen/ConjugateFallback.cpp:22 [kernel]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_view_as_complex_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_view_as_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_view_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_view_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_view_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_view_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_vsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_vsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_vstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_vstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_where_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_where_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_fn_gradgrad_xlogy_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::xlogy.OutTensor' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::xlogy.OutTensor' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_fn_gradgrad_zero__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_fn_gradgrad_zero__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD___getitem___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD___getitem___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with index that does not support it.'
test_forward_mode_AD___radd___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD___radd___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD___rdiv___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD___rdiv___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD___rmatmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with mv that does not support it.'
test_forward_mode_AD___rmod___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD___rmul___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD___rmul___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD___rpow___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD___rpow___xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD___rsub___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD___rsub___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with rsub that does not support it.'
test_forward_mode_AD_abs_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_abs_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_acos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_acos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_acosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_acosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_add_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_addbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_addcdiv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_addcdiv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_addcmul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_addcmul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_addmm_decomposed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_addmm_decomposed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_addmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_addmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_addmv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_addr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_addr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_all_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_all_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_amax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with amax that does not support it.'
test_forward_mode_AD_amin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with amin that does not support it.'
test_forward_mode_AD_aminmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "onlyOnCPUAndCUDA: doesn't run on xpu"
test_forward_mode_AD_angle_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_angle_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_any_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_any_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_argmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_argmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_asin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_asin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_asinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_asinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_atan2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with atan2 that does not support it.'
test_forward_mode_AD_atan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_atan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_atanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_atanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_baddbmm_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_bitwise_left_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_bitwise_right_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_block_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_block_diag_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_bmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_bmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_broadcast_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_broadcast_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_broadcast_to_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_broadcast_to_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cat_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cdist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _cdist_forward that does not support it.'
test_forward_mode_AD_ceil_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cholesky_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cholesky_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with cholesky that does not support it.'
test_forward_mode_AD_chunk_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_chunk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with split that does not support it.'
test_forward_mode_AD_clamp_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_clamp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with clamp that does not support it.'
test_forward_mode_AD_clone_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_clone_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_complex_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_conj_physical_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_conj_physical_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_conj_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_contiguous_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_contiguous_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_copysign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_corrcoef_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_corrcoef_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with diag that does not support it.'
test_forward_mode_AD_cos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_count_nonzero_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_count_nonzero_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_cov_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cov_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cross_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cross_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cummax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_cummax_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummax_helper' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_cummin_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_cummin_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummin_helper' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_cumprod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cumprod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cumsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_cumulative_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_cumulative_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_deg2rad_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_diag_embed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_diag_embed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with diag that does not support it.'
test_forward_mode_AD_diagonal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_diagonal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_diff_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_diff_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_digamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_dist_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_dist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with dist that does not support it.'
test_forward_mode_AD_div_floor_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_div_floor_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_div_no_rounding_mode_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_div_no_rounding_mode_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_div_trunc_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_div_trunc_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_dot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_dsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_dsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_dstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_dstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with eig that does not support it.'
test_forward_mode_AD_einsum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_einsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_eq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_eq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_erf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with erf that does not support it.'
test_forward_mode_AD_erfc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with erfc that does not support it.'
test_forward_mode_AD_erfinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with erfinv that does not support it.'
test_forward_mode_AD_exp2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_exp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_exp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_expand_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_expand_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_expand_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_expand_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_expm1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_fft_fft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fft_fft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_fft_fftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fft_fftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with constant_pad_nd that does not support it.'
test_forward_mode_AD_fft_hfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fft_hfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_fft_ifft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fft_ifft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_fft_ifftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with constant_pad_nd that does not support it.'
test_forward_mode_AD_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with constant_pad_nd that does not support it.'
test_forward_mode_AD_fft_irfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fft_irfft_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_fft_irfftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_fft_rfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with constant_pad_nd that does not support it.'
test_forward_mode_AD_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with constant_pad_nd that does not support it.'
test_forward_mode_AD_fill__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fill__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_flip_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_flip_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_fliplr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_fliplr_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_flipud_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_flipud_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_float_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_float_power_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_floor_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_floor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_fmax_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_fmin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_fmod_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with fmod that does not support it.'
test_forward_mode_AD_fmod_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_frac_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_frexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::frexp.Tensor_out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::frexp.Tensor_out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_gather_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_gather_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_ge_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_geqrf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_geqrf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_gradient_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_gradient_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_gt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_hsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_hsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_hstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_hstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_hypot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hypot.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hypot.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_i0_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::i0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::i0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_igamma_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::igamma.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::igamma.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_igamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_igammac_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::igammac.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::igammac.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_igammac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_imag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_index_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_index_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_index_copy_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_index_copy_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_index_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_index_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_index_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_index_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_index_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_index_select_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_inner_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_inner_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with inverse that does not support it.'
test_forward_mode_AD_isin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_kron_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_kron_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_kthvalue_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_le_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_lerp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_lerp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_lgamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_linalg_cholesky_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_cholesky_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_cholesky_ex' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_cholesky_ex' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_cond_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_cond_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_linalg_det_singular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_det_singular_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::lu_unpack' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::lu_unpack' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_det_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_det_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_linalg_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with linalg_eig that does not support it.'
test_forward_mode_AD_linalg_eigh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_eigh_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_eigh' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_eigh' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_eigvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_eigvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with linalg_eig that does not support it.'
test_forward_mode_AD_linalg_eigvalsh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_eigvalsh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_linalg_householder_product_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with linalg_householder_product that does not support it.'
test_forward_mode_AD_linalg_inv_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_inv_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_inv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_inv_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_lstsq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_lstsq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_linalg_matrix_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_matrix_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_linalg_matrix_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_matrix_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_matrix_rank_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_matrix_rank_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_linalg_matrix_rank_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_matrix_rank_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_linalg_multi_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_multi_dot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_linalg_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_pinv_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_pinv_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_linalg_pinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_pinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_linalg_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with linalg_qr that does not support it.'
test_forward_mode_AD_linalg_slogdet_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_slogdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with linalg_slogdet that does not support it.'
test_forward_mode_AD_linalg_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_solve_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_linalg_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_linalg_svdvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_linalg_tensorinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_tensorinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::_linalg_inv_out_helper_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_linalg_inv_out_helper_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_linalg_vector_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_linalg_vector_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_log10_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_log10_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_log1p_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_log2_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_log2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_log_softmax_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_log_softmax_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _log_softmax that does not support it.'
test_forward_mode_AD_log_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _log_softmax that does not support it.'
test_forward_mode_AD_log_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_log_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_logaddexp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logaddexp2.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logaddexp2.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_logaddexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logaddexp.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logaddexp.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_logcumsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::_logcumsumexp' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_logcumsumexp' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_logdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with logdet that does not support it.'
test_forward_mode_AD_logical_not_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_logical_not_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_logit_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logit' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logit' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_logsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with logsumexp that does not support it.'
test_forward_mode_AD_lt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_lu_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_lu_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::lu_unpack' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::lu_unpack' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_lu_unpack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_lu_unpack_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_lu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_lu_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_masked_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_masked_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_masked_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_masked_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_masked_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_masked_select_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_matmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with mv that does not support it.'
test_forward_mode_AD_matrix_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::matrix_exp' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::matrix_exp' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_max_binary_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_max_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_max_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_maximum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_mean_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_median_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with median that does not support it.'
test_forward_mode_AD_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_meshgrid_list_of_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_meshgrid_variadic_tensors_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_min_binary_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_min_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_min_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_minimum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_mm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_mm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_mode_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_movedim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_movedim_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_msort_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_mul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_mul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_mv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_mv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with mv that does not support it.'
test_forward_mode_AD_mvlgamma_mvlgamma_p_1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_mvlgamma_mvlgamma_p_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_mvlgamma_mvlgamma_p_5_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_nan_to_num_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nan_to_num.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nan_to_num.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_nanmean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with nansum that does not support it.'
test_forward_mode_AD_nanmedian_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::nanmedian' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nanmedian' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_nanquantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with sort that does not support it.'
test_forward_mode_AD_nansum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with nansum that does not support it.'
test_forward_mode_AD_narrow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_narrow_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_ne_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_ne_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_neg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with neg that does not support it.'
test_forward_mode_AD_nextafter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_cosine_similarity_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_gelu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with gelu that does not support it.'
test_forward_mode_AD_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_hardshrink_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_nn_functional_hardswish_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hardswish' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hardswish' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_nn_functional_hardtanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_interpolate_bicubic_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with upsample_bicubic2d that does not support it.'
test_forward_mode_AD_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_leaky_relu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_nn_functional_logsigmoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with log_sigmoid_forward that does not support it.'
test_forward_mode_AD_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_nn_functional_mse_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with mse_loss that does not support it.'
test_forward_mode_AD_nn_functional_nll_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with nll_loss2d_forward that does not support it.'
test_forward_mode_AD_nn_functional_normalize_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with norm that does not support it.'
test_forward_mode_AD_nn_functional_pad_circular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_nn_functional_pad_circular_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_nn_functional_pad_constant_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_nn_functional_pad_constant_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with constant_pad_nd that does not support it.'
test_forward_mode_AD_nn_functional_pad_reflect_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with reflection_pad1d that does not support it.'
test_forward_mode_AD_nn_functional_pad_replicate_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_nn_functional_pad_replicate_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::replication_pad1d.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::replication_pad1d.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_nn_functional_relu6_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_nn_functional_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with relu that does not support it.'
test_forward_mode_AD_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with softplus that does not support it.'
test_forward_mode_AD_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_norm_fro_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_norm_fro_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with norm that does not support it.'
test_forward_mode_AD_norm_inf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_norm_inf_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::count_nonzero.dim_IntList' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::count_nonzero.dim_IntList' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_norm_nuc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_norm_nuc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with norm that does not support it.'
test_forward_mode_AD_ormqr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_ormqr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_outer_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_outer_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_permute_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_permute_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_pinverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_pinverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_polar_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::polar.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::polar.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_polygamma_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_polygamma_polygamma_n_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_polygamma_polygamma_n_2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_polygamma_polygamma_n_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_polygamma_polygamma_n_4_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_positive_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_positive_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_pow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_pow_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_prod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_prod_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with prod that does not support it.'
test_forward_mode_AD_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_put_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with put_ that does not support it.'
test_forward_mode_AD_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with linalg_qr that does not support it.'
test_forward_mode_AD_quantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with sort that does not support it.'
test_forward_mode_AD_rad2deg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with rad2deg that does not support it.'
test_forward_mode_AD_ravel_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_ravel_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_reciprocal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_reciprocal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_remainder_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_remainder_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_renorm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_renorm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_repeat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_repeat_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_reshape_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_reshape_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_reshape_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_reshape_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_resize__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_resize__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_resize_as__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_resize_as__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_resolve_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_resolve_conj_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_resolve_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_resolve_neg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_roll_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_roll_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_rot90_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_rot90_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_round_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_rsqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_rsqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_rsub_rsub_scalar_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with rsub that does not support it.'
test_forward_mode_AD_rsub_rsub_tensor_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_rsub_rsub_tensor_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with rsub that does not support it.'
test_forward_mode_AD_scatter_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_scatter_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with scatter_add that does not support it.'
test_forward_mode_AD_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_scatter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with scatter that does not support it.'
test_forward_mode_AD_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_select_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_sgn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sgn_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_sigmoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_sign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_signbit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_sin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_sinc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sinc_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sinc.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sinc.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_sinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_softmax_with_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_softmax_with_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _softmax that does not support it.'
test_forward_mode_AD_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _softmax that does not support it.'
test_forward_mode_AD_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with solve that does not support it.'
test_forward_mode_AD_sort_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_special_entr_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_entr.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_entr.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_special_erfcx_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_special_i0e_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::special_i0e.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i0e.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_special_i1_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::special_i1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_special_i1e_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::special_i1e.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_i1e.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_special_ndtr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with erf that does not support it.'
test_forward_mode_AD_special_ndtri_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::special_ndtri.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_ndtri.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_special_polygamma_special_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_special_xlog1py_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::special_xlog1py.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_xlog1py.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_special_zeta_grad_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::special_zeta.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_zeta.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_special_zeta_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_forward_mode_AD_split_list_args_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_split_list_args_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with split_with_sizes that does not support it.'
test_forward_mode_AD_split_with_sizes_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_split_with_sizes_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with split_with_sizes that does not support it.'
test_forward_mode_AD_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with split that does not support it.'
test_forward_mode_AD_sqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_square_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_square_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_squeeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_squeeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_stack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_stack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with stack that does not support it.'
test_forward_mode_AD_std_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_std_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_std_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_std_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with std that does not support it.'
test_forward_mode_AD_sub_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sub_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_sum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_sum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _svd_helper that does not support it.'
test_forward_mode_AD_symeig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_symeig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with symeig that does not support it.'
test_forward_mode_AD_t_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_t_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_take_along_dim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_take_along_dim_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_forward_mode_AD_take_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_take_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_tan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_tan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_tanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_tanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_tensor_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_tensor_split_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_tensordot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_tensordot_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_tile_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_tile_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_to_sparse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_to_sparse_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::to_sparse' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::to_sparse' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_topk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with topk that does not support it.'
test_forward_mode_AD_trace_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_trace_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_transpose_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_transpose_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_trapz_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_trapz_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_triangular_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_triangular_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with triangular_solve that does not support it.'
test_forward_mode_AD_tril_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_tril_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_triu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_triu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_true_divide_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_true_divide_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_trunc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_unfold_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::unfold_backward' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::unfold_backward' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_unsqueeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_unsqueeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_var_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_var_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_forward_mode_AD_var_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_var_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with var that does not support it.'
test_forward_mode_AD_vdot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_vdot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::vdot' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::vdot' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: fallthrough registered at ../aten/src/ATen/ConjugateFallback.cpp:22 [kernel]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: registered at ../aten/src/ATen/autocast_mode.cpp:470 [kernel]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_view_as_complex_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_view_as_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_view_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_view_as_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_view_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_view_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_vsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_vsplit_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_vstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_vstack_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_forward_mode_AD_where_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_where_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with _s_where that does not support it.'
test_forward_mode_AD_xlogy_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::xlogy.OutTensor' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::xlogy.OutTensor' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_forward_mode_AD_zero__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_forward_mode_AD_zero__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD___getitem___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD___getitem___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD___radd___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD___radd___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD___rdiv___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD___rdiv___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD___rmatmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD___rmod___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD___rmul___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD___rmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD___rpow___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD___rpow___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD___rsub___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD___rsub___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_abs_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_abs_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_acos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_acos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_acosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_acosh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_addbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_addcdiv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_addcdiv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_addcmul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_addcmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_addmm_decomposed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_addmm_decomposed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_addmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_addmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_addmv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_addr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_addr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_all_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_all_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_amax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_amin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_aminmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "onlyOnCPUAndCUDA: doesn't run on xpu"
test_inplace_forward_mode_AD_angle_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_angle_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_any_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_any_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_argmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_argmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_asin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_asin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_asinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_asinh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_atan2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with atan2_ that does not support it.'
test_inplace_forward_mode_AD_atan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_atan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_atanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_atanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_baddbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_bitwise_left_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_bitwise_right_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_block_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_block_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_bmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_bmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_broadcast_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_broadcast_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_broadcast_to_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_broadcast_to_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cdist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_ceil_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_cholesky_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cholesky_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_chunk_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_chunk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_clamp_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_clamp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with clamp_ that does not support it.'
test_inplace_forward_mode_AD_clone_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_clone_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_conj_physical_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_conj_physical_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_contiguous_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_contiguous_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_copysign_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_corrcoef_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_corrcoef_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_cosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_count_nonzero_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_count_nonzero_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_cov_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cov_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cross_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cross_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cummax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cummin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_cumprod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cumprod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_cumsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_cumulative_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_cumulative_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_deg2rad_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_diag_embed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_diag_embed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_diagonal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_diagonal_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_diff_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_diff_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_digamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_dist_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_dist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_div_floor_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_div_floor_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_div_no_rounding_mode_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_div_no_rounding_mode_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_div_trunc_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_div_trunc_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_dsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_dsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_dstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_dstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_einsum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_einsum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_eq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_eq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_erf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with erf_ that does not support it.'
test_inplace_forward_mode_AD_erfc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with erfc_ that does not support it.'
test_inplace_forward_mode_AD_erfinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with erfinv_ that does not support it.'
test_inplace_forward_mode_AD_exp2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_exp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_exp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_expand_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_expand_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_expand_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_expand_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_expm1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_fft_fft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fft_fft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_fftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fft_fftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_hfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fft_hfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_ifft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fft_ifft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_ifftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_irfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fft_irfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_irfftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_rfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fill__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fill__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_flip_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_flip_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fliplr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_fliplr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_flipud_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_flipud_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_float_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_float_power_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_floor_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_floor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_fmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_fmod_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with fmod_ that does not support it.'
test_inplace_forward_mode_AD_fmod_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_forward_mode_AD_frac_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_frexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_gather_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_gather_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_ge_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_geqrf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_geqrf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_gradient_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_gradient_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_gt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_hsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_hsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_hstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_hstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_hypot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hypot.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hypot.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_forward_mode_AD_i0_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::i0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::i0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_forward_mode_AD_igamma_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_igamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_igammac_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_igammac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_imag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_index_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_index_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_forward_mode_AD_index_copy_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_index_copy_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_index_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_index_fill_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_index_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_index_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_index_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_index_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_inner_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_inner_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_isin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_kron_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_kron_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_kthvalue_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_le_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_lerp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_lerp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_lgamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_linalg_cholesky_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_cholesky_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_cond_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_cond_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_det_singular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_det_singular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_det_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_det_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_eigh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_eigh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_eigvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_eigvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_eigvalsh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_eigvalsh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_householder_product_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_inv_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_inv_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_inv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_inv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_lstsq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_lstsq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_linalg_matrix_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_matrix_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_matrix_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_matrix_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_matrix_rank_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_matrix_rank_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_linalg_matrix_rank_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_matrix_rank_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_linalg_multi_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_multi_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_pinv_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_pinv_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_pinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_pinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_slogdet_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_slogdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_svdvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_tensorinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_tensorinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_linalg_vector_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_linalg_vector_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_log10_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_log10_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_log1p_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_log2_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_log2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_log_softmax_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_log_softmax_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_log_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_log_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_log_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_logaddexp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_logaddexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_logcumsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_logdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_logical_not_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_logical_not_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_logit_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logit_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logit_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_forward_mode_AD_logsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_lt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_lu_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_lu_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_lu_unpack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_lu_unpack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_lu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_lu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_masked_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_masked_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_masked_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_masked_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_masked_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_masked_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_matmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_matrix_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_max_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_max_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_max_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_maximum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_median_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_meshgrid_list_of_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_meshgrid_variadic_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_min_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_min_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_min_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_minimum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_mm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_mm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_mode_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_movedim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_movedim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_msort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_mul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_mul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_mv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_mv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_mvlgamma_mvlgamma_p_1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_mvlgamma_mvlgamma_p_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_forward_mode_AD_mvlgamma_mvlgamma_p_5_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_forward_mode_AD_nan_to_num_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nan_to_num.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nan_to_num.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_forward_mode_AD_nanmean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nanmedian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nanquantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nansum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_narrow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_narrow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_ne_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_ne_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_neg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with neg_ that does not support it.'
test_inplace_forward_mode_AD_nextafter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_cosine_similarity_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_forward_mode_AD_nn_functional_gelu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_hardshrink_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_hardswish_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_hardtanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_interpolate_bicubic_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_leaky_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_logsigmoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_mse_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_nll_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_normalize_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_pad_circular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_nn_functional_pad_circular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_pad_constant_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_nn_functional_pad_constant_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_pad_reflect_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_pad_replicate_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_nn_functional_pad_replicate_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_relu6_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_norm_fro_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_norm_fro_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_norm_inf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_norm_inf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_norm_nuc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_norm_nuc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_ormqr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_ormqr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_outer_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_outer_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_permute_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_permute_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_pinverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_pinverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_polar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_polygamma_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_polygamma_polygamma_n_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_forward_mode_AD_polygamma_polygamma_n_2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_forward_mode_AD_polygamma_polygamma_n_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_forward_mode_AD_polygamma_polygamma_n_4_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_forward_mode_AD_positive_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_positive_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_pow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_pow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_prod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_prod_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_put_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with put_ that does not support it.'
test_inplace_forward_mode_AD_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_quantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_rad2deg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with rad2deg_ that does not support it.'
test_inplace_forward_mode_AD_ravel_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_ravel_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_reciprocal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_reciprocal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_remainder_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_remainder_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_forward_mode_AD_renorm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_renorm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not_implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_forward_mode_AD_repeat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_repeat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_reshape_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_reshape_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_reshape_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_reshape_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_resize__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_resize__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_resize_as__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_resize_as__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_resolve_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_resolve_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_resolve_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_resolve_neg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_roll_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_roll_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_rot90_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_rot90_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_round_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_rsqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_rsqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_rsub_rsub_scalar_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_rsub_rsub_tensor_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_rsub_rsub_tensor_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_scatter_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_scatter_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with scatter_add_ that does not support it.'
test_inplace_forward_mode_AD_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_scatter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'not_implemented: Trying to use forward AD with scatter_ that does not support it.'
test_inplace_forward_mode_AD_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_sgn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sgn_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_sigmoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_forward_mode_AD_sign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_signbit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_sin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_sinc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sinc_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sinc.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sinc.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_forward_mode_AD_sinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_softmax_with_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_softmax_with_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_sort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_entr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_erfcx_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_forward_mode_AD_special_i0e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_i1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_i1e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_ndtr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_ndtri_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_polygamma_special_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_xlog1py_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_zeta_grad_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_special_zeta_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_forward_mode_AD_split_list_args_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_split_list_args_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_split_with_sizes_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_split_with_sizes_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_sqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_square_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_square_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_squeeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_squeeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_stack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_stack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_std_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_std_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_std_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_std_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_sub_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sub_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_sum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_sum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_symeig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_symeig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_t_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_t_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_take_along_dim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_take_along_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_take_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_take_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_tan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_tan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_tanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_tanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_tensor_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_tensor_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_tensordot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_tensordot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_tile_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_tile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_to_sparse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_to_sparse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_topk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_trace_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_trace_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_transpose_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_transpose_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_trapz_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_trapz_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_triangular_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_triangular_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_tril_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_tril_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_triu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_triu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_true_divide_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_true_divide_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_trunc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_unfold_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_unsqueeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_unsqueeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_forward_mode_AD_var_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_var_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_var_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_var_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_vdot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_vdot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_view_as_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_view_as_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_view_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_view_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_view_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_view_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_vsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_vsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_vstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_vstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_where_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_where_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_forward_mode_AD_xlogy_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::xlogy.OutTensor' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::xlogy.OutTensor' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_forward_mode_AD_zero__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_forward_mode_AD_zero__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad___getitem___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad___getitem___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad___radd___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad___radd___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad___rdiv___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad___rdiv___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad___rmatmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad___rmod___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad___rmul___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad___rmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad___rpow___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad___rpow___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad___rsub___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad___rsub___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_abs_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_abs_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_acos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_acos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_acosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_acosh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_addbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_addcdiv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_addcdiv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_addcmul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_addcmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_addmm_decomposed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_addmm_decomposed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_addmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_addmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_addmv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_addr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_addr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_all_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_all_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_amax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_amin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_aminmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "onlyOnCPUAndCUDA: doesn't run on xpu"
test_inplace_grad_angle_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_angle_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_any_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_any_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_argmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_argmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_asin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_asin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_asinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_asinh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_atan2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_atan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_atan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_atanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_atanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_baddbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_bitwise_left_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_bitwise_right_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_block_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_block_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_bmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_bmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_broadcast_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_broadcast_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_broadcast_to_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_broadcast_to_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cdist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_ceil_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_cholesky_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cholesky_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_chunk_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_chunk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_clamp_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_clamp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_clone_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_clone_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_conj_physical_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_conj_physical_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_contiguous_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_contiguous_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_copysign_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_corrcoef_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_corrcoef_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_cosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_count_nonzero_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_count_nonzero_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_cov_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cov_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cross_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cross_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cummax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cummin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_cumprod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cumprod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_cumsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_cumulative_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_cumulative_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_deg2rad_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_diag_embed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_diag_embed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_diagonal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_diagonal_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_diff_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_diff_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_digamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_dist_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_dist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_div_floor_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_div_floor_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_div_no_rounding_mode_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_div_no_rounding_mode_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_div_trunc_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_div_trunc_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_dsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_dsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_dstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_dstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_einsum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_einsum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_eq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_eq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_erf_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_erfc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_erfinv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_exp2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_exp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_exp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_expand_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_expand_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_expand_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_expand_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_expm1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_fft_fft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fft_fft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_fftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fft_fftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_hfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fft_hfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_ifft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fft_ifft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_ifftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_irfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fft_irfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_irfftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_rfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fill__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fill__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_flip_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_flip_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fliplr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_fliplr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_flipud_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_flipud_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_float_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_float_power_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_floor_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_floor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_fmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_fmod_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_fmod_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_frac_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_frexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_gather_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_gather_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_ge_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_geqrf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_geqrf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_gradient_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_gradient_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_gt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_hsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_hsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_hstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_hstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_hypot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hypot.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hypot.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_grad_i0_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::i0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::i0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_grad_igamma_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_igamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_igammac_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_igammac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_imag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_index_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_index_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_index_copy_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_index_copy_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_index_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_index_fill_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_index_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_index_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_index_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_index_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_inner_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_inner_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_isin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_kron_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_kron_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_kthvalue_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_le_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_lerp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_lerp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_lgamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_linalg_cholesky_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_cholesky_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_cond_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_cond_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_det_singular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_det_singular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_det_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_det_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_eigh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_eigh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_eigvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_eigvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_eigvalsh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_eigvalsh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_householder_product_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_inv_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_inv_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_inv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_inv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_lstsq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_lstsq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_linalg_matrix_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_matrix_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_matrix_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_matrix_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_matrix_rank_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_matrix_rank_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_linalg_matrix_rank_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_matrix_rank_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_linalg_multi_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_multi_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_pinv_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_pinv_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_pinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_pinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_slogdet_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_slogdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_svdvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_tensorinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_tensorinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_linalg_vector_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_linalg_vector_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_log10_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_log10_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_log1p_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_log2_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_log2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_log_softmax_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_log_softmax_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_log_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_log_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_log_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_logaddexp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_logaddexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_logcumsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_logdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_logical_not_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_logical_not_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_logit_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logit_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logit_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_grad_logsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_lt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_lu_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_lu_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_lu_unpack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_lu_unpack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_lu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_lu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_masked_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_masked_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_masked_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_masked_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_masked_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_masked_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_matmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_matrix_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_max_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_max_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_max_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_maximum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_median_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_meshgrid_list_of_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_meshgrid_variadic_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_min_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_min_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_min_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_minimum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_mm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_mm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_mode_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_movedim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_movedim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_msort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_mul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_mul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_mv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_mv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_mvlgamma_mvlgamma_p_1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_mvlgamma_mvlgamma_p_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_grad_mvlgamma_mvlgamma_p_5_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_grad_nan_to_num_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nan_to_num.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nan_to_num.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_grad_nanmean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nanmedian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nanquantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nansum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_narrow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_narrow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_ne_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_ne_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_neg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_nextafter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_cosine_similarity_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_nn_functional_gelu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_hardshrink_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_hardswish_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_hardtanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_interpolate_bicubic_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_leaky_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_logsigmoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_mse_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_nll_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_normalize_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_pad_circular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_nn_functional_pad_circular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_pad_constant_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_nn_functional_pad_constant_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_pad_reflect_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_pad_replicate_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_nn_functional_pad_replicate_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_relu6_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_norm_fro_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_norm_fro_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_norm_inf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_norm_inf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_norm_nuc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_norm_nuc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_ormqr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_ormqr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_outer_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_outer_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_permute_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_permute_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_pinverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_pinverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_polar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_polygamma_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_polygamma_polygamma_n_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_grad_polygamma_polygamma_n_2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_grad_polygamma_polygamma_n_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_grad_polygamma_polygamma_n_4_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_grad_positive_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_positive_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_pow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_pow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_prod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_prod_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_quantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_rad2deg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_ravel_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_ravel_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_reciprocal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_reciprocal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_remainder_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_remainder_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_renorm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_renorm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_grad_repeat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_repeat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_reshape_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_reshape_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_reshape_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_reshape_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_resize__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_resize__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_resize_as__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_resize_as__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_resolve_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_resolve_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_resolve_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_resolve_neg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_roll_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_roll_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_rot90_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_rot90_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_round_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_rsqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_rsqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_rsub_rsub_scalar_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_rsub_rsub_tensor_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_rsub_rsub_tensor_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_scatter_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_scatter_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_sgn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sgn_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_sigmoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_sign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_signbit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_sin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_sinc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sinc_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sinc.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sinc.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_grad_sinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_softmax_with_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_softmax_with_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_sort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_entr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_grad_special_i0e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_i1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_i1e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_ndtr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_ndtri_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_polygamma_special_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_xlog1py_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_zeta_grad_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_special_zeta_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_grad_split_list_args_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_split_list_args_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_split_with_sizes_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_split_with_sizes_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_sqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_square_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_square_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_squeeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_squeeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_stack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_stack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_std_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_std_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_std_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_std_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_sub_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sub_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_sum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_sum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_symeig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_symeig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_t_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_t_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_take_along_dim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_take_along_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_take_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_take_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_tan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_tan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_tanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_tanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_tensor_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_tensor_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_tensordot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_tensordot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_tile_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_tile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_to_sparse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_to_sparse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_topk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_trace_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_trace_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_transpose_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_transpose_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_trapz_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_trapz_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_triangular_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_triangular_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_tril_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_tril_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_triu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_triu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_true_divide_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_true_divide_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_trunc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_unfold_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_unsqueeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_unsqueeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_grad_var_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_var_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_var_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_var_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_vdot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_vdot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_view_as_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_view_as_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_view_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_view_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_view_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_view_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_vsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_vsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_vstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_vstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_where_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_where_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_grad_xlogy_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::xlogy.OutTensor' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::xlogy.OutTensor' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_grad_zero__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_grad_zero__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad___getitem___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad___getitem___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad___radd___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad___radd___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad___rdiv___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad___rdiv___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad___rmatmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad___rmod___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad___rmul___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad___rmul___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad___rpow___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad___rpow___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad___rsub___xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad___rsub___xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_abs_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_abs_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_acos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_acos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_acosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_acosh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_add_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_addbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_addcdiv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_addcdiv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_addcmul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_addcmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_addmm_decomposed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_addmm_decomposed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_addmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_addmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_addmv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_addr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_addr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_all_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_all_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_amax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_amin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_aminmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped "onlyOnCPUAndCUDA: doesn't run on xpu"
test_inplace_gradgrad_angle_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_angle_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_any_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_any_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_argmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_argmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_asin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_asin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_asinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_asinh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_atan2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_atan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_atan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_atanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_atanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_baddbmm_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_bitwise_left_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_bitwise_right_shift_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_block_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_block_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_bmm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_bmm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_broadcast_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_broadcast_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_broadcast_to_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_broadcast_to_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cdist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_ceil_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_cholesky_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cholesky_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_chunk_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_chunk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_clamp_scalar_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_clamp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_clone_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_clone_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_conj_physical_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_conj_physical_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_contiguous_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_contiguous_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_copysign_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_corrcoef_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_corrcoef_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cos_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cos_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_cosh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cosh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_count_nonzero_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_count_nonzero_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_cov_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cov_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cross_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cross_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cummax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cummin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_cumprod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cumprod_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_cumsum_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_cumulative_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_cumulative_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_deg2rad_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_diag_embed_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_diag_embed_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_diag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_diag_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_diagonal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_diagonal_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_diff_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_diff_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_digamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_dist_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_dist_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_div_floor_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_div_floor_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_div_no_rounding_mode_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_div_no_rounding_mode_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_div_trunc_rounding_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_div_trunc_rounding_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_dsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_dsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_dstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_dstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_einsum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_einsum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_eq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_eq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_erf_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_erfc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_erfinv_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_exp2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_exp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_exp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_expand_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_expand_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_expand_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_expand_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_expm1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_fft_fft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fft_fft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_fftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fft_fftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_hfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fft_hfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_ifft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fft_ifft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_ifftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_irfft_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fft_irfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_irfftn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_rfft_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fill__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fill__xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_flip_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_flip_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fliplr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_fliplr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_flipud_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_flipud_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_float_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_float_power_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_floor_divide_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_floor_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_fmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fmin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_fmod_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_fmod_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_frac_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_frexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_gather_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_gather_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_ge_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_geqrf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_geqrf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_gradient_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_gradient_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_gt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_hsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_hsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_hstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_hstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_hypot_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::hypot.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::hypot.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_gradgrad_i0_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::i0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::i0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: fallthrough registered at ../aten/src/ATen/core/NamedRegistrations.cpp:11 [kernel]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_1.cpp:9548 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_1.cpp:10664 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_gradgrad_igamma_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_igamma_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_igammac_grad_other_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_igammac_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_imag_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_index_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_index_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_index_copy_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_index_copy_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_index_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_index_fill_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_index_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_index_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_index_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_index_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_inner_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_inner_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_inverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_inverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_isin_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_kron_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_kron_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_kthvalue_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_le_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_lerp_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_lerp_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_lgamma_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_linalg_cholesky_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_cholesky_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_cholesky_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_cholesky_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_cond_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_cond_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_det_singular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_det_singular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_det_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_det_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_eig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_eig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_eigh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_eigh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_eigvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_eigvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_eigvalsh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_eigvalsh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_householder_product_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_inv_ex_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_inv_ex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_inv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_inv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_lstsq_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_lstsq_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_linalg_matrix_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_matrix_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_matrix_power_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_matrix_power_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_matrix_rank_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_matrix_rank_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_linalg_matrix_rank_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_matrix_rank_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_linalg_multi_dot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_multi_dot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_pinv_hermitian_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_pinv_hermitian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_pinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_pinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_slogdet_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_slogdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_svdvals_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_tensorinv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_tensorinv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_linalg_vector_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_linalg_vector_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_log10_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_log10_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_log1p_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_log2_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_log2_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_log_softmax_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_log_softmax_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_log_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_log_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_log_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_logaddexp2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_logaddexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_logcumsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_logdet_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_logical_not_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_logical_not_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_logit_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::logit_' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::logit_' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_4.cpp:8932 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_4.cpp:9308 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_gradgrad_logsumexp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_lt_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_lu_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_lu_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_lu_unpack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_lu_unpack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_lu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_lu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_masked_fill_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_masked_fill_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_masked_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_masked_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_masked_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_masked_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_matmul_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_matrix_exp_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_max_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_max_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_max_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_maximum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_median_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_meshgrid_list_of_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_meshgrid_variadic_tensors_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_min_binary_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_min_reduction_no_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_min_reduction_with_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_minimum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_mm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_mm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_mode_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_movedim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_movedim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_msort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_mul_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_mul_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_mv_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_mv_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_mvlgamma_mvlgamma_p_1_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_mvlgamma_mvlgamma_p_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_gradgrad_mvlgamma_mvlgamma_p_5_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_gradgrad_nan_to_num_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::nan_to_num.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::nan_to_num.out' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:2399 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_gradgrad_nanmean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nanmedian_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nanquantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nansum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_narrow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_narrow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_ne_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_ne_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_neg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_nextafter_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_cosine_similarity_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_nn_functional_gelu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_hardshrink_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_hardswish_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_hardtanh_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_interpolate_bicubic_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_leaky_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_logsigmoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_mse_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_nll_loss_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_normalize_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_pad_circular_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_nn_functional_pad_circular_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_pad_constant_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_nn_functional_pad_constant_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_pad_reflect_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_pad_replicate_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_nn_functional_pad_replicate_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_relu6_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_relu_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_norm_fro_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_norm_fro_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_norm_inf_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_norm_inf_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_norm_nuc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_norm_nuc_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_norm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_norm_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_ormqr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_ormqr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_outer_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_outer_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_permute_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_permute_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_pinverse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_pinverse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_polar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_polygamma_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_polygamma_polygamma_n_1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_gradgrad_polygamma_polygamma_n_2_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_gradgrad_polygamma_polygamma_n_3_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_gradgrad_polygamma_polygamma_n_4_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped!'
test_inplace_gradgrad_positive_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_positive_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_pow_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_pow_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_prod_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_prod_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_put_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_put_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_qr_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_qr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_quantile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_rad2deg_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_ravel_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_ravel_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_reciprocal_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_reciprocal_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_remainder_autodiffed_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_remainder_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_renorm_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_renorm_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::linalg_vector_norm' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::linalg_vector_norm' is only available for these backends: [CPU, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: fallthrough registered at ../aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_3.cpp:10141 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_3.cpp:11560 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_gradgrad_repeat_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_repeat_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_reshape_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_reshape_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_reshape_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_reshape_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_resize__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_resize__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_resize_as__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_resize_as__xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_resolve_conj_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_resolve_conj_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_resolve_neg_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_resolve_neg_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_roll_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_roll_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_rot90_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_rot90_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_round_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_rsqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_rsqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_rsub_rsub_scalar_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_rsub_rsub_tensor_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_rsub_rsub_tensor_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_scatter_add_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_scatter_add_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_scatter_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_scatter_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_select_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_select_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_sgn_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sgn_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_sigmoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sigmoid_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_sign_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_signbit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_sin_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sin_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_sinc_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sinc_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::sinc.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::sinc.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_2.cpp:10491 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_2.cpp:11425 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_gradgrad_sinh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sinh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_softmax_with_dtype_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_softmax_with_dtype_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_softmax_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_sort_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_entr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU) ... ERROR
test_inplace_gradgrad_special_i0e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_i1_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_i1e_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_ndtr_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_ndtri_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_polygamma_special_polygamma_n_0_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_xlog1py_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_zeta_grad_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_special_zeta_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! autograd not supported.'
test_inplace_gradgrad_split_list_args_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_split_list_args_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_split_with_sizes_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_split_with_sizes_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_sqrt_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sqrt_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_square_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_square_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_squeeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_squeeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_stack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_stack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_std_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_std_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_std_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_std_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_sub_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sub_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_sum_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_sum_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_svd_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_svd_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_symeig_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_symeig_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_t_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_t_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_take_along_dim_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_take_along_dim_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_take_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_take_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_tan_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_tan_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_tanh_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_tanh_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_tensor_split_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_tensor_split_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_tensordot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_tensordot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_tile_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_tile_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_to_sparse_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_to_sparse_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_topk_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_trace_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_trace_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_transpose_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_transpose_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_trapezoid_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_trapezoid_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_trapz_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_trapz_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_triangular_solve_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_triangular_solve_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_tril_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_tril_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_triu_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_triu_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_true_divide_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_true_divide_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_trunc_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_unfold_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_unfold_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_unsqueeze_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_unsqueeze_xpu_float64 (__main__.TestGradientsXPU) ... ok
test_inplace_gradgrad_var_mean_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_var_mean_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_var_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_var_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_vdot_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_vdot_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_view_as_complex_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_view_as_real_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_view_as_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_view_as_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_view_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_view_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_vsplit_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_vsplit_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_vstack_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_vstack_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_where_xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_where_xpu_float64 (__main__.TestGradientsXPU) ... skipped 'Skipped! Operation does not support inplace autograd.'
test_inplace_gradgrad_xlogy_xpu_float64 (__main__.TestGradientsXPU) ... skipped "not implemented: Could not run 'aten::xlogy.OutTensor' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::xlogy.OutTensor' is only available for these backends: [CPU, Meta, BackendSelect, Python, Named, Conjugate, Negative, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradXLA, AutogradLazy, AutogradXPU, AutogradMLC, AutogradHPU, AutogradNestedTensor, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, Tracer, UNKNOWN_TENSOR_TYPE_ID, Autocast, Batched, VmapMode].\n\nCPU: registered at aten/src/ATen/RegisterCPU.cpp:18433 [kernel]\nMeta: registered at aten/src/ATen/RegisterMeta.cpp:12703 [kernel]\nBackendSelect: fallthrough registered at ../aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at ../aten/src/ATen/core/PythonFallbackKernel.cpp:47 [backend fallback]\nNamed: registered at ../aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at ../aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at ../aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nADInplaceOrView: registered at ../torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:2505 [kernel]\nAutogradOther: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradCUDA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXLA: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradLazy: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradXPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradMLC: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradHPU: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradNestedTensor: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse1: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse2: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nAutogradPrivateUse3: registered at ../torch/csrc/autograd/generated/VariableType_0.cpp:8878 [autograd kernel]\nTracer: registered at ../torch/csrc/autograd/generated/TraceType_0.cpp:10257 [kernel]\nUNKNOWN_TENSOR_TYPE_ID: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:466 [backend fallback]\nAutocast: fallthrough registered at ../aten/src/ATen/autocast_mode.cpp:305 [backend fallback]\nBatched: registered at ../aten/src/ATen/BatchingRegistrations.cpp:1016 [backend fallback]\nVmapMode: fallthrough registered at ../aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\n"
test_inplace_gradgrad_zero__xpu_complex128 (__main__.TestGradientsXPU) ... skipped 'dtype not support on XPU'
test_inplace_gradgrad_zero__xpu_float64 (__main__.TestGradientsXPU) ... ok

======================================================================
ERROR: test_fn_fail_gradgrad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 396, in instantiated_test
    self._apply_precision_override_for_test(test, param_kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 356, in _apply_precision_override_for_test
    self.precision, self.rel_tol = self._get_tolerance_override(test, dtype)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 349, in _get_tolerance_override
    return test.tolerance_overrides.get(dtype, tol(self.precision, self.rel_tol))
NameError: name 'tol' is not defined

======================================================================
ERROR: test_fn_grad_baddbmm_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: self dim 0 must match batch1 dim 0

======================================================================
ERROR: test_fn_grad_cdist_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Function CdistBackward0 returned an invalid gradient at index 0 - got [2, 3, 2] but expected shape compatible with [2, 2, 3, 2]

======================================================================
ERROR: test_fn_grad_cholesky_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 5878, in gradcheck_wrapper_hermitian_input
    return op(input + input.conj().transpose(-2, -1), *args, **kwargs)
RuntimeError: input must be 2-d matrix, input shape=[0, 5, 5]

======================================================================
ERROR: test_fn_grad_fft_fft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-569765.3490, device='xpu:0')
analytical:tensor(-0.0286, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -1.3302e+00,
         -1.2399e+01, -1.4588e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -8.3157e+00,
          2.6482e-02,  3.2956e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  4.1101e+00,
          2.8041e+01,  3.2974e+01],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  2.7838e+01,
          8.1774e+02,  1.1012e+02],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  8.2183e+02,
         -2.6126e+02, -3.3238e+02],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -2.5717e+02,
          9.1478e+02, -3.4771e+02]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 366554373.35894555.


======================================================================
ERROR: test_fn_grad_fft_fftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-0.0309, device='xpu:0')
analytical:tensor(0.0571, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.9511,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.9511,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.9511]],
       device='xpu:0')
Analytical:
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5878, -0.5878, -0.9511]],
       device='xpu:0')

The max per-element difference (slow mode) is: 1.9021130325906102.


======================================================================
ERROR: test_fn_grad_fft_hfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-1632880.8758, device='xpu:0')
analytical:tensor(0.2596, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.3162, 0.0000, 0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1954, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
       device='xpu:0')
Analytical:
tensor([[ 0.3162,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3162,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3162,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.3162,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.3162,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.3162]],
       device='xpu:0')

The max per-element difference (slow mode) is: 2816371662.7995486.


======================================================================
ERROR: test_fn_grad_fft_ifft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(2.3916e+195, device='xpu:0')
analytical:tensor(0.0286, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  4.7909e+01,
          2.8778e+01,  2.2053e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -2.1979e+01,
          1.8924e+01,  3.8828e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -1.2125e+01,
         -9.1647e+02, -1.2253e+03],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  6.7995e+00,
          2.7854e+05, -1.2444e+06],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -2.7854e+05,
          8.9432e+05,  5.7409e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -8.9432e+05,
          8.6736e-16, -1.7322e+06]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 4325546.445521153.


======================================================================
ERROR: test_fn_grad_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.0078, device='xpu:0')
analytical:tensor(0.0062, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.1176],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1176],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.1902]],
       device='xpu:0')
Analytical:
tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.1902, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.1902, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.1902]],
       device='xpu:0')

The max per-element difference (slow mode) is: 0.3804226065181664.


======================================================================
ERROR: test_fn_grad_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.0022, device='xpu:0')
analytical:tensor(-0.0108, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.1176,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.1176,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.1176]],
       device='xpu:0')
Analytical:
tensor([[-0., -0., -0.,  ..., -0., -0., -0.],
        [-0., -0., -0.,  ..., -0., -0., -0.],
        [-0., -0., -0.,  ..., -0., -0., -0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 0.3804226065181664.


======================================================================
ERROR: test_fn_grad_fft_irfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(1604411.1201, device='xpu:0')
analytical:tensor(0.2596, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 3.1623e-01,  0.0000e+00,  0.0000e+00,  ..., -1.9374e+01,
          3.1372e-02,  3.2721e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  9.6870e+03,
         -1.5686e+01, -1.6360e+04],
        [ 0.0000e+00,  1.9544e-01,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]], device='xpu:0')
Analytical:
tensor([[ 0.3162,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3162,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3162,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.3162,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.3162,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.3162]],
       device='xpu:0')

The max per-element difference (slow mode) is: nan.


======================================================================
ERROR: test_fn_grad_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(1.0668e+267, device='xpu:0')
analytical:tensor(0.0460, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.1826,  0.1826,  0.1826,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.2954,  0.1128,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.1128, -0.2954,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')
Analytical:
tensor([[ 0.1826,  0.1826,  0.1826,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.2954,  0.1128,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.1128, -0.2954,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')

The max per-element difference (slow mode) is: nan.


======================================================================
ERROR: test_fn_grad_fft_rfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-0.0110, device='xpu:0')
analytical:tensor(0.0538, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.5878, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.5878, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.5878]],
       device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.902113032589611.


======================================================================
ERROR: test_fn_grad_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-0.0110, device='xpu:0')
analytical:tensor(0.0538, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.5878, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.5878, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.5878]],
       device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.902113032589611.


======================================================================
ERROR: test_fn_grad_fmod_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_fn_grad_index_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_fn_grad_index_copy_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: src tensor dim should be > 0 and < 12

======================================================================
ERROR: test_fn_grad_index_select_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src tensor dim should be > 0 and < 12

======================================================================
ERROR: test_fn_grad_linalg_det_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(2145.6367, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[-2153.1840],
        [-2304.2600],
        [  249.2354],
        [ -804.9730],
        [ 4871.4860],
        [-2004.7309],
        [-2034.8425],
        [  353.2583],
        [ -823.5398],
        [ 4686.2412],
        [-1776.2016],
        [-1724.9711],
        [  330.8885],
        [ -558.2607],
        [ 4042.6130],
        [ 2428.6682],
        [ 2492.1617],
        [ -402.2679],
        [  966.7279],
        [-5450.9213],
        [ -665.1604],
        [ -528.9164],
        [   72.6998],
        [ -146.3844],
        [ 1330.2231]], device='xpu:0')
Analytical:
tensor([[0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='xpu:0')

The max per-element difference (slow mode) is: 5450.921314632637.


======================================================================
ERROR: test_fn_grad_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(4.0323, device='xpu:0')
analytical:tensor(4.1734, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  1.8757, -3.6798,  1.0915],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  2.6406,  8.0550],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')
Analytical:
tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  2.8626, -7.5343,  6.1833],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  2.5317,  5.7161],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')

The max per-element difference (slow mode) is: 55.07646832455006.


======================================================================
ERROR: test_fn_grad_linalg_qr_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-1.7706e-06, device='xpu:0')
analytical:tensor(0.2092, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.4608,  0.1210,  0.1995,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2069,  0.2315,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.0720,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.3013,  0.0733,  0.0093],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.1407,  0.1199],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')
Analytical:
tensor([[ 0.4608,  0.1210,  0.1995,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2069,  0.2315,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0000, -0.0000, -0.0720,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5240,  0.0456, -0.0535],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3036,  0.2587],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')

The max per-element difference (slow mode) is: 1.6427572522419134.


======================================================================
ERROR: test_fn_grad_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: mat1 and mat2 shapes cannot be multiplied (0x0 and 5x5)

======================================================================
ERROR: test_fn_grad_lu_unpack_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 528, in _check_helper
    samples = op.sample_inputs(device, dtype, requires_grad=True, include_conjugated_inputs=include_conjugated_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 691, in sample_inputs
    samples = self.sample_inputs_func(self, device, dtype, requires_grad, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 3833, in sample_inputs_lu_unpack
    return list(generate_samples())
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 3815, in generate_samples
    lu_data, pivots = lu_sample.input.lu()
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_tensor.py", line 450, in lu
    LU, pivots, infos = torch._lu_with_info(self, pivot=pivot, check_errors=(not get_infos))
RuntimeError: A must be batches of square matrices, but they are 5 by 3 matrices

======================================================================
ERROR: test_fn_grad_lu_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_jit_internal.py", line 420, in fn
    return if_true(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/functional.py", line 1614, in _lu_with_infos
    result = _lu_impl(A, pivot, get_infos, out)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/functional.py", line 1595, in _lu_impl
    return torch._lu_with_info(A, pivot=pivot, check_errors=(not get_infos))
RuntimeError: A must be batches of square matrices, but they are 5 by 3 matrices

======================================================================
ERROR: test_fn_grad_mode_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Input Tensor's dimension must be within (0, 2]

======================================================================
ERROR: test_fn_grad_nanquantile_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.3944, device='xpu:0')
analytical:tensor(0.2384, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 1.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 1.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.000000000000334.


======================================================================
ERROR: test_fn_grad_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 1131, in adaptive_avg_pool2d
    return torch._C._nn.adaptive_avg_pool2d(input, _output_size)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_grad_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: dpcpp_avg_pool2d operator does not support divisor

======================================================================
ERROR: test_fn_grad_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_grad_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_grad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-8633052.4915, device='xpu:0')
analytical:tensor(0.8168, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000e+00,  0.0000e+00, -8.3274e+03,  0.0000e+00, -4.5046e+03],
        [ 0.0000e+00,  1.1525e+03,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00, -1.1515e+03,  2.0000e+00,  8.4495e+03,  4.5046e+03],
        [ 1.6864e+03,  0.0000e+00,  8.3274e+03, -8.4485e+03, -4.5046e+03],
        [-1.6864e+03,  0.0000e+00, -8.3274e+03, -8.4495e+03, -4.5036e+03]],
       device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0.],
        [0., 2., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 2.]], device='xpu:0')

The max per-element difference (slow mode) is: 8449.533510856572.


======================================================================
ERROR: test_fn_grad_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 544, in _check_analytical_jacobian_attributes
    raise GradcheckError('Backward is not reentrant, i.e., running backward with '
torch.autograd.gradcheck.GradcheckError: Backward is not reentrant, i.e., running backward with same input and grad_output multiple times gives different values, although analytical gradient matches numerical gradient.The tolerance for nondeterminism was 1e-15.

NOTE: If your op relies on non-deterministic operations i.e., it is listed here:
https://pytorch.org/docs/stable/generated/torch.use_deterministic_algorithms.html
this failure might be expected.

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `nondet_tol=<tol>` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `gradcheck_nondet_tol=<tol>`.
- is a Module test (e.g., in common_nn.py), then modify the corresponding
  module_test entry to have `gradcheck_nondet_tol=<tol>`


======================================================================
ERROR: test_fn_grad_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 3718, in interpolate
    return adaptive_avg_pool1d(input, output_size)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_grad_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.6994, device='xpu:0')
analytical:tensor(0.1281, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')
Analytical:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_fn_grad_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.6333, device='xpu:0')
analytical:tensor(2.0000e-06, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='xpu:0')
Analytical:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0000000000000009.


======================================================================
ERROR: test_fn_grad_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 3710, in interpolate
    return torch._C._nn.upsample_nearest1d(input, output_size, scale_factors)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_grad_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.7666, device='xpu:0')
analytical:tensor(0.9490, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')
Analytical:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_fn_grad_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 969, in wrapper
    fn(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 2347, in layer_norm
    return torch.layer_norm(input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_grad_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_jit_internal.py", line 420, in fn
    return if_true(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 694, in max_pool2d_with_indices
    return torch._C._nn.max_pool2d_with_indices(input, kernel_size, stride, padding, dilation, ceil_mode)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_grad_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Native API failed. Native API returns: -50 (CL_INVALID_ARG_VALUE) -50 (CL_INVALID_ARG_VALUE)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: Native API failed. Native API returns: -50 (CL_INVALID_ARG_VALUE) -50 (CL_INVALID_ARG_VALUE)

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_fn_grad_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 4491, in unfold
    return torch._C._nn.im2col(input, _pair(kernel_size), _pair(dilation), _pair(padding), _pair(stride))
RuntimeError: Expected non-empty 3D or 4D input tensor, but got input of size [0, 1, 5, 5]

======================================================================
ERROR: test_fn_grad_qr_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.1269, device='xpu:0')
analytical:tensor(0.2521, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[-0.3622, -0.2073,  2.3821,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1945,  0.1962,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -2.3538,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0764,  0.0567, -0.1842],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.2195,  0.0700],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')
Analytical:
tensor([[-3.6223e-01, -2.0731e-01,  2.3821e+00,  ..., -0.0000e+00,
         -0.0000e+00, -0.0000e+00],
        [ 0.0000e+00,  1.9446e-01,  1.9625e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-0.0000e+00, -0.0000e+00, -2.3538e+00,  ..., -0.0000e+00,
         -0.0000e+00, -0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  1.8293e-01,
         -1.1512e-01, -3.6094e-01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          1.6604e-01, -5.2958e-02],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00, -2.2204e-16]], device='xpu:0')

The max per-element difference (slow mode) is: 1.4629547244280219.


======================================================================
ERROR: test_fn_grad_quantile_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.4366, device='xpu:0')
analytical:tensor(0.2954, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 1.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 1.0000]], device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1.],
        [1., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.000000000000334.


======================================================================
ERROR: test_fn_grad_remainder_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_fn_grad_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: For integral input tensors, argument alpha must not be a floating point number.

======================================================================
ERROR: test_fn_grad_scatter_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_fn_grad_scatter_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_fn_grad_sigmoid_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: different elements ...

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: different elements ...

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_fn_grad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 396, in instantiated_test
    self._apply_precision_override_for_test(test, param_kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 356, in _apply_precision_override_for_test
    self.precision, self.rel_tol = self._get_tolerance_override(test, dtype)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 349, in _get_tolerance_override
    return test.tolerance_overrides.get(dtype, tol(self.precision, self.rel_tol))
NameError: name 'tol' is not defined

======================================================================
ERROR: test_fn_grad_std_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.0153, device='xpu:0')
analytical:tensor(0.0205, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.1334,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3925,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000, -0.1184,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.1218,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.2556,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.2608]],
       device='xpu:0')
Analytical:
tensor([[ 0.1779,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0000, -0.5234, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [-0.0000, -0.0000, -0.1579,  ..., -0.0000, -0.0000, -0.0000],
        ...,
        [-0.0000, -0.0000, -0.0000,  ..., -0.1624, -0.0000, -0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.3408,  0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -0.3477]],
       device='xpu:0')

The max per-element difference (slow mode) is: 0.14888161400108746.


======================================================================
ERROR: test_fn_grad_take_along_dim_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: unsupported operation: more than one element of the written-to tensor refers to a single memory location. Please clone() the tensor before performing the operation.

======================================================================
ERROR: test_fn_grad_topk_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_fn_grad_triangular_solve_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(-0.3957, device='xpu:0')
analytical:tensor(-0.5878, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[-10.5973,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  4.1124,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  7.0655,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -1.7911,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -1.4509,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -0.6793,   3.4823,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -1.1671,   5.9829,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.2959,  -1.5167,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.2397,  -1.2286,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -7.5872,   1.9624,  -7.5479,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  1.9233,  -0.4975,   1.9134,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  1.5580,  -0.4030,   1.5500,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.7468,  -1.1254,   1.1084,  -1.2209,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.6050,  -0.9117,   0.8979,  -0.9890,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  6.0885,  -2.2051,   1.8024,  -1.0089,   4.2516,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000]], device='xpu:0')
Analytical:
tensor([[-10.5972,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  4.1124,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  7.0655,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -1.7911,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -1.4509,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -0.6793,   3.4822,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -1.1671,   5.9829,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.2959,  -1.5167,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.2397,  -1.2286,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -7.5871,   1.9623,  -7.5478,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  1.9233,  -0.4975,   1.9134,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  1.5580,  -0.4030,   1.5500,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.7468,  -1.1254,   1.1084,  -1.2209,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.6050,  -0.9117,   0.8979,  -0.9890,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  6.0881,  -2.2049,   1.8022,  -1.0088,   4.2512,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,   0.2346,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,   0.7023,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.4382,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,   0.3635,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.9940,  -0.0000,
          -0.0000,  -0.0000,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,   0.7023,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.4382,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,   0.3635,
          -0.0000,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.9940,
          -0.0000,  -0.0000,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.4382,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
           0.3635,  -0.0000,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.9940,  -0.0000,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,   0.3635,  -0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.9940,  -0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,
           0.0000,   0.0000,   0.0000],
        [ -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,  -0.0000,
          -0.0000,  -0.0000,  -0.9940]], device='xpu:0')

The max per-element difference (slow mode) is: 0.993992888938931.


======================================================================
ERROR: test_fn_grad_var_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 593, in test_fn_grad
    self._grad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.2483, device='xpu:0')
analytical:tensor(0.3311, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 4.5312,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.5134,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  2.8384,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  2.0487,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -2.5974,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -2.1201]],
       device='xpu:0')
Analytical:
tensor([[ 6.0416,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [-0.0000, -3.3512, -0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [ 0.0000,  0.0000,  3.7845,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  2.7315,  0.0000,  0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -3.4632, -0.0000],
        [-0.0000, -0.0000, -0.0000,  ..., -0.0000, -0.0000, -2.8268]],
       device='xpu:0')

The max per-element difference (slow mode) is: 1.862179346883467.


======================================================================
ERROR: test_fn_gradgrad_baddbmm_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: self dim 0 must match batch1 dim 0

======================================================================
ERROR: test_fn_gradgrad_cholesky_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 5878, in gradcheck_wrapper_hermitian_input
    return op(input + input.conj().transpose(-2, -1), *args, **kwargs)
RuntimeError: input must be 2-d matrix, input shape=[0, 5, 5]

======================================================================
ERROR: test_fn_gradgrad_fft_fft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 568, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(155254.0605, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[-2.7661e-01,  4.7815e-01, -3.9930e-01,  ...,  1.9450e-01,
          5.6384e+02, -2.5441e+02],
        [-8.3694e-01,  1.3025e+00, -8.2109e-01,  ...,  1.7570e+00,
          0.0000e+00,  0.0000e+00],
        [-6.2182e-01,  1.0382e+00,  7.0162e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 563.8362385400012.


======================================================================
ERROR: test_fn_gradgrad_fft_fftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 568, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: FFT_INVALID_DESCRIPTOR

======================================================================
ERROR: test_fn_gradgrad_fft_hfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.7711, device='xpu:0')
analytical:tensor(1.0107, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 1.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  1.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -1.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -1.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -1.0000]],
       device='xpu:0')
Analytical:
tensor([[1.0000, 1.0000, 1.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.7071, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
       device='xpu:0')

The max per-element difference (slow mode) is: 4.000000000000002.


======================================================================
ERROR: test_fn_gradgrad_fft_ifft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.1300-0.0034j, device='xpu:0')
analytical:tensor(0.1619+0.0007j, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.2000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.2000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.2000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        ...,
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j, -0.1618-0.1176j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j, -0.1618+0.1176j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0618+0.1902j]], device='xpu:0')
Analytical:
tensor([[0.2000-0.0000j, 0.0000-0.0000j, 0.0000-0.0000j,  ...,
         0.0000-0.0000j, 0.0000-0.0000j, 0.0000-0.0000j],
        [0.0000-0.0000j, 0.2000-0.0000j, 0.0000-0.0000j,  ...,
         0.0000-0.0000j, 0.0000-0.0000j, 0.0000-0.0000j],
        [0.0000-0.0000j, 0.0000-0.0000j, 0.2000-0.0000j,  ...,
         0.0000-0.0000j, 0.0000-0.0000j, 0.0000-0.0000j],
        ...,
        [0.0000-0.0000j, 0.0000-0.0000j, 0.0000-0.0000j,  ...,
         0.0618+0.1902j, 0.0000-0.0000j, 0.0000-0.0000j],
        [0.0000-0.0000j, 0.0000-0.0000j, 0.0000-0.0000j,  ...,
         0.0000-0.0000j, 0.0618+0.1902j, 0.0000-0.0000j],
        [0.0000-0.0000j, 0.0000-0.0000j, 0.0000-0.0000j,  ...,
         0.0000-0.0000j, 0.0000-0.0000j, 0.0618+0.1902j]], device='xpu:0')

The max per-element difference (slow mode) is: 0.3804226065180693.


======================================================================
ERROR: test_fn_gradgrad_fft_ifftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 568, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: FFT_INVALID_DESCRIPTOR

======================================================================
ERROR: test_fn_gradgrad_fft_ihfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.1121+0.0022j, device='xpu:0')
analytical:tensor(0.1852+0.0037j, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.2000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.2000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.2000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        ...,
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j]],
       device='xpu:0')
Analytical:
tensor([[ 0.2000-0.0000j,  0.0000-0.0000j,  0.0000-0.0000j,  ...,
          0.0000-0.0000j,  0.0000-0.0000j,  0.0000-0.0000j],
        [ 0.0000-0.0000j,  0.2000-0.0000j,  0.0000-0.0000j,  ...,
          0.0000-0.0000j,  0.0000-0.0000j,  0.0000-0.0000j],
        [ 0.0000-0.0000j,  0.0000-0.0000j,  0.2000-0.0000j,  ...,
          0.0000-0.0000j,  0.0000-0.0000j,  0.0000-0.0000j],
        ...,
        [ 0.0000-0.0000j,  0.0000-0.0000j,  0.0000-0.0000j,  ...,
         -0.1618-0.1176j,  0.0000-0.0000j,  0.0000-0.0000j],
        [ 0.0000-0.0000j,  0.0000-0.0000j,  0.0000-0.0000j,  ...,
          0.0000-0.0000j, -0.1618-0.1176j,  0.0000-0.0000j],
        [ 0.0000-0.0000j,  0.0000-0.0000j,  0.0000-0.0000j,  ...,
          0.0000-0.0000j,  0.0000-0.0000j, -0.1618-0.1176j]], device='xpu:0')

The max per-element difference (slow mode) is: 0.3804226065180829.


======================================================================
ERROR: test_fn_gradgrad_fft_irfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.0964, device='xpu:0')
analytical:tensor(0.1263, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.1250,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1250,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.1250,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.1250,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.1250,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.1250]],
       device='xpu:0')
Analytical:
tensor([[0.1250, 0.1250, 0.1250,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.0884, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
       device='xpu:0')

The max per-element difference (slow mode) is: 0.5000000000000002.


======================================================================
ERROR: test_fn_gradgrad_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 568, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-367652.3963, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 0.21081851067838997.


======================================================================
ERROR: test_fn_gradgrad_fft_rfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.5606-0.0110j, device='xpu:0')
analytical:tensor(0.9258-0.0183j, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[1.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [1.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [1.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        ...,
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j]],
       device='xpu:0')
Analytical:
tensor([[ 1.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  1.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  1.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        ...,
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
         -0.8090+0.5878j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j, -0.8090+0.5878j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j, -0.8090+0.5878j]], device='xpu:0')

The max per-element difference (slow mode) is: 1.9021130325903628.


======================================================================
ERROR: test_fn_gradgrad_fft_rfftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.5606-0.0110j, device='xpu:0')
analytical:tensor(0.9258-0.0183j, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[1.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [1.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [1.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        ...,
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j],
        [0.0000+0.j, 0.0000+0.j, 0.0000+0.j,  ..., 0.0000+0.j, 0.0000+0.j, 0.0000+0.j]],
       device='xpu:0')
Analytical:
tensor([[ 1.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  1.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  1.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j],
        ...,
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
         -0.8090+0.5878j,  0.0000+0.0000j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j, -0.8090+0.5878j,  0.0000+0.0000j],
        [ 0.0000+0.0000j,  0.0000+0.0000j,  0.0000+0.0000j,  ...,
          0.0000+0.0000j,  0.0000+0.0000j, -0.8090+0.5878j]], device='xpu:0')

The max per-element difference (slow mode) is: 1.9021130325904991.


======================================================================
ERROR: test_fn_gradgrad_fmod_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_fn_gradgrad_index_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_fn_gradgrad_index_copy_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: src tensor dim should be > 0 and < 12

======================================================================
ERROR: test_fn_gradgrad_index_select_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src tensor dim should be > 0 and < 12

======================================================================
ERROR: test_fn_gradgrad_linalg_det_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 544, in _check_analytical_jacobian_attributes
    raise GradcheckError('Backward is not reentrant, i.e., running backward with '
torch.autograd.gradcheck.GradcheckError: Backward is not reentrant, i.e., running backward with same input and grad_output multiple times gives different values, although analytical gradient matches numerical gradient.The tolerance for nondeterminism was 0.0.

NOTE: If your op relies on non-deterministic operations i.e., it is listed here:
https://pytorch.org/docs/stable/generated/torch.use_deterministic_algorithms.html
this failure might be expected.

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `nondet_tol=<tol>` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `gradcheck_nondet_tol=<tol>`.
- is a Module test (e.g., in common_nn.py), then modify the corresponding
  module_test entry to have `gradcheck_nondet_tol=<tol>`


======================================================================
ERROR: test_fn_gradgrad_linalg_householder_product_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(4.0414, device='xpu:0')
analytical:tensor(6.2493, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  1.2815, 11.8616,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  3.2796,  1.3304,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')
Analytical:
tensor([[0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 1.2815, 3.2796, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 3.2796, 1.3304, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
       device='xpu:0')

The max per-element difference (slow mode) is: 51.01954666837833.


======================================================================
ERROR: test_fn_gradgrad_linalg_qr_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.1756, device='xpu:0')
analytical:tensor(0.2304, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 1.5925, -0.4871,  0.3233,  ...,  0.0000,  0.0000,  0.0000],
        [-0.4871, -1.9425,  0.5546,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3233,  0.5546,  0.1778,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -2.0139,  2.2747, -0.7413],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.5763, -2.3952, -0.7448],
        [ 0.0000,  0.0000,  0.0000,  ..., -1.3990, -0.7597, -0.3360]],
       device='xpu:0')
Analytical:
tensor([[ 1.5925, -0.4871,  0.3233,  ..., -0.0000, -0.0000, -0.0000],
        [-0.4871, -1.9425,  0.5546,  ..., -0.0000, -0.0000, -0.0000],
        [ 0.3233,  0.5546,  0.1778,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -5.0161,  1.0072, -1.3695],
        [ 0.0000,  0.0000,  0.0000,  ...,  1.1843, -4.3383, -1.0085],
        [ 0.0000,  0.0000,  0.0000,  ..., -1.3637, -1.0199,  0.0194]],
       device='xpu:0')

The max per-element difference (slow mode) is: 10.786926570104074.


======================================================================
ERROR: test_fn_gradgrad_linalg_svdvals_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: mat1 and mat2 shapes cannot be multiplied (0x0 and 5x5)

======================================================================
ERROR: test_fn_gradgrad_lu_unpack_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 528, in _check_helper
    samples = op.sample_inputs(device, dtype, requires_grad=True, include_conjugated_inputs=include_conjugated_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 691, in sample_inputs
    samples = self.sample_inputs_func(self, device, dtype, requires_grad, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 3833, in sample_inputs_lu_unpack
    return list(generate_samples())
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 3815, in generate_samples
    lu_data, pivots = lu_sample.input.lu()
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_tensor.py", line 450, in lu
    LU, pivots, infos = torch._lu_with_info(self, pivot=pivot, check_errors=(not get_infos))
RuntimeError: A must be batches of square matrices, but they are 5 by 3 matrices

======================================================================
ERROR: test_fn_gradgrad_lu_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_jit_internal.py", line 420, in fn
    return if_true(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/functional.py", line 1614, in _lu_with_infos
    result = _lu_impl(A, pivot, get_infos, out)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/functional.py", line 1595, in _lu_impl
    return torch._lu_with_info(A, pivot=pivot, check_errors=(not get_infos))
RuntimeError: A must be batches of square matrices, but they are 5 by 3 matrices

======================================================================
ERROR: test_fn_gradgrad_mode_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Input Tensor's dimension must be within (0, 2]

======================================================================
ERROR: test_fn_gradgrad_msort_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-9035.2855, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[-774.7456,  768.3648, -410.8422,  ...,    0.0000,    0.0000,
            0.0000],
        [ 768.3648, -774.7456, -410.8422,  ...,    0.0000,    0.0000,
            0.0000],
        [ 768.3648, -410.8422, -774.7456,  ...,    0.0000,    0.0000,
            0.0000],
        ...,
        [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
            0.0000],
        [   0.0000,    0.0000,    0.0000,  ...,    0.0000, -774.7456,
            0.0000],
        [   0.0000,    0.0000,    0.0000,  ...,    0.0000,    0.0000,
            0.0000]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 2832.824685749467.


======================================================================
ERROR: test_fn_gradgrad_nanquantile_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.2024, device='xpu:0')
analytical:tensor(0.2289, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.],
        [0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_fn_gradgrad_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 1131, in adaptive_avg_pool2d
    return torch._C._nn.adaptive_avg_pool2d(input, _output_size)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_gradgrad_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: dpcpp_avg_pool2d operator does not support divisor

======================================================================
ERROR: test_fn_gradgrad_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_gradgrad_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_gradgrad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(515294.7616, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[    0.0000,   986.3487, -2136.7602,   896.2995,     0.0000],
        [    0.0000,  -986.3487,     0.0000,  -896.2995,  -786.0122],
        [    0.0000,  -986.3487,     0.0000,     0.0000,   786.0122],
        [    0.0000,   986.3487,     0.0000,  -896.2995,   786.0122],
        [    0.0000,   986.3487,  2136.7602,   896.2995,  -786.0122]],
       device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 2136.76015539707.


======================================================================
ERROR: test_fn_gradgrad_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 3718, in interpolate
    return adaptive_avg_pool1d(input, output_size)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_gradgrad_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.0146, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 4.2133e+02,  1.3714e+02, -6.4294e+02,  ..., -5.0000e-06,
         -5.0000e-06, -5.0000e-06],
        [ 4.2133e+02,  1.3714e+02, -6.4294e+02,  ..., -5.0000e-06,
         -5.0000e-06, -5.0000e-06],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [-4.2133e+02, -1.3714e+02,  6.4294e+02,  ...,  5.0000e-06,
          5.0000e-06,  5.0000e-06],
        [-4.2133e+02, -1.3714e+02,  6.4294e+02,  ...,  5.0000e-06,
          5.0000e-06,  5.0000e-06],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 812.0882497799244.


======================================================================
ERROR: test_fn_gradgrad_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(605432.0281, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[-3.0241e+08, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01],
        [-3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [-3.0272e+05,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0241e+08,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 3.0272e+05, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01],
        [-3.0241e+08, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01],
        [-3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [-3.0272e+05,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0241e+08,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 3.0272e+05, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01],
        [-3.0241e+08, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01],
        [-3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [-3.0272e+05,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0241e+08,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 3.0272e+05, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01],
        [-3.0241e+08, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01],
        [-3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [-3.0272e+05,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0241e+08,  2.8930e+02,  3.8280e+01, -1.1539e+02, -8.2571e+02,
         -3.9535e+02, -4.5012e+02,  3.3485e+02,  1.4932e+02,  9.1807e+02,
         -2.6801e+01, -3.5868e+02,  3.0514e+02, -3.0019e+02, -6.2527e+02,
         -1.1342e+02, -8.4941e+02, -2.6283e+02, -2.5763e+02, -3.3060e+02,
         -7.5416e+02,  2.3944e+02, -4.6138e+02,  1.1316e+01],
        [ 3.0272e+08,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,
          0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 3.0272e+05, -2.8930e+02, -3.8280e+01,  1.1539e+02,  8.2571e+02,
          3.9535e+02,  4.5012e+02, -3.3485e+02, -1.4932e+02, -9.1807e+02,
          2.6801e+01,  3.5868e+02, -3.0514e+02,  3.0019e+02,  6.2527e+02,
          1.1342e+02,  8.4941e+02,  2.6283e+02,  2.5763e+02,  3.3060e+02,
          7.5416e+02, -2.3944e+02,  4.6138e+02, -1.1316e+01]], device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]],
       device='xpu:0')

The max per-element difference (slow mode) is: 302716014.03313965.


======================================================================
ERROR: test_fn_gradgrad_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 3710, in interpolate
    return torch._C._nn.upsample_nearest1d(input, output_size, scale_factors)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_gradgrad_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-1.2269e+13, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[   0.0000,    0.0000,    0.0000,  ..., -213.4979,   65.0225,
         -692.7353],
        [  53.7136,   90.9166,  686.3461,  ..., -213.4979,   65.0225,
         -692.7353],
        [  53.7136,   90.9166,  686.3461,  ...,    0.0000,    0.0000,
            0.0000],
        ...,
        [   0.0000,    0.0000,    0.0000,  ...,  213.4979,  -65.0225,
          692.7353],
        [ -53.7136,  -90.9166, -686.3461,  ...,  213.4979,  -65.0225,
          692.7353],
        [ -53.7136,  -90.9166, -686.3461,  ...,    0.0000,    0.0000,
            0.0000]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 789934.5305730378.


======================================================================
ERROR: test_fn_gradgrad_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 969, in wrapper
    fn(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 2347, in layer_norm
    return torch.layer_norm(input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_gradgrad_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_jit_internal.py", line 420, in fn
    return if_true(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 694, in max_pool2d_with_indices
    return torch._C._nn.max_pool2d_with_indices(input, kernel_size, stride, padding, dilation, ceil_mode)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_fn_gradgrad_nn_functional_pad_reflect_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Native API failed. Native API returns: -50 (CL_INVALID_ARG_VALUE) -50 (CL_INVALID_ARG_VALUE)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: Native API failed. Native API returns: -50 (CL_INVALID_ARG_VALUE) -50 (CL_INVALID_ARG_VALUE)

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_fn_gradgrad_nn_functional_softplus_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: different elements ...

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: different elements ...

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_fn_gradgrad_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 4491, in unfold
    return torch._C._nn.im2col(input, _pair(kernel_size), _pair(dilation), _pair(padding), _pair(stride))
RuntimeError: Expected non-empty 3D or 4D input tensor, but got input of size [0, 1, 5, 5]

======================================================================
ERROR: test_fn_gradgrad_qr_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-0.3345, device='xpu:0')
analytical:tensor(-1.4655, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[-3.1675e+00, -1.9060e-01, -6.3356e-01,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-1.9060e-01, -3.8074e-01,  9.4667e-03,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [-6.3356e-01,  9.4668e-03,  3.7381e-03,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  1.9371e-01,
         -1.1914e+00,  4.3414e-01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  5.4431e-02,
          6.1904e-01, -6.4730e-04],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  4.1550e-01,
          5.4482e-02, -8.7793e-04]], device='xpu:0')
Analytical:
tensor([[-3.1675e+00, -1.9060e-01, -6.3356e-01,  ..., -0.0000e+00,
         -0.0000e+00, -0.0000e+00],
        [-1.9060e-01, -3.8074e-01,  9.4668e-03,  ..., -0.0000e+00,
         -0.0000e+00, -0.0000e+00],
        [-6.3356e-01,  9.4668e-03,  3.7381e-03,  ..., -0.0000e+00,
         -0.0000e+00, -0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -3.4254e+00,
          1.0239e+00, -3.1694e-01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -7.9823e-01,
         -4.2169e+00,  2.3804e-04],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -3.5171e-01,
         -7.9932e-02,  1.2849e-03]], device='xpu:0')

The max per-element difference (slow mode) is: 12.65593938003498.


======================================================================
ERROR: test_fn_gradgrad_quantile_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 1,
numerical:tensor(0.0573, device='xpu:0')
analytical:tensor(0.2766, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 1.0000, 0.0000],
        [0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.]],
       device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_fn_gradgrad_remainder_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_fn_gradgrad_rsub_rsub_scalar_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: For integral input tensors, argument alpha must not be a floating point number.

======================================================================
ERROR: test_fn_gradgrad_scatter_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_fn_gradgrad_scatter_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_fn_gradgrad_sigmoid_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: different elements ...

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: different elements ...

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_fn_gradgrad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 396, in instantiated_test
    self._apply_precision_override_for_test(test, param_kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 356, in _apply_precision_override_for_test
    self.precision, self.rel_tol = self._get_tolerance_override(test, dtype)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 349, in _get_tolerance_override
    return test.tolerance_overrides.get(dtype, tol(self.precision, self.rel_tol))
NameError: name 'tol' is not defined

======================================================================
ERROR: test_fn_gradgrad_take_along_dim_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: unsupported operation: more than one element of the written-to tensor refers to a single memory location. Please clone() the tensor before performing the operation.

======================================================================
ERROR: test_fn_gradgrad_topk_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 615, in test_fn_gradgrad
    self._gradgrad_test_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_forward_mode_AD_baddbmm_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: self dim 0 must match batch1 dim 0

======================================================================
ERROR: test_forward_mode_AD_fft_fft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-1102708.0883, device='xpu:0')
analytical:tensor(-0.0286, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -1.3302e+00,
         -1.2399e+01, -1.4588e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -8.3157e+00,
          2.6482e-02,  3.2956e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  4.1101e+00,
          2.8041e+01,  3.2974e+01],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -5.5833e+02,
          1.6099e+02,  1.1281e+02],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  1.6507e+02,
         -7.9307e+02, -1.4060e+02],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -7.8899e+02,
          5.7665e+02, -1.0387e+03]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 228928640.9490648.


======================================================================
ERROR: test_forward_mode_AD_fft_hfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(nan, device='xpu:0')
analytical:tensor(0.2596, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0.3162, 0.0000, 0.0000,  ..., -0.0000, -0.0000, -0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1954, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        ...,
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0000, 0.0000,  ..., 0.0000, 0.0000, 0.0000]],
       device='xpu:0')
Analytical:
tensor([[ 0.3162,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3162,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3162,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.3162,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.3162,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.3162]],
       device='xpu:0')

The max per-element difference (slow mode) is: nan.


======================================================================
ERROR: test_forward_mode_AD_fft_ifft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 937, in _gradcheck_real_imag
    gradcheck_fn(imag_fn, imag_func_out, tupled_inputs, imag_outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: While considering the imaginary part of complex outputs only, Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(nan, device='xpu:0')
analytical:tensor(0.0286, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  4.7909e+01,
          2.8778e+01,  2.2053e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -2.1979e+01,
          1.8924e+01,  3.8828e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -1.2125e+01,
          2.1693e+03,  3.2236e+02],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  6.7995e+00,
          2.1502e+06, -1.1336e+06],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ..., -2.1502e+06,
         -1.2269e+06,  5.7409e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  1.2269e+06,
          8.6736e-16,  1.2579e+06]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: nan.


======================================================================
ERROR: test_forward_mode_AD_fft_irfft_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(-936264.0125, device='xpu:0')
analytical:tensor(0.2596, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 3.1623e-01,  0.0000e+00,  0.0000e+00,  ..., -1.9374e+01,
          3.1372e-02,  3.2721e+01],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  9.6870e+03,
         -1.5686e+01, -1.6360e+04],
        [ 0.0000e+00,  1.9544e-01,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        ...,
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  ...,  0.0000e+00,
          0.0000e+00,  0.0000e+00]], device='xpu:0')
Analytical:
tensor([[ 0.3162,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3162,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.3162,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ..., -0.3162,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000, -0.3162,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000, -0.3162]],
       device='xpu:0')

The max per-element difference (slow mode) is: nan.


======================================================================
ERROR: test_forward_mode_AD_fft_irfftn_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(nan, device='xpu:0')
analytical:tensor(0.0460, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.1826,  0.1826,  0.1826,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.2954,  0.1128,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.1128, -0.2954,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')
Analytical:
tensor([[ 0.1826,  0.1826,  0.1826,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.2954,  0.1128,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.3651,  0.1128, -0.2954,  ...,  0.0000,  0.0000,  0.0000],
        ...,
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0000,  0.0000,  ...,  0.0000,  0.0000,  0.0000]],
       device='xpu:0')

The max per-element difference (slow mode) is: nan.


======================================================================
ERROR: test_forward_mode_AD_fmod_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_forward_mode_AD_index_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_forward_mode_AD_index_copy_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: src tensor dim should be > 0 and < 12

======================================================================
ERROR: test_forward_mode_AD_index_select_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src tensor dim should be > 0 and < 12

======================================================================
ERROR: test_forward_mode_AD_linalg_det_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 544, in _check_analytical_jacobian_attributes
    raise GradcheckError('Backward is not reentrant, i.e., running backward with '
torch.autograd.gradcheck.GradcheckError: Backward is not reentrant, i.e., running backward with same input and grad_output multiple times gives different values, although analytical gradient matches numerical gradient.The tolerance for nondeterminism was 0.0.

NOTE: If your op relies on non-deterministic operations i.e., it is listed here:
https://pytorch.org/docs/stable/generated/torch.use_deterministic_algorithms.html
this failure might be expected.

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `nondet_tol=<tol>` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `gradcheck_nondet_tol=<tol>`.
- is a Module test (e.g., in common_nn.py), then modify the corresponding
  module_test entry to have `gradcheck_nondet_tol=<tol>`


======================================================================
ERROR: test_forward_mode_AD_lu_unpack_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 528, in _check_helper
    samples = op.sample_inputs(device, dtype, requires_grad=True, include_conjugated_inputs=include_conjugated_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 691, in sample_inputs
    samples = self.sample_inputs_func(self, device, dtype, requires_grad, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 3833, in sample_inputs_lu_unpack
    return list(generate_samples())
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 3815, in generate_samples
    lu_data, pivots = lu_sample.input.lu()
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_tensor.py", line 450, in lu
    LU, pivots, infos = torch._lu_with_info(self, pivot=pivot, check_errors=(not get_infos))
RuntimeError: A must be batches of square matrices, but they are 5 by 3 matrices

======================================================================
ERROR: test_forward_mode_AD_lu_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 769, in dep_fn
    return fn(slf, *args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_jit_internal.py", line 420, in fn
    return if_true(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/functional.py", line 1614, in _lu_with_infos
    result = _lu_impl(A, pivot, get_infos, out)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/functional.py", line 1595, in _lu_impl
    return torch._lu_with_info(A, pivot=pivot, check_errors=(not get_infos))
RuntimeError: A must be batches of square matrices, but they are 5 by 3 matrices

======================================================================
ERROR: test_forward_mode_AD_mode_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Input Tensor's dimension must be within (0, 2]

======================================================================
ERROR: test_forward_mode_AD_msort_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0., device='xpu:0')
analytical:tensor(0.7553, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_forward_mode_AD_nn_functional_adaptive_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 1131, in adaptive_avg_pool2d
    return torch._C._nn.adaptive_avg_pool2d(input, _output_size)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_forward_mode_AD_nn_functional_avg_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: dpcpp_avg_pool2d operator does not support divisor

======================================================================
ERROR: test_forward_mode_AD_nn_functional_conv2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_forward_mode_AD_nn_functional_conv_transpose2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_forward_mode_AD_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(2126736.8833, device='xpu:0')
analytical:tensor(1.1071, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 2.0000e+00,  5.8763e+03,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  2.0000e+00, -4.6099e+03,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00, -5.8763e+03, -4.6089e+03,  0.0000e+00, -4.6769e+03],
        [ 0.0000e+00, -5.8763e+03, -4.6099e+03,  2.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  1.2578e+03,  4.6779e+03]],
       device='xpu:0')
Analytical:
tensor([[2., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 2., 0.],
        [0., 0., 0., 0., 2.]], device='xpu:0')

The max per-element difference (slow mode) is: 5876.261792411458.


======================================================================
ERROR: test_forward_mode_AD_nn_functional_grid_sample_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 544, in _check_analytical_jacobian_attributes
    raise GradcheckError('Backward is not reentrant, i.e., running backward with '
torch.autograd.gradcheck.GradcheckError: Backward is not reentrant, i.e., running backward with same input and grad_output multiple times gives different values, although analytical gradient matches numerical gradient.The tolerance for nondeterminism was 1e-15.

NOTE: If your op relies on non-deterministic operations i.e., it is listed here:
https://pytorch.org/docs/stable/generated/torch.use_deterministic_algorithms.html
this failure might be expected.

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `nondet_tol=<tol>` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `gradcheck_nondet_tol=<tol>`.
- is a Module test (e.g., in common_nn.py), then modify the corresponding
  module_test entry to have `gradcheck_nondet_tol=<tol>`


======================================================================
ERROR: test_forward_mode_AD_nn_functional_interpolate_area_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 3718, in interpolate
    return adaptive_avg_pool1d(input, output_size)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_forward_mode_AD_nn_functional_interpolate_bilinear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.6994, device='xpu:0')
analytical:tensor(0.1950, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')
Analytical:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_forward_mode_AD_nn_functional_interpolate_linear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.6333, device='xpu:0')
analytical:tensor(2.0000e-06, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
         0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000]], device='xpu:0')
Analytical:
tensor([[1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.,
         1., 1., 1., 1., 1., 1.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
         0., 0., 0., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0000000000000009.


======================================================================
ERROR: test_forward_mode_AD_nn_functional_interpolate_nearest_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 3710, in interpolate
    return torch._C._nn.upsample_nearest1d(input, output_size, scale_factors)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_forward_mode_AD_nn_functional_interpolate_trilinear_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0.7666, device='xpu:0')
analytical:tensor(-0.1037, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')
Analytical:
tensor([[1., 1., 1.,  ..., 1., 1., 1.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_forward_mode_AD_nn_functional_layer_norm_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 969, in wrapper
    fn(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 2347, in layer_norm
    return torch.layer_norm(input, normalized_shape, weight, bias, eps, torch.backends.cudnn.enabled)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_forward_mode_AD_nn_functional_max_pool2d_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_jit_internal.py", line 420, in fn
    return if_true(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 694, in max_pool2d_with_indices
    return torch._C._nn.max_pool2d_with_indices(input, kernel_size, stride, padding, dilation, ceil_mode)
RuntimeError: Double is not supported in oneDNN!

======================================================================
ERROR: test_forward_mode_AD_nn_functional_unfold_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/nn/functional.py", line 4491, in unfold
    return torch._C._nn.im2col(input, _pair(kernel_size), _pair(dilation), _pair(padding), _pair(stride))
RuntimeError: Expected non-empty 3D or 4D input tensor, but got input of size [0, 1, 5, 5]

======================================================================
ERROR: test_forward_mode_AD_remainder_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_forward_mode_AD_sigmoid_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: different elements ...

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: different elements ...

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_forward_mode_AD_sort_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(0., device='xpu:0')
analytical:tensor(0.7532, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')
Analytical:
tensor([[0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        ...,
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.],
        [0., 0., 0.,  ..., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1.0.


======================================================================
ERROR: test_forward_mode_AD_special_erfcx_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 396, in instantiated_test
    self._apply_precision_override_for_test(test, param_kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 356, in _apply_precision_override_for_test
    self.precision, self.rel_tol = self._get_tolerance_override(test, dtype)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 349, in _get_tolerance_override
    return test.tolerance_overrides.get(dtype, tol(self.precision, self.rel_tol))
NameError: name 'tol' is not defined

======================================================================
ERROR: test_forward_mode_AD_take_along_dim_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 656, in test_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, op.get_op())
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
RuntimeError: unsupported operation: more than one element of the written-to tensor refers to a single memory location. Please clone() the tensor before performing the operation.

======================================================================
ERROR: test_inplace_forward_mode_AD_fmod_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 665, in test_inplace_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 650, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_inplace_forward_mode_AD_index_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 665, in test_inplace_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_inplace_forward_mode_AD_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 665, in test_inplace_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(1589948.4447, device='xpu:0')
analytical:tensor(1.2083, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 0.0000e+00,  3.8986e+03,  0.0000e+00,  0.0000e+00, -5.1370e+03],
        [ 0.0000e+00,  2.0000e+00,  0.0000e+00, -8.8467e+03,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  5.1370e+03],
        [ 0.0000e+00,  3.8986e+03,  0.0000e+00,  2.0000e+00,  0.0000e+00],
        [-3.6686e+03,  0.0000e+00,  0.0000e+00, -8.8467e+03,  0.0000e+00]],
       device='xpu:0')
Analytical:
tensor([[2., 0., 0., 0., 0.],
        [0., 2., 0., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 2.]], device='xpu:0')

The max per-element difference (slow mode) is: 8846.669511591834.


======================================================================
ERROR: test_inplace_forward_mode_AD_remainder_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 665, in test_inplace_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_inplace_forward_mode_AD_sigmoid_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: different elements ...

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 665, in test_inplace_forward_mode_AD
    self._forward_grad_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 644, in _forward_grad_helper
    self._grad_test_helper(device, dtype, op, variant, check_forward_ad=True)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: different elements ...

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_inplace_forward_mode_AD_special_erfcx_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 396, in instantiated_test
    self._apply_precision_override_for_test(test, param_kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 356, in _apply_precision_override_for_test
    self.precision, self.rel_tol = self._get_tolerance_override(test, dtype)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 349, in _get_tolerance_override
    return test.tolerance_overrides.get(dtype, tol(self.precision, self.rel_tol))
NameError: name 'tol' is not defined

======================================================================
ERROR: test_inplace_grad_fmod_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 607, in test_inplace_grad
    self._grad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_inplace_grad_index_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 607, in test_inplace_grad
    self._grad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_inplace_grad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 607, in test_inplace_grad
    self._grad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(1782408.6150, device='xpu:0')
analytical:tensor(0.8654, device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ 2.0000e+00, -3.0481e+03, -1.9510e+03,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00],
        [ 0.0000e+00,  0.0000e+00,  1.9520e+03,  5.9122e+03, -1.0543e+03],
        [ 2.3194e+03,  3.0481e+03,  0.0000e+00,  5.9132e+03, -1.0543e+03],
        [-2.3194e+03,  0.0000e+00,  0.0000e+00,  0.0000e+00,  0.0000e+00]],
       device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 2., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 2.]], device='xpu:0')

The max per-element difference (slow mode) is: 5913.150375113872.


======================================================================
ERROR: test_inplace_grad_remainder_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 607, in test_inplace_grad
    self._grad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_inplace_grad_scatter_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 607, in test_inplace_grad
    self._grad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_inplace_grad_scatter_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 607, in test_inplace_grad
    self._grad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1165, in _fast_gradcheck
    analytical_vJu = _get_analytical_vJu_backward_mode(inputs, outputs, nondet_tol, check_grad_dtypes, all_v, all_u_dense)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 555, in _get_analytical_vJu_backward_mode
    all_vJ = _check_analytical_jacobian_attributes(inputs, output, nondet_tol, check_grad_dtypes,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 528, in _check_analytical_jacobian_attributes
    vjps1 = _get_analytical_vjps_wrt_specific_output(vjp_fn, output.clone(), v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 633, in _get_analytical_vjps_wrt_specific_output
    grad_inputs = vjp_fn(v.reshape(sample_output.shape))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 524, in vjp_fn
    return torch.autograd.grad(output, diff_input_list, grad_output,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_inplace_grad_sigmoid_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: different elements ...

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 607, in test_inplace_grad
    self._grad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 578, in _grad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradcheck', check_forward_ad=check_forward_ad)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 554, in _check_helper
    self.assertTrue(gradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2688, in gradcheck
    return torch.autograd.gradcheck(fn, inputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: different elements ...

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_inplace_grad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 396, in instantiated_test
    self._apply_precision_override_for_test(test, param_kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 356, in _apply_precision_override_for_test
    self.precision, self.rel_tol = self._get_tolerance_override(test, dtype)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 349, in _get_tolerance_override
    return test.tolerance_overrides.get(dtype, tol(self.precision, self.rel_tol))
NameError: name 'tol' is not defined

======================================================================
ERROR: test_inplace_gradgrad_fmod_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 640, in test_inplace_gradgrad
    self._gradgrad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_inplace_gradgrad_index_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 640, in test_inplace_gradgrad
    self._gradgrad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: expected excluded dim between -1 and dims - 1

======================================================================
ERROR: test_inplace_gradgrad_nn_functional_dropout_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 640, in test_inplace_gradgrad
    self._gradgrad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1276, in _gradcheck_helper
    _gradcheck_real_imag(gradcheck_fn, func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 946, in _gradcheck_real_imag
    gradcheck_fn(func, func_out, tupled_inputs, outputs, eps,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1167, in _fast_gradcheck
    _check_analytical_numerical_equal(analytical_vJu, numerical_vJu, complex_indices,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1147, in _check_analytical_numerical_equal
    raise GradcheckError(_get_notallclose_msg(a, n, j, i, complex_indices, test_imag, is_forward_ad) + jacobians_str)
torch.autograd.gradcheck.GradcheckError: Jacobian mismatch for output 0 with respect to input 0,
numerical:tensor(1139970.6876, device='xpu:0')
analytical:tensor(0., device='xpu:0')

The above quantities relating the numerical and analytical jacobians are computed 
in fast mode. See: https://github.com/pytorch/pytorch/issues/53876 for more background 
about fast mode. Below, we recompute numerical and analytical jacobians in slow mode:

Numerical:
 tensor([[ -456.7688,   865.4383,  -684.4597,     0.0000,   219.9350],
        [    0.0000,  -865.4383,   684.4597, -1667.1833,     0.0000],
        [  456.7688,   865.4383,     0.0000,  1667.1833,     0.0000],
        [    0.0000,  -865.4383,   684.4597,     0.0000,   219.9350],
        [    0.0000,     0.0000,   684.4597,     0.0000,  -219.9350]],
       device='xpu:0')
Analytical:
tensor([[0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.],
        [0., 0., 0., 0., 0.]], device='xpu:0')

The max per-element difference (slow mode) is: 1667.1833471084692.


======================================================================
ERROR: test_inplace_gradgrad_remainder_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 640, in test_inplace_gradgrad
    self._gradgrad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1370, in gradgradcheck
    outputs = _as_tuple(func(*tupled_inputs))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 544, in fn
    output = op.gradcheck_wrapper(variant, *inputs, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 496, in <lambda>
    gradcheck_wrapper=lambda op, *args, **kwargs: op(*args, **kwargs),  # wrapper function for gradcheck
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 512, in _fn
    return inplace_variant(t.clone(), *args, **kwargs)
RuntimeError: src element is not the same as dst

======================================================================
ERROR: test_inplace_gradgrad_scatter_add_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 640, in test_inplace_gradgrad
    self._gradgrad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_inplace_gradgrad_scatter_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 640, in test_inplace_gradgrad
    self._gradgrad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1271, in _gradcheck_helper
    func_out = func(*tupled_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1383, in new_func
    grad_inputs = torch.autograd.grad(outputs, input_args, grad_outputs, create_graph=True,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: Input tensor must have same size as output tensor apart from the specified dimension

======================================================================
ERROR: test_inplace_gradgrad_sigmoid_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 772, in _test_batched_grad
    result = vmap(vjp)(torch.stack(grad_outputs))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/_vmap_internals.py", line 263, in wrapped
    batched_outputs = func(*batched_inputs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 755, in vjp
    results = grad(v)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/__init__.py", line 234, in grad
    return Variable._execution_engine.run_backward(
RuntimeError: different elements ...

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 402, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 397, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 734, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 640, in test_inplace_gradgrad
    self._gradgrad_test_helper(device, dtype, op, self._get_safe_inplace(op.get_inplace()))
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 581, in _gradgrad_test_helper
    return self._check_helper(device, dtype, op, variant, 'gradgradcheck')
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/test_ops.py", line 562, in _check_helper
    self.assertTrue(gradgradcheck(fn, gradcheck_args,
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2708, in gradgradcheck
    return torch.autograd.gradgradcheck(fn, inputs, grad_outputs, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1388, in gradgradcheck
    return gradcheck(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1263, in gradcheck
    return _gradcheck_helper(**args)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 1281, in _gradcheck_helper
    _test_batched_grad(tupled_inputs, o, i)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/autograd/gradcheck.py", line 778, in _test_batched_grad
    raise GradcheckError(
torch.autograd.gradcheck.GradcheckError: While computing batched gradients, got: different elements ...

gradcheck or gradgradcheck failed while testing batched gradient computation.
This could have been invoked in a number of ways (via a test that calls
gradcheck/gradgradcheck directly or via an autogenerated test).

If you are adding a new operator, please file an issue and then use one of the
workarounds. The workaround depends on how your test invokes gradcheck/gradgradcheck.
If the test
- manually invokes gradcheck/gradgradcheck, then call gradcheck/gradgradcheck
  with `check_batched_grad=False` as a keyword argument.
- is OpInfo-based (e.g., in test_ops.py), then modify the OpInfo for the test
  to have `check_batched_grad=False` and/or `check_batched_gradgrad=False`.
- is common_method_invocations-based, then add your test to the denylist
  EXCLUDE_BATCHED_GRAD_TESTS in test_autograd.py

If you're modifying an existing operator that supports batched grad computation,
or wish to make a new operator work with batched grad computation, please read
the following.

To compute batched grads (e.g., jacobians, hessians), we vmap over the backward
computation. The most common failure case is if there is a 'vmap-incompatible
operation' in the backward pass. Please see
NOTE: [How to write vmap-compatible backward formulas]
in the codebase for an explanation of how to fix this.

======================================================================
ERROR: test_inplace_gradgrad_special_erfcx_xpu_float64 (__main__.TestGradientsXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 1396, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 396, in instantiated_test
    self._apply_precision_override_for_test(test, param_kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 356, in _apply_precision_override_for_test
    self.precision, self.rel_tol = self._get_tolerance_override(test, dtype)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/pytorch/common/pytorch_test_base.py", line 349, in _get_tolerance_override
    return test.tolerance_overrides.get(dtype, tol(self.precision, self.rel_tol))
NameError: name 'tol' is not defined

----------------------------------------------------------------------
Ran 4046 tests in 826.644s

FAILED (errors=160, skipped=3097)
Raised CalledProcessError: return code 1.