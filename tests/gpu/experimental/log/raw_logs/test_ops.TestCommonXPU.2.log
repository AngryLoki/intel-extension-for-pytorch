MESA: warning: Driver does not support the 0xbd5 PCI ID.
No CUDA runtime is found, using CUDA_HOME='/usr/local/cuda'
/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_proxy_tensor.py:123: UserWarning: Couldn't import torchvision. Some of our tests use it, try to install it with commands from pytorch.org, post-fixed with `--no-deps` to avoid overwriting the pytorch installation
  warnings.warn("Couldn't import torchvision. Some of our tests use it, try "
test_complex_half_reference_testing_H_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_T_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing___getitem___xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_abs_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_as_strided_scatter_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_as_strided_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_atleast_1d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_atleast_2d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_atleast_3d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_bfloat16_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_block_diag_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_bool_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_cat_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_chalf_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_char_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_chunk_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_clone_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_column_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_conj_physical_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_conj_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_contiguous_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_diag_embed_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_diagonal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_double_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_dsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_dstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_empty_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_eq_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_fft_fftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_complex_half_reference_testing_fft_ifftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_complex_half_reference_testing_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_flatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_float_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_hsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_hstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_imag_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_index_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_index_put_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_index_select_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_isfinite_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_isinf_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_isreal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_log_softmax_dtype_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_long_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_mH_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_mT_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_masked_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_movedim_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_mul_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_narrow_copy_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_narrow_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_neg_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_new_empty_strided_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_new_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_new_full_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_new_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_new_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_nonzero_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_ones_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_permute_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_positive_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_rand_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_randn_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_randn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_ravel_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_real_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_repeat_interleave_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_reshape_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_reshape_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_resolve_neg_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_roll_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_select_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_sgn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_slice_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_split_with_sizes_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_split_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_squeeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_sub_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_transpose_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_unbind_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_unflatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_unfold_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_unsqueeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_view_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_view_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_vsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_vstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_where_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_zeros_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_complex_half_reference_testing_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_dtypes_H_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_T_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___getitem___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___radd___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___rand___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___rdiv___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___rmatmul___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes___rmod___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes___rmul___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___ror___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___rpow___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___rsub___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes___rxor___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_abs_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_acos_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_acosh_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_add_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_addcdiv_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_addr_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_all_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_allclose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_amax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_amin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_any_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_arange_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_as_strided_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_asin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_asinh_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_atan2_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_atan_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_atanh_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_atleast_1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_atleast_2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_atleast_3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_bitwise_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_bitwise_left_shift_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_bitwise_not_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_bitwise_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_bitwise_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_broadcast_shapes_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_broadcast_tensors_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_broadcast_to_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_cat_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_ceil_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_chunk_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_clamp_max_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_clamp_min_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_clamp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_clone_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_column_stack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_conj_physical_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_conj_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_constant_pad_nd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_contiguous_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_copysign_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_cos_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_cosh_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_cumsum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_diag_embed_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_diagonal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_digamma_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_div_floor_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_div_no_rounding_mode_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_div_trunc_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_dsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_dstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_empty_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_empty_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_eq_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_erf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_erfc_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_erfinv_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_exp2_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_exp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_expand_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_expand_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_expm1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_eye_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_fft_fft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_fft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_fftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_fftshift_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_hfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_hfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_hfftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_ifft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_ifft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_ifftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_ifftshift_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_ihfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_ihfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_ihfftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_irfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_irfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_irfftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_rfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_rfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fft_rfftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes__refs_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_flatten_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_flip_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_fliplr_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_flipud_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_float_power_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_floor_divide_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_floor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_fmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_fmin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_fmod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_frac_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_gcd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_ge_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_gt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_heaviside_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_hsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_hstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_hypot_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_i0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_igamma_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_igammac_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_imag_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_index_add_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_index_copy_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_index_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_index_select_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_isclose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_isfinite_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_isinf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_isnan_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_isneginf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_isposinf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_isreal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_lcm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_le_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_lgamma_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_linalg_matrix_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_linalg_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_linalg_svd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_linalg_svdvals_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_linalg_vector_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_linspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_log10_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_log1p_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_log2_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_log_softmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_log_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_logical_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_logical_not_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_logical_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_logical_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_logspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_logsumexp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_lt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_masked_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_maximum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_meshgrid_list_of_tensors_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_meshgrid_variadic_tensors_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_minimum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_movedim_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_mul_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nan_to_num_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_narrow_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_native_layer_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_ne_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_neg_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_new_empty_strided_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_new_empty_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_new_full_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_new_ones_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_new_zeros_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nextafter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_celu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_dropout_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_elu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_gelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_glu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_hardshrink_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_hardtanh_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_hinge_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_huber_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_l1_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_layer_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_leaky_relu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_margin_ranking_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_mish_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_mse_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_pairwise_distance_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_pdist_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_poisson_nll_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_prelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_relu6_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_relu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_selu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_softplus_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_softshrink_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_tanhshrink_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_nn_functional_threshold_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_ones_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_permute_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_positive_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_pow_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_prod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_randn_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_ravel_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_real_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_reciprocal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_remainder_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_repeat_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_reshape_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_reshape_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_roll_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_rot90_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_round_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_rsqrt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_rsub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sgn_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sigmoid_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sign_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_signbit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sinc_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sinh_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_softmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_bessel_j1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_i0e_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_i1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_i1e_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_logit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_multigammaln_mvlgamma_p_1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_multigammaln_mvlgamma_p_3_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_multigammaln_mvlgamma_p_5_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_spherical_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_special_zeta_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sqrt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_square_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_squeeze_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_stack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_std_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_std_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sum_to_size_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_sum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_t_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_tan_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_tanh_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_tensor_split_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_to_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_trace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_transpose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_tril_indices_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_tril_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_triu_indices_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_triu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_true_divide_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_trunc_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_unbind_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_unflatten_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_unfold_copy_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_unsqueeze_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_var_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_var_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_view_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_view_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_vsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_vstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_where_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes__refs_zeros_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_abs_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_acos_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_acosh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_add_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_addbmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_addcdiv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_addcmul_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_addmm_decomposed_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_addmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_addmv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_addr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_all_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_allclose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_amax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_amin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_aminmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_angle_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_any_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_arange_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_argmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_argmin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_argsort_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_argwhere_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_as_strided_scatter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_as_strided_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_asin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_asinh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_atan2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_atan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_atanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_atleast_1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_atleast_2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_atleast_3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_baddbmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_bernoulli_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bfloat16_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bincount_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bitwise_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bitwise_left_shift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_bitwise_not_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bitwise_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bitwise_right_shift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_bitwise_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_block_diag_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_bool_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_broadcast_shapes_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_broadcast_tensors_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_broadcast_to_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_bucketize_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_byte_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_cartesian_prod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_cat_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_cdist_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_ceil_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_chalf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_char_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_cholesky_inverse_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_cholesky_solve_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_cholesky_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_chunk_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_clamp_max_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_clamp_min_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_clamp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_clone_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_column_stack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_combinations_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_complex_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_conj_physical_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_conj_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_constant_pad_nd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_contiguous_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_copysign_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_corrcoef_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cos_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cosh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_count_nonzero_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cov_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_cross_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cummax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cummin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cumprod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cumsum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_cumulative_trapezoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_deg2rad_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_diag_embed_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_diag_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_diagflat_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_diagonal_scatter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_diagonal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_diff_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_digamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_dist_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_div_floor_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_div_no_rounding_mode_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_div_trunc_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_dot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_double_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_dsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_dstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_einsum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_empty_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_empty_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_eq_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_equal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_erf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_erfc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_erfinv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_exp2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_exp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_expand_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_expand_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_expm1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_eye_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_fft_fft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_fft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_fftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_fft_fftshift_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_hfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_hfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_hfftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_ifft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_ifft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_ifftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_fft_ifftshift_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_ihfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_ihfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_ihfftn_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_irfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_irfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_irfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_fft_rfft2_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_rfft_xpu (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_dtypes_fft_rfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_flatten_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_flip_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_fliplr_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_flipud_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_float_power_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_float_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_floor_divide_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_floor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_fmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_fmin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_fmod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_frac_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_frexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_full_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_gather_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_gcd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ge_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_geqrf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_gradient_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_gt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_half_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_heaviside_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_histc_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_histogram_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_histogramdd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_hsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_hstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_hypot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_i0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_igamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_igammac_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_imag_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_index_add_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_index_copy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_index_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_index_put_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_index_reduce_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_index_select_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_inner_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_int_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_isclose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_isfinite_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_isin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_isinf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_isnan_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_isneginf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_isposinf_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_isreal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_istft_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_jiterator_2inputs_2outputs_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_dtypes_jiterator_4inputs_with_extra_args_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_dtypes_jiterator_binary_return_by_ref_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_dtypes_jiterator_binary_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_dtypes_jiterator_unary_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_dtypes_kron_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_kthvalue_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_lcm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ldexp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_le_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_lerp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_lgamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_cholesky_ex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_cholesky_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_cond_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_cross_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_det_singular_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_det_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_eig_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_eigh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_eigvals_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_eigvalsh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_householder_product_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_inv_ex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_inv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_ldl_factor_ex_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_ldl_factor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_ldl_solve_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_lstsq_grad_oriented_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_lstsq_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_lu_factor_ex_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_lu_factor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_lu_solve_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_lu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_matrix_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_matrix_power_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_matrix_rank_hermitian_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_matrix_rank_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_multi_dot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_norm_subgradients_at_zero_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_pinv_hermitian_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_pinv_singular_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_pinv_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_qr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_slogdet_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_solve_ex_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_solve_triangular_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_solve_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_svd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_svdvals_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linalg_tensorinv_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_tensorsolve_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_vander_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_vecdot_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_linalg_vector_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_linspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_log10_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_log1p_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_log2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_log_softmax_dtype_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_log_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_log_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_logaddexp2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_logaddexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_logcumsumexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_logdet_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_logical_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_logical_not_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_logical_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_logical_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_logit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_logspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_logsumexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_long_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_lt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_lu_solve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_lu_unpack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_lu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_mH_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_mT_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_amax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_amin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_argmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_argmin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_cumprod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_cumsum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_log_softmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_logaddexp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_logsumexp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_median_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_normalize_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_prod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_scatter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_select_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_softmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_softmin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_std_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_sum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_masked_var_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_matmul_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_matrix_exp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_max_binary_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_max_reduction_no_dim_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_max_reduction_with_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_maximum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_median_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_meshgrid_list_of_tensors_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_meshgrid_variadic_tensors_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_min_binary_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_min_reduction_no_dim_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_min_reduction_with_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_minimum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_mm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_mode_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_movedim_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_msort_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_mul_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_multinomial_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_mv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_mvlgamma_mvlgamma_p_1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_mvlgamma_mvlgamma_p_3_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_mvlgamma_mvlgamma_p_5_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nan_to_num_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nanmean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nanmedian_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nanquantile_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nansum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_narrow_copy_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_narrow_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_native_batch_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_native_layer_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ne_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_neg_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_new_empty_strided_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_new_empty_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_new_full_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_new_ones_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_new_zeros_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nextafter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional__scaled_dot_product_attention_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_adaptive_avg_pool1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_adaptive_avg_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_adaptive_avg_pool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_adaptive_max_pool1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_adaptive_max_pool2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_adaptive_max_pool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_avg_pool1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_avg_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_avg_pool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_batch_norm_without_cudnn_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_dtypes_nn_functional_batch_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_bilinear_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_binary_cross_entropy_with_logits_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_binary_cross_entropy_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_celu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_conv1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_conv2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_conv_transpose1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_conv_transpose2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_conv_transpose3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_cosine_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_cosine_similarity_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_cross_entropy_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_ctc_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_dropout2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_dropout3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_dropout_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_elu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_embedding_bag_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_embedding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_feature_alpha_dropout_with_train_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_feature_alpha_dropout_without_train_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_fractional_max_pool2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_fractional_max_pool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_gaussian_nll_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_gelu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_glu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_grid_sample_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_group_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_hardshrink_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_hardsigmoid_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_hardswish_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_hardtanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_hinge_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_huber_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_instance_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_interpolate_area_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_interpolate_bicubic_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_interpolate_bilinear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_interpolate_linear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_interpolate_nearest_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_interpolate_trilinear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_kl_div_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_l1_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_layer_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_leaky_relu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_linear_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_local_response_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_logsigmoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_margin_ranking_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_pool1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_max_pool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_unpool1d_grad_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_unpool1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_unpool2d_grad_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_unpool2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_unpool3d_grad_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_max_unpool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_mish_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_mse_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_multi_margin_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_multilabel_margin_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_multilabel_soft_margin_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_nll_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_normalize_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_one_hot_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_pad_circular_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_pad_constant_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_pad_reflect_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_pad_replicate_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_pairwise_distance_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_pdist_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_pixel_shuffle_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_pixel_unshuffle_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_poisson_nll_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_prelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_relu6_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_relu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_rrelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_selu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_silu_complex_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_silu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_smooth_l1_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_soft_margin_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_softmin_with_dtype_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_softmin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_softplus_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_softshrink_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_softsign_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_tanhshrink_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_threshold_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_triplet_margin_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_triplet_margin_with_distance_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_unfold_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_nn_functional_upsample_bilinear_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nn_functional_upsample_nearest_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_nonzero_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_norm_fro_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_norm_inf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_norm_nuc_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_normal_number_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_normal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ones_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ones_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ops_nvprims_native_batch_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ops_nvprims_var_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ormqr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_outer_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_pca_lowrank_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_permute_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_pinverse_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_polar_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_polygamma_polygamma_n_0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_polygamma_polygamma_n_1_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_polygamma_polygamma_n_2_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_polygamma_polygamma_n_3_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_polygamma_polygamma_n_4_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_positive_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_pow_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_prod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_put_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_qr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_quantile_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_rad2deg_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_rand_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_randint_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_randn_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_randn_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_ravel_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_real_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_reciprocal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_remainder_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_renorm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_repeat_interleave_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_repeat_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_reshape_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_reshape_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_resize__xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_resize_as__xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_resolve_conj_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_resolve_neg_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_roll_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_rot90_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_round_decimals_0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_round_decimals_3_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_round_decimals_neg_3_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_round_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_rsqrt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_rsub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_scatter_add_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_scatter_reduce_amax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_scatter_reduce_amin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_scatter_reduce_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_scatter_reduce_prod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_scatter_reduce_sum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_scatter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_searchsorted_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_segment_reduce_lengths_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_segment_reduce_offsets_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_select_scatter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_select_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sgn_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_short_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sigmoid_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sign_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_signbit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_sinc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_sinh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_slice_scatter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_slice_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_softmax_with_dtype_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_sort_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_sparse_sampled_addmm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_airy_ai_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_bessel_j1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_bessel_y0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_bessel_y1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_chebyshev_polynomial_t_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_chebyshev_polynomial_u_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_chebyshev_polynomial_v_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_dtypes_special_chebyshev_polynomial_w_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_dtypes_special_entr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_erfcx_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_hermite_polynomial_h_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_hermite_polynomial_he_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_i0e_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_i1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_i1e_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_laguerre_polynomial_l_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_legendre_polynomial_p_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_dtypes_special_log_ndtr_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_modified_bessel_i0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_modified_bessel_i1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_modified_bessel_k0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_modified_bessel_k1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_ndtr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_ndtri_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_polygamma_special_polygamma_n_0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_special_scaled_modified_bessel_k0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_scaled_modified_bessel_k1_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_shifted_chebyshev_polynomial_t_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_dtypes_special_shifted_chebyshev_polynomial_u_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_dtypes_special_shifted_chebyshev_polynomial_v_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_dtypes_special_shifted_chebyshev_polynomial_w_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_dtypes_special_spherical_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_xlog1py_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_special_zeta_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_split_list_args_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_split_with_sizes_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_split_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sqrt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_square_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_squeeze_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_stack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_std_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_std_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_stft_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sum_to_size_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_sum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_svd_lowrank_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_svd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_symeig_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_t_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_take_along_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_take_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_tan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_tanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_tensor_split_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_tensordot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_tile_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_to_sparse_xpu (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_dtypes_to_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_topk_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_trace_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_transpose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_trapezoid_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_trapz_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_triangular_solve_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_tril_indices_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_tril_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_triu_indices_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_triu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_true_divide_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_trunc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_unbind_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_unflatten_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_unfold_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_uniform_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_unique_consecutive_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_unique_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_unsqueeze_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_var_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_var_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_vdot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_dtypes_view_as_complex_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_view_as_real_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_view_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_view_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_vsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_vstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_where_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_xlogy_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_zero__xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_zeros_like_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_dtypes_zeros_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___radd___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___rand___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___rdiv___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___rmod___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___rmul___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___ror___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___rpow___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___rsub___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors___rxor___xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_add_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_amax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_amin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_aminmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_arange_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_atan2_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_bernoulli_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_bitwise_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_bitwise_left_shift_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_bitwise_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_bitwise_right_shift_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_bitwise_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_cat_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_clamp_max_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_clamp_min_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_complex_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_copysign_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_cov_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_diag_embed_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_diag_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_diagonal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_div_floor_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_div_no_rounding_mode_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_div_trunc_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_dsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_dstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_eq_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_eye_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_fliplr_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_flipud_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_float_power_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_floor_divide_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_fmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_fmin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_fmod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_gather_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_gcd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_ge_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_gradient_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_gt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_heaviside_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_hsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_hstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_hypot_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_igamma_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_igammac_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_index_select_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_isclose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_jiterator_binary_return_by_ref_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_errors_jiterator_binary_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_errors_kthvalue_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_lcm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_ldexp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_le_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_linalg_cross_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_linalg_lstsq_grad_oriented_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_linalg_lstsq_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_linspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_logcumsumexp_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_logical_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_logical_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_logical_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_logspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_lt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_masked_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_masked_select_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_max_binary_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_maximum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_min_binary_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_minimum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_movedim_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_mul_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_multinomial_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_native_layer_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_ne_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_neg_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nextafter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_avg_pool1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_avg_pool2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_avg_pool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_conv1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_conv2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_embedding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_gelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_hinge_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_huber_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_l1_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_margin_ranking_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_max_pool1d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_max_pool2d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_max_pool3d_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_poisson_nll_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_prelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_rrelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_soft_margin_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_nn_functional_softshrink_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_ormqr_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_polar_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_pow_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_remainder_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_renorm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_reshape_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_reshape_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_roll_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_rot90_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_rsub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_scatter_add_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_scatter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_special_chebyshev_polynomial_t_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_special_chebyshev_polynomial_u_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_special_chebyshev_polynomial_v_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_errors_special_chebyshev_polynomial_w_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_errors_special_hermite_polynomial_h_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_special_hermite_polynomial_he_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_special_laguerre_polynomial_l_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_special_legendre_polynomial_p_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_errors_special_shifted_chebyshev_polynomial_t_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_errors_special_shifted_chebyshev_polynomial_u_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_errors_special_shifted_chebyshev_polynomial_v_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_errors_special_shifted_chebyshev_polynomial_w_xpu (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_errors_special_xlog1py_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_special_zeta_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_sub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_sum_to_size_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_t_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_take_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_trace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_true_divide_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_unbind_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_uniform_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_view_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_view_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_vsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_vstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_errors_where_xpu (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_errors_xlogy_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_multiple_devices_H_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_H_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_T_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_T_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___getitem___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___getitem___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___radd___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___radd___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rand___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rdiv___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rdiv___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rmatmul___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rmatmul___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rmod___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rmul___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rmul___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___ror___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rpow___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rpow___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rsub___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rsub___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices___rxor___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_abs_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_acos_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_acosh_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_add_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addbmm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addcmul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addcmul_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addmm_decomposed_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addmm_decomposed_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addmm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addmv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addmv_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_addr_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_all_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_all_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_aminmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_aminmax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_angle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_angle_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_any_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_any_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_arange_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argmax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argmin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argsort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argsort_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argwhere_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_argwhere_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_as_strided_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_as_strided_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_as_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_asin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_asinh_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atan2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atan_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atanh_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atleast_1d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atleast_2d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_atleast_3d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_baddbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_baddbmm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bernoulli_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bfloat16_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bfloat16_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bincount_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bitwise_and_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bitwise_left_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bitwise_not_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bitwise_or_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bitwise_right_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bitwise_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_block_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_block_diag_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bmm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bool_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bool_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_broadcast_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_broadcast_to_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bucketize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_bucketize_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_byte_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_byte_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cartesian_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cartesian_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cat_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cdist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ceil_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_chalf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_chalf_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_char_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_char_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cholesky_inverse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cholesky_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_chunk_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clamp_max_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clamp_min_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clamp_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_clone_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_column_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_combinations_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_combinations_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_conj_physical_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_conj_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_constant_pad_nd_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_contiguous_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_copysign_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_corrcoef_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_corrcoef_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cos_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cosh_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_count_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_count_nonzero_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cov_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cov_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cross_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cummax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cummax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cummin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cummin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cumprod_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cumsum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cumulative_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_cumulative_trapezoid_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_deg2rad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_deg2rad_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diag_embed_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diag_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diagflat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diagflat_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diagonal_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diagonal_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diagonal_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diff_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_diff_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_digamma_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_dist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_div_floor_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_div_no_rounding_mode_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_div_trunc_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_dot_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_double_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_double_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_dsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_dstack_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_einsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_einsum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_empty_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_eq_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_equal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_equal_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_erf_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_erfc_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_erfinv_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_exp2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_exp_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_expand_as_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_expand_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_expm1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_eye_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fft2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fft_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fftn_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_fftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_hfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_hfft_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_hfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifft2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifft_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifftn_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ifftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ihfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ihfft_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_ihfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_irfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_irfft_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_irfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_rfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_rfft_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fft_rfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_flatten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_flip_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fliplr_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_flipud_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_float_power_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_float_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_float_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_floor_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_floor_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fmax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fmin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_fmod_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_frexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_full_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_full_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_gather_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_gather_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_gcd_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ge_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_geqrf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_gradient_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_gradient_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_gt_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_half_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_half_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_heaviside_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_histc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_histogram_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_histogramdd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_hsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_hstack_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_i0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_add_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_put_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_put_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_reduce_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_reduce_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_index_select_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_inner_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_inner_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_int_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_int_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isclose_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isfinite_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isinf_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isnan_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isneginf_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isposinf_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_isreal_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_istft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_2inputs_2outputs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_2inputs_2outputs_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_4inputs_with_extra_args_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_4inputs_with_extra_args_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_binary_return_by_ref_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_binary_return_by_ref_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_binary_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_unary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_jiterator_unary_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_kron_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_kron_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_kthvalue_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_kthvalue_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lcm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ldexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ldexp_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_le_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_le_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lerp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lgamma_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_cholesky_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_cond_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_cross_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_det_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_det_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_eig_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_eigh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_eigvals_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_eigvalsh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_householder_product_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_inv_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_inv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_ldl_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_ldl_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_ldl_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_lstsq_grad_oriented_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_lstsq_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_lu_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_lu_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_matrix_power_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_matrix_rank_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_matrix_rank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_multi_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_multi_dot_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_norm_subgradients_at_zero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_pinv_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_pinv_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_pinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_slogdet_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_solve_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_solve_triangular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_tensorinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_tensorsolve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_vander_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_vander_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_vecdot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_linspace_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log10_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log1p_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log_softmax_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log_softmax_dtype_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_log_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logaddexp2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logcumsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logdet_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_and_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_not_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_or_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logical_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logit_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logspace_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_logsumexp_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_long_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_long_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lt_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lu_unpack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mH_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mH_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mT_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mT_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_argmax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_argmin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_cumprod_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_cumsum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_logsumexp_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_mean_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_median_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_select_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_std_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_std_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_var_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_masked_var_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_matmul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_matmul_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_matrix_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_max_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_max_binary_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_max_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_max_reduction_no_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_max_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_max_reduction_with_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_maximum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_median_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_median_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_meshgrid_list_of_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_meshgrid_variadic_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_min_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_min_binary_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_min_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_min_reduction_no_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_min_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_min_reduction_with_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_minimum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mode_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_movedim_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_msort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_msort_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mul_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_multinomial_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mv_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mvlgamma_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mvlgamma_mvlgamma_p_1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mvlgamma_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mvlgamma_mvlgamma_p_3_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mvlgamma_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_mvlgamma_mvlgamma_p_5_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nan_to_num_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nanmean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nanmedian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nanmedian_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nanquantile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nansum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nansum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_narrow_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_narrow_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_narrow_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ne_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_neg_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_empty_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_full_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_new_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional__scaled_dot_product_attention_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_adaptive_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_adaptive_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_adaptive_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_adaptive_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_adaptive_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_adaptive_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_avg_pool1d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_avg_pool2d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_avg_pool3d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_bilinear_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_binary_cross_entropy_with_logits_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_binary_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv1d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv2d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv_transpose1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv_transpose1d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv_transpose2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv_transpose2d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv_transpose3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_conv_transpose3d_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_cosine_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_cosine_embedding_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_cosine_similarity_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_ctc_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_dropout2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_dropout3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_embedding_bag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_embedding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_feature_alpha_dropout_with_train_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_feature_alpha_dropout_without_train_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_feature_alpha_dropout_without_train_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_fractional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_fractional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_gaussian_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_grid_sample_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_group_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_hardsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_hardswish_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_hardtanh_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_instance_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_interpolate_area_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_interpolate_bicubic_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_interpolate_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_interpolate_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_interpolate_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_interpolate_trilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_kl_div_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_linear_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_local_response_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_local_response_norm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_logsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_margin_ranking_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_unpool1d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_unpool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_unpool2d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_unpool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_unpool3d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_max_unpool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_multi_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_multilabel_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_multilabel_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_one_hot_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pad_circular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pad_circular_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pad_constant_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pad_constant_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pad_reflect_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pad_replicate_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pairwise_distance_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pixel_shuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pixel_shuffle_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pixel_unshuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_pixel_unshuffle_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_poisson_nll_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_relu6_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_relu_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_rrelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_silu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_smooth_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_softmin_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_softmin_with_dtype_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_softsign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_softsign_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_tanhshrink_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_threshold_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_triplet_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_triplet_margin_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_triplet_margin_with_distance_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_triplet_margin_with_distance_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_upsample_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nn_functional_upsample_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_nonzero_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_norm_fro_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_norm_inf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_norm_nuc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_normal_number_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_normal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ones_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ones_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ormqr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_outer_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_outer_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_pca_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_permute_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_pinverse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polar_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_3_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_4_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_polygamma_polygamma_n_4_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_positive_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_pow_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_put_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_put_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_quantile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rad2deg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rad2deg_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rand_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_randint_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_randint_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_randn_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_ravel_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_real_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_real_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_reciprocal_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_remainder_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_renorm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_repeat_interleave_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_repeat_interleave_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_repeat_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_reshape_as_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_reshape_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resize__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resize__xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resize_as__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resize_as__xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resolve_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resolve_conj_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resolve_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_resolve_neg_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_roll_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rot90_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_round_decimals_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_round_decimals_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_round_decimals_neg_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_round_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_round_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rsqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_rsub_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_add_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_mean_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_reduce_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_searchsorted_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_searchsorted_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_segment_reduce_lengths_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_segment_reduce_offsets_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_select_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_select_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_select_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sgn_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_short_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_short_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sigmoid_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sign_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_signbit_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sin_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sinc_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sinh_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_slice_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_slice_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_slice_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_slice_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_softmax_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_softmax_with_dtype_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sort_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sparse_sampled_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_airy_ai_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_airy_ai_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_j1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_y0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_y0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_y1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_bessel_y1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_t_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_u_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_v_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_chebyshev_polynomial_w_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_entr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_entr_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_erfcx_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_erfcx_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_hermite_polynomial_h_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_hermite_polynomial_h_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_hermite_polynomial_he_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_hermite_polynomial_he_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_i0e_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_i1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_i1e_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_laguerre_polynomial_l_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_laguerre_polynomial_l_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_legendre_polynomial_p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_legendre_polynomial_p_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_log_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_log_ndtr_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_i0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_i1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_k0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_modified_bessel_k1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_ndtr_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_ndtri_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_ndtri_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_polygamma_special_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_polygamma_special_polygamma_n_0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_scaled_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_scaled_modified_bessel_k0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_scaled_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_scaled_modified_bessel_k1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_t_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_u_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_v_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_shifted_chebyshev_polynomial_w_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_spherical_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_xlog1py_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_xlog1py_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_special_zeta_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_split_list_args_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_split_list_args_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_split_with_sizes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_split_with_sizes_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_split_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_split_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_square_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_square_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_squeeze_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_std_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_stft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sub_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sum_to_size_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_svd_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_symeig_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_t_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_take_along_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_take_along_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_take_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_take_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tan_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tanh_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tensor_split_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tensordot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tensordot_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tile_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_to_sparse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_to_sparse_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_to_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_topk_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_topk_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trace_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_transpose_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trapezoid_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trapz_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trapz_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_triangular_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_tril_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_triu_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_true_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_trunc_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unbind_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unflatten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unfold_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_uniform_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unique_consecutive_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unique_consecutive_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unique_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unique_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_unsqueeze_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_var_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_vdot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_vdot_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_view_as_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_view_as_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_view_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_view_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_vsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_vstack_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_where_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_where_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_xlogy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_xlogy_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_zero__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_zero__xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_zeros_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_zeros_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_multiple_devices_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_non_standard_bool_values_H_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_T_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values___getitem___xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values___radd___xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values___rand___xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values___rdiv___xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values___rmul___xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values___ror___xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values___rxor___xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_acos_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_acosh_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_add_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_addr_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_all_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_amax_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_amin_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_aminmax_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_non_standard_bool_values_angle_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_any_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_argsort_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_argwhere_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_as_strided_scatter_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_as_strided_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_asin_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_asinh_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_atan2_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_atan_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_atanh_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_atleast_1d_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_atleast_2d_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_atleast_3d_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_bfloat16_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_bitwise_and_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_bitwise_not_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_bitwise_or_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_bitwise_xor_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_block_diag_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_bool_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_broadcast_tensors_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_broadcast_to_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_byte_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_cartesian_prod_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_cat_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_chalf_xpu_bool (__main__.TestCommonXPU) ... ERROR
test_non_standard_bool_values_char_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_chunk_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_clamp_max_xpu_bool (__main__.TestCommonXPU) ... ERROR
test_non_standard_bool_values_clamp_min_xpu_bool (__main__.TestCommonXPU) ... ERROR
test_non_standard_bool_values_clone_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_column_stack_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_combinations_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_conj_physical_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_conj_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_constant_pad_nd_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_contiguous_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_copysign_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_cos_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_cosh_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_count_nonzero_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_cummax_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::_cummax_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummax_helper' is only available for these backends: [CPU, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/FunctionalizeFallbackKernel.cpp:291 [backend fallback]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_cummin_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::_cummin_helper' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::_cummin_helper' is only available for these backends: [CPU, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/FunctionalizeFallbackKernel.cpp:291 [backend fallback]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/VariableFallbackKernel.cpp:64 [backend fallback]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_1.cpp:15586 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_deg2rad_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_diag_embed_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_diag_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_diagflat_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_diagonal_scatter_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_diagonal_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_diff_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_digamma_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_div_no_rounding_mode_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_double_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_dsplit_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_dstack_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_empty_like_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_non_standard_bool_values_empty_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_non_standard_bool_values_eq_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_equal_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_erf_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_erfc_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_erfinv_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_exp2_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_exp_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_expand_as_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_expand_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_expm1_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_eye_xpu_bool (__main__.TestCommonXPU) ... ok
test_non_standard_bool_values_fft_fft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_fft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_fftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_fftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_hfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_hfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_hfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_ifft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_ifft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_ifftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_ifftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_ihfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_ihfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_ihfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_irfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_irfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_irfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_rfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_rfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fft_rfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_non_standard_bool_values_fill_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_flatten_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_flip_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_fliplr_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_flipud_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_float_power_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_float_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_fmax_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_fmin_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_full_like_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_gather_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_ge_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_gt_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_half_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_heaviside_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_hsplit_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_hstack_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_i0_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_index_add_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_index_copy_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_index_fill_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_index_put_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_index_select_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_int_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_isclose_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_isfinite_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_isinf_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_isnan_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_isneginf_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_isposinf_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_isreal_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_jiterator_2inputs_2outputs_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_non_standard_bool_values_jiterator_4inputs_with_extra_args_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_non_standard_bool_values_jiterator_binary_return_by_ref_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_non_standard_bool_values_jiterator_binary_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_non_standard_bool_values_jiterator_unary_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_non_standard_bool_values_kron_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_ldexp_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_le_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_lgamma_xpu_bool (__main__.TestCommonXPU) ... ERROR
test_non_standard_bool_values_log10_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_log1p_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_log2_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_log_softmax_dtype_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_log_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_logical_and_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_logical_not_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_logical_or_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_logical_xor_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_logit_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_logsumexp_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_long_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_lt_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_mH_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_mT_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_masked_fill_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_masked_mean_xpu_bool (__main__.TestCommonXPU) ... ERROR
test_non_standard_bool_values_masked_prod_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_masked_scatter_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_masked_select_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_masked_sum_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_max_binary_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_max_reduction_no_dim_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_max_reduction_with_dim_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_maximum_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_meshgrid_list_of_tensors_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_meshgrid_variadic_tensors_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_min_binary_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_min_reduction_no_dim_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_min_reduction_with_dim_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_minimum_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_mode_xpu_bool (__main__.TestCommonXPU) ... ERROR
test_non_standard_bool_values_movedim_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_msort_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_mul_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nan_to_num_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nansum_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_narrow_copy_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_narrow_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_ne_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_new_empty_strided_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: new_empty_strided is not comparable'
test_non_standard_bool_values_new_empty_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_non_standard_bool_values_new_full_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_new_ones_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_new_zeros_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nn_functional_cosine_embedding_loss_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nn_functional_feature_alpha_dropout_without_train_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nn_functional_pad_circular_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nn_functional_pad_constant_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nn_functional_pixel_shuffle_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nn_functional_pixel_unshuffle_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_nonzero_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_ones_like_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_ones_xpu_bool (__main__.TestCommonXPU) ... ok
test_non_standard_bool_values_outer_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_permute_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_polygamma_polygamma_n_0_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_polygamma_polygamma_n_1_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_non_standard_bool_values_polygamma_polygamma_n_2_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_non_standard_bool_values_polygamma_polygamma_n_3_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_non_standard_bool_values_polygamma_polygamma_n_4_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_non_standard_bool_values_prod_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_put_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_rad2deg_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_ravel_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_real_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_reciprocal_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_repeat_interleave_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_repeat_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_reshape_as_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_reshape_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_resize__xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_resize_as__xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_resolve_conj_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_resolve_neg_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_roll_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_non_standard_bool_values_rot90_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_rsqrt_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_scatter_add_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_scatter_reduce_amax_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::scatter_reduce.two_out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::scatter_reduce.two_out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_scatter_reduce_amin_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::scatter_reduce.two_out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::scatter_reduce.two_out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_scatter_reduce_prod_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::scatter_reduce.two_out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::scatter_reduce.two_out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_scatter_reduce_sum_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::scatter_reduce.two_out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::scatter_reduce.two_out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_scatter_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_select_scatter_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_select_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sgn_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_short_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sigmoid_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sign_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_signbit_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sin_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sinc_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sinh_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_slice_scatter_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_slice_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_softmax_with_dtype_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sort_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_airy_ai_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_airy_ai.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_airy_ai.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_3.cpp:22330 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_1.cpp:15586 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_bessel_j0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_bessel_j0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_3.cpp:22330 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_0.cpp:16458 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_bessel_j1_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_bessel_j1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_bessel_j1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_3.cpp:14484 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_bessel_y0_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_bessel_y0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_bessel_y0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_0.cpp:16458 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_bessel_y1_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_bessel_y1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_bessel_y1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_chebyshev_polynomial_t_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_chebyshev_polynomial_t.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_chebyshev_polynomial_t.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_3.cpp:15910 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_4.cpp:12871 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_chebyshev_polynomial_u_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_chebyshev_polynomial_u.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_chebyshev_polynomial_u.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_0.cpp:16458 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_chebyshev_polynomial_v_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_non_standard_bool_values_special_chebyshev_polynomial_w_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_non_standard_bool_values_special_entr_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_erfcx_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_hermite_polynomial_h_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_hermite_polynomial_h.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_hermite_polynomial_h.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_1.cpp:15586 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_hermite_polynomial_he_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_hermite_polynomial_he.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_hermite_polynomial_he.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_3.cpp:22330 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_0.cpp:16458 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_i0e_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_i1_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_i1e_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_laguerre_polynomial_l_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_laguerre_polynomial_l.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_laguerre_polynomial_l.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_3.cpp:22330 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_legendre_polynomial_p_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_non_standard_bool_values_special_log_ndtr_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_log_ndtr.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_log_ndtr.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_2.cpp:20548 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_1.cpp:15586 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_modified_bessel_i0_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_modified_bessel_i0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_modified_bessel_i0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_0.cpp:19962 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_4.cpp:14624 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_1.cpp:15586 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_modified_bessel_i1_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_modified_bessel_i1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_modified_bessel_i1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_2.cpp:20548 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_0.cpp:16458 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_modified_bessel_k0_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_modified_bessel_k0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_modified_bessel_k0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_2.cpp:20548 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_0.cpp:4822 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_1.cpp:15586 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_modified_bessel_k1_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_modified_bessel_k1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_modified_bessel_k1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_1.cpp:14538 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_1.cpp:15586 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_ndtr_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_ndtri_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_polygamma_special_polygamma_n_0_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_scaled_modified_bessel_k0_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_scaled_modified_bessel_k0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_scaled_modified_bessel_k0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_0.cpp:14883 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_2.cpp:16890 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_scaled_modified_bessel_k1_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_scaled_modified_bessel_k1.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_scaled_modified_bessel_k1.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_4.cpp:12871 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_shifted_chebyshev_polynomial_t_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_non_standard_bool_values_special_shifted_chebyshev_polynomial_u_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_non_standard_bool_values_special_shifted_chebyshev_polynomial_v_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_non_standard_bool_values_special_shifted_chebyshev_polynomial_w_xpu_bool (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_non_standard_bool_values_special_spherical_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "not implemented: Could not run 'aten::special_spherical_bessel_j0.out' with arguments from the 'XPU' backend. This could be because the operator doesn't exist for this backend, or was omitted during the selective/custom build process (if using custom build). If you are a Facebook employee using PyTorch on mobile, please visit https://fburl.com/ptmfixes for possible resolutions. 'aten::special_spherical_bessel_j0.out' is only available for these backends: [CPU, Meta, BackendSelect, Python, FuncTorchDynamicLayerBackMode, Functionalize, Named, Conjugate, Negative, ZeroTensor, ADInplaceOrView, AutogradOther, AutogradCPU, AutogradCUDA, AutogradHIP, AutogradXLA, AutogradMPS, AutogradIPU, AutogradXPU, AutogradHPU, AutogradVE, AutogradLazy, AutogradMeta, AutogradPrivateUse1, AutogradPrivateUse2, AutogradPrivateUse3, AutogradNestedTensor, Tracer, AutocastCPU, AutocastXPU, AutocastCUDA, FuncTorchBatched, FuncTorchVmapMode, Batched, VmapMode, FuncTorchGradWrapper, PythonTLSSnapshot, FuncTorchDynamicLayerFrontMode, PythonDispatcher].\n\nCPU: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterCPU.cpp:30798 [kernel]\nMeta: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterMeta.cpp:26815 [kernel]\nBackendSelect: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/BackendSelectFallbackKernel.cpp:3 [backend fallback]\nPython: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:140 [backend fallback]\nFuncTorchDynamicLayerBackMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:488 [backend fallback]\nFunctionalize: registered at /home/gta/xunsongh/pytorch/build/aten/src/ATen/RegisterFunctionalization_1.cpp:21945 [kernel]\nNamed: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/NamedRegistrations.cpp:7 [backend fallback]\nConjugate: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ConjugateFallback.cpp:18 [backend fallback]\nNegative: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/native/NegateFallback.cpp:18 [backend fallback]\nZeroTensor: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/ZeroTensorFallback.cpp:86 [backend fallback]\nADInplaceOrView: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/ADInplaceOrViewType_1.cpp:5089 [kernel]\nAutogradOther: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradCUDA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHIP: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXLA: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMPS: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradIPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradXPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradHPU: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradVE: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradLazy: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradMeta: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse1: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse2: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradPrivateUse3: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nAutogradNestedTensor: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/VariableType_2.cpp:16899 [autograd kernel]\nTracer: registered at /home/gta/xunsongh/pytorch/torch/csrc/autograd/generated/TraceType_0.cpp:16458 [kernel]\nAutocastCPU: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:482 [backend fallback]\nAutocastXPU: fallthrough registered at /home/gta/xunsongh/ipex-gpu/csrc/gpu/aten/amp/autocast_mode.cpp:233 [backend fallback]\nAutocastCUDA: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/autocast_mode.cpp:324 [backend fallback]\nFuncTorchBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/LegacyBatchingRegistrations.cpp:743 [backend fallback]\nFuncTorchVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/VmapModeRegistrations.cpp:28 [backend fallback]\nBatched: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/BatchingRegistrations.cpp:1064 [backend fallback]\nVmapMode: fallthrough registered at /home/gta/xunsongh/pytorch/aten/src/ATen/VmapModeRegistrations.cpp:33 [backend fallback]\nFuncTorchGradWrapper: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/TensorWrapper.cpp:189 [backend fallback]\nPythonTLSSnapshot: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:148 [backend fallback]\nFuncTorchDynamicLayerFrontMode: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/functorch/DynamicLayer.cpp:484 [backend fallback]\nPythonDispatcher: registered at /home/gta/xunsongh/pytorch/aten/src/ATen/core/PythonFallbackKernel.cpp:144 [backend fallback]\n"
test_non_standard_bool_values_special_xlog1py_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_special_zeta_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_split_list_args_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_split_with_sizes_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_split_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sqrt_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_square_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_squeeze_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_stack_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sum_to_size_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_sum_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_t_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_take_along_dim_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_take_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_tan_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_tanh_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_tensor_split_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_tile_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_to_sparse_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_to_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_transpose_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_tril_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_triu_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_true_divide_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_unbind_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_unflatten_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_unfold_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_unique_consecutive_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_unique_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_unsqueeze_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_view_as_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_view_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_vsplit_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_vstack_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_where_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_xlogy_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_zero__xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_zeros_like_xpu_bool (__main__.TestCommonXPU) ... FAIL
test_non_standard_bool_values_zeros_xpu_bool (__main__.TestCommonXPU) ... ok
test_noncontiguous_samples_H_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_H_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_H_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_T_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_T_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_T_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___getitem___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples___getitem___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___getitem___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___radd___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples___radd___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___radd___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rand___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rdiv___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples___rdiv___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rdiv___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rmatmul___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples___rmatmul___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rmatmul___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rmod___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rmul___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples___rmul___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rmul___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___ror___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rpow___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples___rpow___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rpow___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rsub___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples___rsub___xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rsub___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples___rxor___xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_abs_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_abs_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_acos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_acos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_acosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_acosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addbmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_addbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addbmm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addcdiv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addcmul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_addcmul_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addcmul_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addmm_decomposed_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_addmm_decomposed_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addmm_decomposed_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addmm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addmv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_addmv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addmv_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_addr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_all_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_all_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_all_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_allclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_aminmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_aminmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_angle_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_angle_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_angle_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_any_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_any_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_any_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_arange_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argmin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argsort_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argsort_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argwhere_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_argwhere_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_argwhere_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_as_strided_scatter_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_as_strided_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Works for int64, fails for everything else'
test_noncontiguous_samples_as_strided_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Works for int64, fails for everything else'
test_noncontiguous_samples_as_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_as_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_asin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_asin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_asinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_asinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atan2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atleast_1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atleast_1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atleast_2d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atleast_2d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atleast_3d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_atleast_3d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_baddbmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_baddbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_baddbmm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bernoulli_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bfloat16_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_bfloat16_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bfloat16_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bincount_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bitwise_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bitwise_left_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bitwise_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bitwise_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bitwise_right_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bitwise_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_block_diag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_block_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_block_diag_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_bmm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bmm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bool_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_bool_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bool_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_broadcast_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_broadcast_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_broadcast_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_broadcast_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bucketize_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_bucketize_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_byte_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_byte_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_byte_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cartesian_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cartesian_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cartesian_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cdist_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ceil_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_chalf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_chalf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_chalf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_char_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_char_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_char_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cholesky_inverse_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cholesky_inverse_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cholesky_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cholesky_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cholesky_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_chunk_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_chunk_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clamp_max_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clamp_min_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clamp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clone_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_clone_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_column_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_column_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_combinations_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_combinations_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_combinations_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_conj_physical_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_conj_physical_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_conj_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_conj_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_constant_pad_nd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_constant_pad_nd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_contiguous_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_contiguous_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_copysign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_corrcoef_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_corrcoef_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_corrcoef_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_count_nonzero_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_count_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_count_nonzero_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cov_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cov_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cov_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cross_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cross_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cummax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cummax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cummin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cummin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cumprod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cumprod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cumsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cumsum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cumulative_trapezoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_cumulative_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_cumulative_trapezoid_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_deg2rad_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_deg2rad_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diag_embed_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diag_embed_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diag_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diagflat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_diagflat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diagflat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diagonal_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diagonal_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diagonal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diagonal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diff_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_diff_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_diff_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_digamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_dist_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_dist_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_div_floor_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_div_no_rounding_mode_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_div_no_rounding_mode_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_div_trunc_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_dot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_dot_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_double_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_double_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_double_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_dsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_dsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_dstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_dstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_einsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_einsum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_einsum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_empty_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_empty_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_eq_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_eq_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_equal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_equal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_equal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_erf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_erfc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_erfinv_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_exp2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_exp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_exp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_expand_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_expand_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_expand_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_expand_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_expm1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_eye_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_eye_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_fft_fft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_fftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_hfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ifftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ihfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ihfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_ihfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_irfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_rfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_rfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fft_rfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_noncontiguous_samples_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_flatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_flatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_flip_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_flip_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fliplr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fliplr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_flipud_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_flipud_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_float_power_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_float_power_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_float_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_float_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_float_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_floor_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_floor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fmin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_fmod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_frexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_full_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_full_like_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_full_like_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_gather_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_gather_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_gather_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_gcd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ge_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_geqrf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_geqrf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_gradient_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_gradient_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_gradient_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_gt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_half_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_half_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_half_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_heaviside_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_histc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_histogram_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_histogramdd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_hsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_hsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_hstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_hstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_i0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_imag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_index_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_put_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_index_put_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_put_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_reduce_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_reduce_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_index_select_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_inner_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_inner_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_inner_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_int_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_int_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_int_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isclose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isfinite_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isfinite_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isinf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isnan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isnan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isneginf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isposinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isreal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_isreal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_istft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_istft_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_jiterator_2inputs_2outputs_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_jiterator_2inputs_2outputs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_2inputs_2outputs_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_4inputs_with_extra_args_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_jiterator_4inputs_with_extra_args_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_4inputs_with_extra_args_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_binary_return_by_ref_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_jiterator_binary_return_by_ref_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_binary_return_by_ref_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_binary_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_jiterator_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_binary_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_unary_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_jiterator_unary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_jiterator_unary_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_noncontiguous_samples_kron_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_kron_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_kron_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_kthvalue_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_kthvalue_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lcm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ldexp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_ldexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ldexp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_le_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_le_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lerp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_lerp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lgamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_cholesky_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_cholesky_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_cholesky_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_cond_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_cond_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_cross_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_cross_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_det_singular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_det_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'The backward may give different results'
test_noncontiguous_samples_linalg_det_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_det_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_eig_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_eig_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_eigh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_eigh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_eigvals_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_eigvals_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_eigvalsh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_eigvalsh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_householder_product_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_householder_product_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_inv_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_inv_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_inv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_inv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_ldl_factor_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_ldl_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_ldl_factor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_ldl_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_ldl_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_ldl_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_lstsq_grad_oriented_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_lstsq_grad_oriented_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_lstsq_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_lstsq_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_lu_factor_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_lu_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_lu_factor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_lu_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_lu_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_lu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_matrix_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_matrix_power_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_matrix_power_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_matrix_rank_hermitian_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_matrix_rank_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_matrix_rank_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_matrix_rank_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_multi_dot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_multi_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped '67470!'
test_noncontiguous_samples_linalg_multi_dot_xpu_int64 (__main__.TestCommonXPU) ... skipped '67470!'
test_noncontiguous_samples_linalg_norm_subgradients_at_zero_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_norm_subgradients_at_zero_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_pinv_hermitian_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_pinv_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_pinv_singular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_pinv_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_pinv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_pinv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_qr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_slogdet_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_slogdet_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_solve_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_solve_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_solve_triangular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_solve_triangular_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_svd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_svdvals_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_tensorinv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_tensorinv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_tensorsolve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_tensorsolve_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_vander_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_vander_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_vander_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_vecdot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_vecdot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linalg_vector_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_linspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log10_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log10_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log1p_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log_softmax_dtype_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_log_softmax_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log_softmax_dtype_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_log_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_log_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logaddexp2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logcumsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logdet_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_logdet_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_and_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_not_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_or_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_xor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logical_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_logsumexp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_long_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_long_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_long_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lu_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lu_unpack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_lu_unpack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_lu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mH_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_mH_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mH_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mT_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_mT_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mT_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_argmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_argmin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_cumprod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_cumprod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_cumsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_cumsum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_logsumexp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_mean_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_median_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_normalize_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_scatter_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_select_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_select_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_std_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_std_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_std_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_sum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_var_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_masked_var_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_masked_var_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_matmul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_matmul_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_matmul_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_matrix_exp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_matrix_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_max_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_max_binary_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_max_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_max_reduction_no_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_max_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_max_reduction_with_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_maximum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_median_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_median_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_meshgrid_list_of_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_meshgrid_list_of_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_meshgrid_variadic_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_meshgrid_variadic_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_min_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_min_binary_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_min_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_min_reduction_no_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_min_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_min_reduction_with_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_minimum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_mm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mode_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_movedim_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_movedim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_msort_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_msort_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mul_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_multinomial_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_mv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mv_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mvlgamma_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mvlgamma_mvlgamma_p_1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mvlgamma_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mvlgamma_mvlgamma_p_3_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mvlgamma_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_mvlgamma_mvlgamma_p_5_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nan_to_num_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nanmean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nanmedian_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nanmedian_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nanquantile_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nansum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nansum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_narrow_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_narrow_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_narrow_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_narrow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_narrow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ne_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ne_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_neg_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_neg_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_new_empty_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: new_empty_strided is not comparable'
test_noncontiguous_samples_new_empty_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: new_empty_strided is not comparable'
test_noncontiguous_samples_new_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_new_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_new_full_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_new_full_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_new_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_new_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_new_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_new_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional__scaled_dot_product_attention_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_adaptive_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_adaptive_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_adaptive_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_adaptive_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_adaptive_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_adaptive_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_avg_pool1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_avg_pool2d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_avg_pool3d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_bilinear_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_binary_cross_entropy_with_logits_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_binary_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_conv1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv2d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_conv2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv2d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv_transpose1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_conv_transpose1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv_transpose1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv_transpose2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv_transpose2d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv_transpose3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_conv_transpose3d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_cosine_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_cosine_embedding_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_cosine_similarity_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_ctc_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_dropout2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_dropout3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_embedding_bag_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_embedding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_feature_alpha_dropout_with_train_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_feature_alpha_dropout_without_train_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_feature_alpha_dropout_without_train_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_feature_alpha_dropout_without_train_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_fractional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_fractional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_gaussian_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_grid_sample_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_group_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_hardsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_hardswish_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_hardtanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_instance_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_interpolate_area_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_interpolate_bicubic_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_interpolate_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_interpolate_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_interpolate_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_interpolate_trilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_kl_div_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_l1_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_linear_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_linear_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_local_response_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_local_response_norm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_logsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_margin_ranking_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_unpool1d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_unpool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_unpool2d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_unpool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_unpool3d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_max_unpool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_multi_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_multilabel_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_multilabel_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_normalize_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_one_hot_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pad_circular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_pad_circular_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pad_circular_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pad_constant_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_pad_constant_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pad_constant_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pad_reflect_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_pad_reflect_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pad_replicate_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_pad_replicate_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pairwise_distance_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pairwise_distance_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pixel_shuffle_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_pixel_shuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pixel_shuffle_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pixel_unshuffle_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_pixel_unshuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_pixel_unshuffle_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_poisson_nll_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_relu6_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_relu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_rrelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_silu_complex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_silu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_smooth_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_softmin_with_dtype_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_softmin_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_softmin_with_dtype_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_softsign_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_softsign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_softsign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_tanhshrink_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_tanhshrink_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_threshold_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_triplet_margin_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_triplet_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_triplet_margin_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_triplet_margin_with_distance_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_triplet_margin_with_distance_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_triplet_margin_with_distance_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_unfold_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nn_functional_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_upsample_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nn_functional_upsample_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nonzero_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_nonzero_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_norm_fro_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_norm_fro_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_norm_inf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_norm_inf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_norm_nuc_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_norm_nuc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_normal_number_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_normal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ones_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_ones_like_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ones_like_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ormqr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_ormqr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_outer_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_outer_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_outer_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_pca_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_permute_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_permute_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_pinverse_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_pinverse_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_polar_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_polygamma_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_polygamma_polygamma_n_0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_polygamma_polygamma_n_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_polygamma_polygamma_n_1_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_polygamma_polygamma_n_2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_polygamma_polygamma_n_2_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_polygamma_polygamma_n_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_polygamma_polygamma_n_3_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_polygamma_polygamma_n_4_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_polygamma_polygamma_n_4_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_positive_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_positive_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_pow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_pow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_put_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_put_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_put_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_qr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_quantile_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rad2deg_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rad2deg_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rand_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_rand_like_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_randint_like_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_randint_like_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_randn_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_randn_like_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_randn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Test expects tensor input'
test_noncontiguous_samples_ravel_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_ravel_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_real_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_real_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_reciprocal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_reciprocal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_remainder_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_renorm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_renorm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_repeat_interleave_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_repeat_interleave_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_repeat_interleave_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_repeat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_repeat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_reshape_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_reshape_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_reshape_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_reshape_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resize__xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_resize__xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resize__xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resize_as__xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_resize_as__xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resize_as__xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resolve_conj_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_resolve_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resolve_conj_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resolve_neg_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_resolve_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_resolve_neg_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_roll_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_roll_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rot90_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rot90_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_round_decimals_0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_round_decimals_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_round_decimals_neg_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_round_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_round_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rsqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rsqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rsub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_rsub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_scatter_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_mean_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_reduce_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_searchsorted_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_searchsorted_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_segment_reduce_lengths_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_segment_reduce_offsets_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_select_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_select_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_select_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_select_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sgn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sgn_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_short_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_short_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_short_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sigmoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sigmoid_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_signbit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sinc_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sinc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_slice_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_slice_scatter_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_slice_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_slice_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_slice_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_softmax_with_dtype_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_softmax_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_softmax_with_dtype_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sort_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sort_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sparse_sampled_addmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sparse_sampled_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_special_airy_ai_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_airy_ai_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_j1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_y0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_y0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_y1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_bessel_y1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_chebyshev_polynomial_t_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_chebyshev_polynomial_u_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_chebyshev_polynomial_v_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_chebyshev_polynomial_w_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_entr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_entr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_erfcx_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_erfcx_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_hermite_polynomial_h_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_hermite_polynomial_h_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_hermite_polynomial_he_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_hermite_polynomial_he_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_i0e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_i1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_i1e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_laguerre_polynomial_l_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_laguerre_polynomial_l_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_legendre_polynomial_p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_legendre_polynomial_p_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_log_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_log_ndtr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_i0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_i1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_k0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_modified_bessel_k1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_ndtr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_ndtri_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_ndtri_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_polygamma_special_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_polygamma_special_polygamma_n_0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_scaled_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_scaled_modified_bessel_k0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_scaled_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_scaled_modified_bessel_k1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_t_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_u_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_v_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_shifted_chebyshev_polynomial_w_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipping - testing takes an unreasonably long time, #79528'
test_noncontiguous_samples_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_spherical_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_xlog1py_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_xlog1py_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_special_zeta_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_split_list_args_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_split_list_args_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_split_list_args_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_split_with_sizes_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_split_with_sizes_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_split_with_sizes_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_split_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_split_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_split_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_square_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_square_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_square_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_squeeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_squeeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_std_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_std_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_std_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_stft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_stft_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sum_to_size_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sum_to_size_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_svd_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_svd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_symeig_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_symeig_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_t_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_t_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_t_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_take_along_dim_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_take_along_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_take_along_dim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_take_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_take_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_take_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tensor_split_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tensor_split_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tensordot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_tensordot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tensordot_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tile_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_tile_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tile_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_to_sparse_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_to_sparse_xpu_float32 (__main__.TestCommonXPU) ... skipped ''
test_noncontiguous_samples_to_sparse_xpu_int64 (__main__.TestCommonXPU) ... skipped ''
test_noncontiguous_samples_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_topk_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_topk_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_transpose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_transpose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trapezoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trapezoid_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trapz_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_trapz_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trapz_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_triangular_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_triangular_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_tril_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_tril_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_noncontiguous_samples_triu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_triu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_true_divide_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_true_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_trunc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unbind_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unbind_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unflatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unflatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unfold_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unfold_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_uniform_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_uniform_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unique_consecutive_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unique_consecutive_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unique_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unique_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unsqueeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_unsqueeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_var_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_var_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_var_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_vdot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_vdot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_vdot_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_view_as_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_view_as_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_view_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_view_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_view_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_view_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_view_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_vsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_vsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_vstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_vstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_where_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_where_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_where_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_xlogy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_xlogy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_zero__xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_zero__xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_zero__xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_zeros_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_zeros_like_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_zeros_like_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_noncontiguous_samples_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_noncontiguous_samples_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_addbmm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_addbmm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_addbmm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_allclose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_allclose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_aminmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_aminmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_argwhere_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_argwhere_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_argwhere_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_broadcast_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_broadcast_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_broadcast_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_broadcast_to_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_broadcast_to_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_broadcast_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_cat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_cat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_cat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_clamp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_clamp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_clone_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_clone_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_clone_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_diagflat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_diagflat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_diagflat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_diff_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_diff_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_diff_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_equal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_equal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_equal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_flatten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_flatten_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_flatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_jiterator_2inputs_2outputs_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_jiterator_2inputs_2outputs_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_numpy_ref_jiterator_2inputs_2outputs_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_numpy_ref_jiterator_4inputs_with_extra_args_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_jiterator_4inputs_with_extra_args_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_numpy_ref_jiterator_4inputs_with_extra_args_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_numpy_ref_linalg_cross_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_linalg_cross_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_linalg_cross_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_linalg_tensorinv_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_linalg_tensorinv_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_linalg_tensorsolve_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_linalg_tensorsolve_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_linalg_vander_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_linalg_vander_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_linalg_vander_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_linalg_vecdot_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_linalg_vecdot_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_meshgrid_variadic_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_meshgrid_variadic_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_native_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_conv_transpose1d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_nn_functional_conv_transpose1d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_conv_transpose1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_gelu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_group_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_l1_loss_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_nn_functional_l1_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_mse_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_one_hot_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_pairwise_distance_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_nn_functional_pairwise_distance_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_pairwise_distance_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_pdist_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_nn_functional_smooth_l1_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_permute_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_permute_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_permute_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_ravel_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_ravel_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_ravel_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_repeat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_repeat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_repeat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_roll_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_roll_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_roll_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_searchsorted_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_searchsorted_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_tensor_split_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_tensor_split_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_tensor_split_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_tile_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_tile_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_tile_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_transpose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_transpose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_transpose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_unbind_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_unbind_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_unbind_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_where_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_numpy_ref_where_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_numpy_ref_where_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_out_H_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_T_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___getitem___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___radd___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rand___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rdiv___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rmatmul___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rmod___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rmul___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___ror___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rpow___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rsub___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out___rxor___xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_all_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_any_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_bitwise_and_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_bitwise_left_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_bitwise_not_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_bitwise_or_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_bitwise_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_gcd_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_imag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_lcm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_le_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_log_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_real_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_round_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_multigammaln_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_multigammaln_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_multigammaln_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_square_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_std_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_unfold_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_var_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_view_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_where_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out__refs_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_addbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_addcmul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_addmm_decomposed_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_addmv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_all_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_aminmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_angle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_any_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_argsort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_argwhere_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_as_strided_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_baddbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bernoulli_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bfloat16_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bincount_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bitwise_and_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bitwise_left_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bitwise_not_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bitwise_or_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bitwise_right_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bitwise_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_block_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bool_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_bucketize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_byte_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cartesian_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cdist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_chalf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_char_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cholesky_inverse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cholesky_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_combinations_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_corrcoef_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_count_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cov_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cummax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cummin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_cumulative_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_deg2rad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_diagflat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_diagonal_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_diff_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_dist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_double_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_einsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_equal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_float_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_frexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_full_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_gather_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_gcd_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_geqrf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_gradient_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_half_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_histc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_histogram_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_histogramdd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_imag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_index_put_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_index_reduce_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_inner_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_int_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_istft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_jiterator_2inputs_2outputs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_jiterator_4inputs_with_extra_args_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_jiterator_binary_return_by_ref_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_jiterator_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_jiterator_unary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_kron_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_kthvalue_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_lcm_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ldexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_le_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_lerp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_cholesky_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_cond_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_det_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_det_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_eig_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_eigh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_eigvals_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_eigvalsh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_householder_product_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_inv_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_inv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_ldl_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_ldl_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_ldl_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_lstsq_grad_oriented_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_lstsq_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_lu_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_lu_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_matrix_power_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_matrix_rank_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_matrix_rank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_multi_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_norm_subgradients_at_zero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_pinv_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_pinv_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_pinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_slogdet_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_solve_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_solve_triangular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_tensorinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_tensorsolve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_vander_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_vecdot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_log_softmax_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_log_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logaddexp2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logcumsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logdet_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_long_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_lu_unpack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mH_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mT_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_median_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_std_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_masked_var_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_matmul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_matrix_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_max_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_max_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_max_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_median_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_min_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_min_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_min_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_msort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_multinomial_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mvlgamma_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mvlgamma_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_mvlgamma_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nanmean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nanmedian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nanquantile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nansum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_narrow_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional__scaled_dot_product_attention_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_adaptive_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_adaptive_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_adaptive_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_adaptive_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_adaptive_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_adaptive_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_binary_cross_entropy_with_logits_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_binary_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_conv1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_conv2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_conv_transpose1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_conv_transpose2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_conv_transpose3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_cosine_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_cosine_similarity_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_ctc_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_dropout2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_dropout3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_embedding_bag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_embedding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_feature_alpha_dropout_with_train_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_feature_alpha_dropout_without_train_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_fractional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_fractional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_gaussian_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_grid_sample_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_group_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_hardsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_hardswish_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_instance_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_interpolate_area_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_interpolate_bicubic_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_interpolate_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_interpolate_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_interpolate_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_interpolate_trilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_kl_div_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_local_response_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_logsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_unpool1d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_unpool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_unpool2d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_unpool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_unpool3d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_max_unpool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_multi_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_multilabel_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_multilabel_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_one_hot_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pad_circular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pad_constant_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pad_reflect_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pad_replicate_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pixel_shuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_pixel_unshuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_rrelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_silu_complex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_silu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_smooth_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_softmin_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_softsign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_triplet_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_triplet_margin_with_distance_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_upsample_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nn_functional_upsample_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_norm_fro_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_norm_inf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_norm_nuc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_normal_number_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_normal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ones_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ops_nvprims_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ops_nvprims_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ormqr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_outer_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_pca_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_pinverse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_polar_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_polygamma_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_polygamma_polygamma_n_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_polygamma_polygamma_n_2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_polygamma_polygamma_n_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_polygamma_polygamma_n_4_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_put_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_quantile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_rad2deg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_rand_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_randint_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_randn_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_real_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_renorm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_repeat_interleave_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_resize__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_resize_as__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_resolve_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_resolve_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_round_decimals_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_round_decimals_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_round_decimals_neg_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_round_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_scatter_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_scatter_reduce_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_scatter_reduce_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_scatter_reduce_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_scatter_reduce_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_scatter_reduce_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_searchsorted_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_segment_reduce_lengths_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_segment_reduce_offsets_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_select_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_short_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_slice_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_slice_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_softmax_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sparse_sampled_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_airy_ai_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_bessel_y0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_bessel_y1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_entr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_erfcx_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_hermite_polynomial_h_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_hermite_polynomial_he_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_laguerre_polynomial_l_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_legendre_polynomial_p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_log_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_modified_bessel_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_modified_bessel_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_ndtri_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_polygamma_special_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_scaled_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_scaled_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_shifted_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_shifted_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_shifted_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_shifted_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_xlog1py_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_split_list_args_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_split_with_sizes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_split_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_square_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_std_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_stft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_svd_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_symeig_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_take_along_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_take_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_tensordot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_tile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_to_sparse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_topk_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_trapz_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_triangular_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_uniform_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_unique_consecutive_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_unique_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_var_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_vdot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_view_as_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_view_as_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_view_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_H_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_T_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___getitem___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___radd___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rand___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rdiv___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rmatmul___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rmod___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rmul___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___ror___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rpow___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rsub___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning___rxor___xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_abs_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_acos_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_acosh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_add_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_addcdiv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_addr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_all_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_allclose_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_amax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_amin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_any_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_arange_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_as_strided_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_asin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_asinh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_atan2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_atan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_atanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_atleast_1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_atleast_2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_atleast_3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_bitwise_and_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_bitwise_left_shift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_bitwise_not_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_bitwise_or_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_bitwise_xor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_broadcast_shapes_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_broadcast_tensors_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_broadcast_to_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_cat_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_ceil_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_chunk_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_clamp_max_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_clamp_min_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_clamp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_clone_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_column_stack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_conj_physical_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_conj_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_constant_pad_nd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_contiguous_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_copysign_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_cos_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_cosh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_cumsum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_diag_embed_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_diagonal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_digamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_div_floor_rounding_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_div_no_rounding_mode_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_div_trunc_rounding_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_dsplit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_dstack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_empty_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_empty_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_eq_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_erf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_erfc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_erfinv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_exp2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_exp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_expand_as_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_expand_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_expm1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_eye_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_fft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_fft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_fftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_fftshift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_hfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_hfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_hfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_ifft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_ifft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_ifftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_ifftshift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_ihfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_ihfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_ihfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_irfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_irfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_irfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_rfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_rfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fft_rfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fill_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_flatten_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_flip_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fliplr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_flipud_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_float_power_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_floor_divide_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_floor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fmin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_fmod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_frac_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_gcd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_ge_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_gt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_heaviside_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_hsplit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_hstack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_hypot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_i0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_igamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_igammac_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_imag_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_index_add_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_index_copy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_index_fill_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_index_select_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_isclose_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_isfinite_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_isinf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_isnan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_isneginf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_isposinf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_isreal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_lcm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_le_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_lgamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_linalg_matrix_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_linalg_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_linalg_svd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_linalg_svdvals_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_linalg_vector_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_linspace_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_log10_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_log1p_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_log2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_log_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_log_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_logical_and_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_logical_not_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_logical_or_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_logical_xor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_logspace_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_logsumexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_lt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_masked_fill_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_maximum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_meshgrid_list_of_tensors_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_meshgrid_variadic_tensors_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_minimum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_movedim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_mul_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nan_to_num_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_narrow_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_native_layer_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_ne_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_neg_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_new_empty_strided_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_new_empty_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_new_full_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_new_ones_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_new_zeros_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nextafter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_celu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_dropout_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_elu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_gelu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_glu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_hardshrink_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_hardtanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_hinge_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_huber_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_l1_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_layer_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_leaky_relu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_margin_ranking_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_mish_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_mse_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_pairwise_distance_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_pdist_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_poisson_nll_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_prelu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_relu6_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_relu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_selu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_softplus_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_softshrink_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_tanhshrink_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_nn_functional_threshold_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_ones_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_permute_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_positive_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_pow_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_prod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_randn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_ravel_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_real_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_reciprocal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_remainder_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_repeat_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_reshape_as_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_reshape_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_roll_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_rot90_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_round_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_rsqrt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_rsub_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sgn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sigmoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sign_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_signbit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sinc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sinh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_bessel_j1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_i0e_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_i1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_i1e_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_logit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_multigammaln_mvlgamma_p_1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_multigammaln_mvlgamma_p_3_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_multigammaln_mvlgamma_p_5_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_spherical_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_special_zeta_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sqrt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_square_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_squeeze_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_stack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_std_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_std_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sub_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sum_to_size_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_sum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_t_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_tan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_tanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_tensor_split_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_to_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_trace_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_transpose_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_tril_indices_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_tril_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_triu_indices_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_triu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_true_divide_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_trunc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_unbind_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_unflatten_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_unfold_copy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_unsqueeze_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_var_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_var_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_view_as_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_view_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_vsplit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_vstack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_where_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning__refs_zeros_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_abs_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_acos_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_acosh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_add_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_addbmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_addcdiv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_addcmul_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_addmm_decomposed_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_addmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_addmv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_addr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_all_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_allclose_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_amax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_amin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_aminmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_angle_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_any_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_arange_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_argmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_argmin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_argsort_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_argwhere_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_as_strided_scatter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_as_strided_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_asin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_asinh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_atan2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_atan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_atanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_atleast_1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_atleast_2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_atleast_3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_baddbmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bernoulli_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bfloat16_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bincount_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bitwise_and_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bitwise_left_shift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bitwise_not_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bitwise_or_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bitwise_right_shift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bitwise_xor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_block_diag_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bool_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_broadcast_shapes_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_broadcast_tensors_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_broadcast_to_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_bucketize_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_byte_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cartesian_prod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cat_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cdist_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ceil_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_chalf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_char_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cholesky_inverse_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cholesky_solve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cholesky_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_chunk_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_clamp_max_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_clamp_min_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_clamp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_clone_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_column_stack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_combinations_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_complex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_conj_physical_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_conj_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_constant_pad_nd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_contiguous_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_copysign_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_corrcoef_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cos_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cosh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_count_nonzero_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cov_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cross_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cummax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cummin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cumprod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cumsum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_cumulative_trapezoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_deg2rad_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_diag_embed_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_diag_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_diagflat_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_diagonal_scatter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_diagonal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_diff_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_digamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_dist_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_div_floor_rounding_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_div_no_rounding_mode_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_div_trunc_rounding_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_dot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_double_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_dsplit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_dstack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_einsum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_empty_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_empty_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_eq_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_equal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_erf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_erfc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_erfinv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_exp2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_exp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_expand_as_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_expand_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_expm1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_eye_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_fft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_fft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_fftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_fftshift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_hfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_hfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_hfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_ifft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_ifft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_ifftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_ifftshift_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_ihfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_ihfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_ihfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_irfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_irfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_irfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_rfft2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_rfft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fft_rfftn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fill_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_flatten_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_flip_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fliplr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_flipud_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_float_power_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_float_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_floor_divide_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_floor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fmin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_fmod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_frac_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_frexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_full_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_gather_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_gcd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ge_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_geqrf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_gradient_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_gt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_half_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_heaviside_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_histc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_histogram_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_histogramdd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_hsplit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_hstack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_hypot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_i0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_igamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_igammac_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_imag_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_index_add_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_index_copy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_index_fill_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_index_put_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_index_reduce_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_index_select_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_inner_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_int_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isclose_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isfinite_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isinf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isnan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isneginf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isposinf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_isreal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_istft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_jiterator_2inputs_2outputs_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_jiterator_4inputs_with_extra_args_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_jiterator_binary_return_by_ref_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_jiterator_binary_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_jiterator_unary_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_kron_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_kthvalue_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_lcm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ldexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_le_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_lerp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_lgamma_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_cholesky_ex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_cholesky_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_cond_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_cross_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_det_singular_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_det_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_eig_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_eigh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_eigvals_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_eigvalsh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_householder_product_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_inv_ex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_inv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_ldl_factor_ex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_ldl_factor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_ldl_solve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_lstsq_grad_oriented_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_lstsq_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_lu_factor_ex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_lu_factor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_lu_solve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_lu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_matrix_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_matrix_power_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_matrix_rank_hermitian_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_matrix_rank_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_multi_dot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_norm_subgradients_at_zero_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_pinv_hermitian_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_pinv_singular_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_pinv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_qr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_slogdet_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_solve_ex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_solve_triangular_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_solve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_svd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_svdvals_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_tensorinv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_tensorsolve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_vander_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_vecdot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linalg_vector_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_linspace_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_log10_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_log1p_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_log2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_log_softmax_dtype_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_log_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_log_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logaddexp2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logaddexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logcumsumexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logdet_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logical_and_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logical_not_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logical_or_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logical_xor_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logspace_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_logsumexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_long_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_lt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_lu_solve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_lu_unpack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_lu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mH_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mT_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_amax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_amin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_argmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_argmin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_cumprod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_cumsum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_fill_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_log_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_logaddexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_logsumexp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_median_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_normalize_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_prod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_scatter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_select_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_softmin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_std_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_sum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_masked_var_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_matmul_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_matrix_exp_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_max_binary_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_max_reduction_no_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_max_reduction_with_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_maximum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_median_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_meshgrid_list_of_tensors_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_meshgrid_variadic_tensors_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_min_binary_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_min_reduction_no_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_min_reduction_with_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_minimum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mode_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_movedim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_msort_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mul_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_multinomial_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mv_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mvlgamma_mvlgamma_p_1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mvlgamma_mvlgamma_p_3_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_mvlgamma_mvlgamma_p_5_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nan_to_num_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nanmean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nanmedian_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nanquantile_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nansum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_narrow_copy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_narrow_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_native_batch_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_native_layer_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ne_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_neg_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_new_empty_strided_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_new_empty_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_new_full_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_new_ones_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_new_zeros_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nextafter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional__scaled_dot_product_attention_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_adaptive_avg_pool1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_adaptive_avg_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_adaptive_avg_pool3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_adaptive_max_pool1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_adaptive_max_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_adaptive_max_pool3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_avg_pool1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_avg_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_avg_pool3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_batch_norm_without_cudnn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_batch_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_bilinear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_binary_cross_entropy_with_logits_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_binary_cross_entropy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_celu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_conv1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_conv2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_conv_transpose1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_conv_transpose2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_conv_transpose3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_cosine_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_cosine_similarity_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_cross_entropy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_ctc_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_dropout2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_dropout3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_dropout_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_elu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_embedding_bag_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_embedding_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_feature_alpha_dropout_with_train_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_feature_alpha_dropout_without_train_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_fractional_max_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_fractional_max_pool3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_gaussian_nll_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_gelu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_glu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_grid_sample_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_group_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_hardshrink_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_hardsigmoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_hardswish_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_hardtanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_hinge_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_huber_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_instance_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_interpolate_area_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_interpolate_bicubic_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_interpolate_bilinear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_interpolate_linear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_interpolate_nearest_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_interpolate_trilinear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_kl_div_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_l1_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_layer_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_leaky_relu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_linear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_local_response_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_logsigmoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_margin_ranking_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_pool1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_pool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_pool3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_unpool1d_grad_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_unpool1d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_unpool2d_grad_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_unpool2d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_unpool3d_grad_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_max_unpool3d_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_mish_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_mse_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_multi_margin_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_multilabel_margin_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_multilabel_soft_margin_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_nll_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_normalize_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_one_hot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pad_circular_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pad_constant_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pad_reflect_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pad_replicate_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pairwise_distance_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pdist_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pixel_shuffle_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_pixel_unshuffle_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_poisson_nll_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_prelu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_relu6_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_relu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_rrelu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_selu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_silu_complex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_silu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_smooth_l1_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_soft_margin_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_softmin_with_dtype_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_softmin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_softplus_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_softshrink_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_softsign_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_tanhshrink_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_threshold_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_triplet_margin_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_triplet_margin_with_distance_loss_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_unfold_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_upsample_bilinear_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nn_functional_upsample_nearest_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_nonzero_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_norm_fro_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_norm_inf_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_norm_nuc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_normal_number_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_normal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ones_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ones_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ops_nvprims_native_batch_norm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ops_nvprims_var_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ormqr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_outer_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_pca_lowrank_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_permute_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_pinverse_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_polar_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_polygamma_polygamma_n_0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_polygamma_polygamma_n_1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_polygamma_polygamma_n_2_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_polygamma_polygamma_n_3_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_polygamma_polygamma_n_4_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_positive_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_pow_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_prod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_put_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_qr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_quantile_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_rad2deg_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_rand_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_randint_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_randn_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_randn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_ravel_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_real_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_reciprocal_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_remainder_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_renorm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_repeat_interleave_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_repeat_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_reshape_as_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_reshape_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_resize__xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_resize_as__xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_resolve_conj_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_resolve_neg_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_roll_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_rot90_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_round_decimals_0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_round_decimals_3_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_round_decimals_neg_3_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_round_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_rsqrt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_rsub_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_scatter_add_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_scatter_reduce_amax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_scatter_reduce_amin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_scatter_reduce_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_scatter_reduce_prod_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_scatter_reduce_sum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_scatter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_searchsorted_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_segment_reduce_lengths_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_segment_reduce_offsets_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_select_scatter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_select_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sgn_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_short_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sigmoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sign_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_signbit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sin_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sinc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sinh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_slice_scatter_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_slice_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_softmax_with_dtype_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_softmax_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sort_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sparse_sampled_addmm_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_airy_ai_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_bessel_j1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_bessel_y0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_bessel_y1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_chebyshev_polynomial_t_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_chebyshev_polynomial_u_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_chebyshev_polynomial_v_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_chebyshev_polynomial_w_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_entr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_erfcx_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_hermite_polynomial_h_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_hermite_polynomial_he_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_i0e_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_i1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_i1e_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_laguerre_polynomial_l_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_legendre_polynomial_p_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_log_ndtr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_modified_bessel_i0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_modified_bessel_i1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_modified_bessel_k0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_modified_bessel_k1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_ndtr_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_ndtri_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_polygamma_special_polygamma_n_0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_scaled_modified_bessel_k0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_scaled_modified_bessel_k1_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_shifted_chebyshev_polynomial_t_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_shifted_chebyshev_polynomial_u_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_shifted_chebyshev_polynomial_v_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_shifted_chebyshev_polynomial_w_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_spherical_bessel_j0_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_xlog1py_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_special_zeta_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_split_list_args_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_split_with_sizes_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_split_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sqrt_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_square_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_squeeze_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_stack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_std_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_std_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_stft_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sub_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sum_to_size_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_sum_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_svd_lowrank_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_svd_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_symeig_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_t_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_take_along_dim_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_take_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_tan_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_tanh_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_tensor_split_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_tensordot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_tile_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_to_sparse_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_to_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_topk_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_trace_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_transpose_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_trapezoid_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_trapz_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_triangular_solve_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_tril_indices_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_tril_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_triu_indices_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_triu_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_true_divide_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_trunc_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_unbind_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_unflatten_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_unfold_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_uniform_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_unique_consecutive_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_unique_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_unsqueeze_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_var_mean_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_var_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_vdot_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_view_as_complex_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_view_as_real_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_view_as_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_view_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_vsplit_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_vstack_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_where_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_xlogy_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_zero__xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_zeros_like_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_warning_zeros_xpu (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_where_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_xlogy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_zero__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_zeros_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_out_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_python_ref__refs_abs_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_abs_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_abs_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_abs_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_abs_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_acos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acos_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_acosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_acosh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_add_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_add_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addcdiv_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addcdiv_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_addcdiv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addcdiv_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_addr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_addr_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_addr_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_all_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_all_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_all_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_allclose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_allclose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_allclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_allclose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_allclose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amax_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_amin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_any_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_any_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_any_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_arange_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_as_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_as_strided_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_as_strided_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_asin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_asinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_asinh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atanh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_1d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_1d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_1d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_2d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_2d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_2d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_2d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_3d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_3d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_atleast_3d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_atleast_3d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_and_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_and_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_and_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_and_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_and_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_left_shift_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_left_shift_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_left_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_left_shift_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_left_shift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_not_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_not_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_not_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_not_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_not_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_or_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_or_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_or_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_or_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_or_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_xor_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_xor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_xor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_xor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_bitwise_xor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_broadcast_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_broadcast_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_broadcast_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_broadcast_to_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_broadcast_to_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cat_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cat_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cat_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ceil_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_chunk_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_chunk_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_chunk_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_chunk_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_max_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_min_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clamp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_clone_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_clone_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_clone_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_clone_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_column_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_column_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_column_stack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_column_stack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_conj_physical_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_conj_physical_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_conj_physical_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_physical_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_conj_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_conj_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_conj_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_conj_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_constant_pad_nd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_constant_pad_nd_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_constant_pad_nd_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_contiguous_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_contiguous_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_contiguous_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_contiguous_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_copysign_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cos_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cosh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cumsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_cumsum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_diag_embed_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_diag_embed_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_diag_embed_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diag_embed_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_diagonal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_diagonal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_diagonal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_diagonal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_digamma_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_floor_rounding_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_div_no_rounding_mode_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_div_no_rounding_mode_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_no_rounding_mode_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_div_trunc_rounding_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_dsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_dsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_dsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_dstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_dstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_dstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_dstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_empty_like_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_empty_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_empty_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_empty_like_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_like_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_empty_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_empty_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_eq_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_eq_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_eq_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_eq_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eq_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_erfinv_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_exp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_exp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_expand_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_expand_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_expand_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_expand_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expand_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_expm1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_eye_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_eye_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_eye_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fft_fft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_fftshift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_hfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ifftshift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_ihfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_irfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fft_rfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref__refs_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_flatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_flatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_flatten_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flatten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_flip_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_flip_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flip_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_fliplr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_fliplr_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fliplr_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_flipud_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_flipud_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_flipud_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_float_power_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_float_power_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_float_power_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_python_ref__refs_floor_divide_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_divide_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_floor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmax_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_fmod_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_frac_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_frac_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_frac_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gcd_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gcd_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gcd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gcd_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gcd_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ge_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_gt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_heaviside_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_hsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_hsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_hsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_hstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_hstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_hstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hypot_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_hypot_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_i0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igamma_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igammac_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igammac_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_igammac_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_imag_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_imag_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_imag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_add_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_add_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_add_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_copy_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_copy_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_select_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_index_select_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_index_select_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isclose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isclose_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isfinite_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isfinite_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isfinite_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isfinite_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isinf_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isinf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isinf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isinf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isnan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isnan_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isnan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isneginf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isposinf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isreal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isreal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_isreal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_isreal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lcm_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lcm_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lcm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lcm_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lcm_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_le_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lgamma_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_matrix_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_matrix_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_matrix_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_matrix_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_matrix_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_svd_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_svd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_svd_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_svdvals_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_svdvals_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_svdvals_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_vector_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_vector_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_vector_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linalg_vector_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linalg_vector_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_linspace_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_linspace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_log10_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log10_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log1p_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_log2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_softmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_softmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_log_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_log_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_log_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_and_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_and_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_and_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_not_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_not_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_not_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_or_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_or_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_or_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_xor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logical_xor_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logical_xor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logspace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_logsumexp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_lt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_masked_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_masked_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_masked_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_masked_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_maximum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_meshgrid_list_of_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_meshgrid_list_of_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_list_of_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_meshgrid_variadic_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_meshgrid_variadic_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_meshgrid_variadic_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_minimum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_movedim_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_movedim_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_movedim_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_movedim_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_mul_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_mul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_mul_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_mul_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nan_to_num_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_narrow_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_narrow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_narrow_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_narrow_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_native_layer_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_native_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ne_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ne_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ne_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_neg_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_neg_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_neg_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_neg_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_empty_strided_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_empty_strided_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_empty_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_empty_strided_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_strided_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref__refs_new_empty_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_empty_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_empty_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref__refs_new_full_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_full_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_full_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_full_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_full_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_ones_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_ones_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_new_zeros_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_new_zeros_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nextafter_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nextafter_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_celu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_celu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_dropout_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: dropout is not comparable'
test_python_ref__refs_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: dropout is not comparable'
test_python_ref__refs_nn_functional_dropout_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: dropout is not comparable'
test_python_ref__refs_nn_functional_elu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_elu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_gelu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_gelu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_glu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_glu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardtanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardtanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardtanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardtanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardtanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hardtanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hinge_embedding_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_hinge_embedding_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_huber_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_huber_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_huber_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_l1_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_l1_loss_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_nn_functional_l1_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_nn_functional_l1_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_l1_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_layer_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_leaky_relu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_leaky_relu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_margin_ranking_loss_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_mish_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_mse_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_mse_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_nn_functional_pairwise_distance_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_nn_functional_pairwise_distance_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pairwise_distance_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_pdist_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_poisson_nll_loss_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_prelu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_prelu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu6_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_relu_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_selu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_selu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_softplus_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_softplus_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_softshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_softshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_nn_functional_tanhshrink_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_tanhshrink_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_nn_functional_threshold_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ones_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ones_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_permute_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_permute_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_permute_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_permute_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_positive_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_positive_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_positive_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_positive_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_pow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_pow_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_pow_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_prod_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_randn_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_randn_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_randn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_randn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_randn_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_randn_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ravel_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ravel_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_ravel_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_ravel_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_real_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_real_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_real_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reciprocal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reciprocal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reciprocal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_remainder_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_repeat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_repeat_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_repeat_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reshape_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reshape_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reshape_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reshape_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reshape_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_reshape_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_reshape_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_roll_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_roll_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_roll_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_roll_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_rot90_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_rot90_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rot90_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_round_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_rsqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsqrt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_rsub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_rsub_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_rsub_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sgn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sgn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sgn_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sgn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sigmoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sigmoid_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sign_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_signbit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sinc_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sinh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_softmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_softmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_bessel_j1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i0e_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_i1e_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_logit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_3_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_multigammaln_mvlgamma_p_5_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_spherical_bessel_j0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_special_zeta_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sqrt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_square_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_square_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_square_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_squeeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_squeeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_squeeze_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_squeeze_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_stack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_stack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_std_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_std_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_std_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_std_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_std_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sub_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sub_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sub_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sum_to_size_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sum_to_size_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_to_size_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_sum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_sum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_t_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_t_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_t_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tanh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tensor_split_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tensor_split_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tensor_split_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_to_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_to_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_trace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_transpose_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_transpose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_transpose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_transpose_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_indices_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tril_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_tril_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_tril_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_indices_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_triu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_triu_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_triu_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_true_divide_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_true_divide_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_true_divide_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_trunc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unbind_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unbind_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unbind_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unbind_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unflatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unflatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unflatten_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unflatten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unfold_copy_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unfold_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unfold_copy_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unfold_copy_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unsqueeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unsqueeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_unsqueeze_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_unsqueeze_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_var_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_var_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_var_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_var_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_var_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_view_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_view_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_view_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_view_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_view_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_view_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_view_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_vsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_vsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_vsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_vstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_vstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_vstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_vstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_where_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_where_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_where_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_where_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref__refs_zeros_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref__refs_zeros_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_add_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_amax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_amin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_arange_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_atan2_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_bitwise_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_bitwise_left_shift_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_bitwise_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_bitwise_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_cat_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_clamp_max_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_clamp_min_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_copysign_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_diag_embed_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_diagonal_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_div_floor_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_div_no_rounding_mode_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_div_trunc_rounding_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_dsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_dstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_eq_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_eye_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_fliplr_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_flipud_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_float_power_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_floor_divide_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_fmax_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_fmin_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_fmod_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_gcd_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_ge_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_gt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_heaviside_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_hsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_hstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_hypot_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_igamma_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_igammac_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_index_select_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_isclose_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_lcm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_le_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_linspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_logical_and_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_logical_or_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_logical_xor_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_logspace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_lt_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_masked_fill_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_maximum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_mean_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_minimum_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_movedim_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_mul_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_native_layer_norm_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_ne_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_neg_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nextafter_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_gelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_hinge_embedding_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_huber_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_l1_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_margin_ranking_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_poisson_nll_loss_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_prelu_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_nn_functional_softshrink_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_pow_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_remainder_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_reshape_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_reshape_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_roll_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_rot90_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_rsub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_special_zeta_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_sub_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_sum_to_size_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_t_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_trace_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_true_divide_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_unbind_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_view_as_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_view_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_vsplit_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_vstack_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_errors__refs_where_xpu (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_executor__refs_abs_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_abs_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_abs_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_abs_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_abs_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acos_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acos_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acos_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acosh_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acosh_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_acosh_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_add_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_add_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_add_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_add_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addcdiv_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addcdiv_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addcdiv_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addcdiv_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addcdiv_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addcdiv_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addcdiv_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addcdiv_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addcdiv_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addcdiv_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addr_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addr_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_addr_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_all_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_all_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_all_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_allclose_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_allclose_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_allclose_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_allclose_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_allclose_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amax_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_amin_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_any_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_any_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_any_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_arange_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_as_strided_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asin_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asin_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asin_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asinh_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asinh_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_asinh_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atan_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atan_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atan_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atanh_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atanh_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atanh_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_1d_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_2d_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_atleast_3d_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_and_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_left_shift_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_not_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_or_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_bitwise_xor_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_shapes_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_shapes_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_tensors_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_broadcast_to_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cat_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cat_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cat_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cat_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ceil_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_chunk_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_chunk_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_chunk_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_chunk_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_max_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clamp_min_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_clone_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_clone_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_clone_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_clone_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_column_stack_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_conj_physical_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_constant_pad_nd_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_contiguous_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_copysign_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cos_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cos_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cos_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cosh_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cosh_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cosh_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_cumsum_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diag_embed_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_diagonal_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_digamma_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_floor_rounding_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_no_rounding_mode_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_div_trunc_rounding_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dsplit_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dstack_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dstack_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dstack_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_dstack_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_empty_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_like_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_like_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_like_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_empty_like_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "Can't check result for empty_like"
test_python_ref_executor__refs_eq_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eq_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eq_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eq_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eq_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erf_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfc_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_erfinv_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_exp_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_exp_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_exp_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_as_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expand_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_expm1_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eye_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eye_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_eye_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fft_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftn_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_fftshift_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfft_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_hfftn_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifft_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftn_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ifftshift_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfft_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_ihfftn_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfft_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_irfftn_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfft_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fft_rfftn_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_executor__refs_fill_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fill_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fill_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fill_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fill_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flatten_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flatten_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flatten_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flatten_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flip_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flip_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flip_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fliplr_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flipud_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flipud_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_flipud_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_float_power_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_float_power_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_float_power_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_divide_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_floor_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmax_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmin_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_fmod_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_frac_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gcd_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ge_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_gt_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_heaviside_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hsplit_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hstack_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hstack_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hstack_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hstack_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hypot_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hypot_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hypot_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hypot_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hypot_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_hypot_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_i0_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igamma_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_igammac_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_imag_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_imag_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_imag_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_imag_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_imag_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_imag_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_add_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_add_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_add_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_add_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_add_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_copy_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_fill_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_select_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_select_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_select_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_index_select_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isclose_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isclose_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isclose_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isfinite_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isinf_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isinf_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isinf_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isinf_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isnan_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isnan_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isnan_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isneginf_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isposinf_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isreal_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isreal_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isreal_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_isreal_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lcm_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_le_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lgamma_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_matrix_norm_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_norm_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_norm_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_norm_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_norm_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_norm_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svd_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svd_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svd_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svd_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svd_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svd_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svd_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svd_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svdvals_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svdvals_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svdvals_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svdvals_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svdvals_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svdvals_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_svdvals_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_svdvals_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_vector_norm_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_vector_norm_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linalg_vector_norm_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linspace_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linspace_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_linspace_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log10_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log10_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log10_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log1p_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log2_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log2_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log2_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_softmax_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_softmax_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_softmax_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_softmax_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_softmax_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_log_softmax_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_and_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_not_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_or_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logical_xor_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logspace_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logspace_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logspace_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_logsumexp_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_lt_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_masked_fill_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_maximum_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mean_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mean_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mean_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mean_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mean_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_list_of_tensors_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_meshgrid_variadic_tensors_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_minimum_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_movedim_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_movedim_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_movedim_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_movedim_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mul_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mul_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mul_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_mul_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nan_to_num_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_narrow_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_narrow_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_narrow_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_narrow_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_native_layer_norm_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_native_layer_norm_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_native_layer_norm_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_native_layer_norm_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_native_layer_norm_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_native_layer_norm_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ne_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ne_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ne_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_neg_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_neg_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_neg_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_neg_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_empty_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped "Can't check result for new_empty"
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_empty_strided_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_executor__refs_new_full_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_full_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_full_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_full_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_full_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_ones_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_new_zeros_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nextafter_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nextafter_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nextafter_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nextafter_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nextafter_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nextafter_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_celu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_celu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_celu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_celu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_celu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_celu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_dropout_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_dropout_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_dropout_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_dropout_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_dropout_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_dropout_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_elu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_elu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_elu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_elu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_elu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_elu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_gelu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_gelu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_gelu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_gelu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_gelu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_gelu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_glu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_glu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_glu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_glu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_glu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_glu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardshrink_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardshrink_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardshrink_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardshrink_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardshrink_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardshrink_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hardtanh_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_hinge_embedding_loss_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_huber_loss_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_l1_loss_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_layer_norm_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_layer_norm_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_layer_norm_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_layer_norm_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_layer_norm_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_layer_norm_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_leaky_relu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_leaky_relu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_leaky_relu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_leaky_relu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_leaky_relu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_leaky_relu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_margin_ranking_loss_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mish_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mish_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mish_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mish_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mse_loss_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mse_loss_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mse_loss_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mse_loss_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mse_loss_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_mse_loss_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pairwise_distance_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pdist_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pdist_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pdist_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_pdist_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_poisson_nll_loss_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_prelu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_prelu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_prelu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_prelu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_prelu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_prelu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu6_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_relu_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_selu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_selu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_selu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_selu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_selu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_selu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softplus_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softplus_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softplus_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softplus_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softplus_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softplus_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softshrink_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softshrink_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softshrink_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softshrink_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softshrink_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_softshrink_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_tanhshrink_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_nn_functional_threshold_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_norm_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_norm_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_norm_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_norm_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_norm_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ones_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ones_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ones_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ones_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_permute_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_permute_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_permute_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_permute_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_positive_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_positive_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_positive_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_positive_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_pow_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_pow_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_pow_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_prod_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_prod_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_prod_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_randn_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_randn_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_randn_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_randn_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_randn_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_randn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_randn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_randn_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_randn_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_randn_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_randn_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_randn_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_randn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_randn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped "make_traced() doesn't set seed properly!"
test_python_ref_executor__refs_ravel_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ravel_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ravel_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ravel_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_ravel_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_real_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_real_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_real_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_real_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reciprocal_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_remainder_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_repeat_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_repeat_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_repeat_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_as_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_reshape_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_roll_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_roll_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_roll_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_roll_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rot90_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rot90_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rot90_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_round_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsqrt_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsub_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsub_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_rsub_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sgn_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sgn_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sgn_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sgn_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sigmoid_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sign_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_signbit_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sin_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sin_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sin_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinc_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinc_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinc_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinh_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinh_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sinh_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_softmax_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_softmax_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_softmax_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_softmax_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_softmax_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_softmax_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j0_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_bessel_j1_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i0e_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_i1e_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_logit_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_1_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_3_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_multigammaln_mvlgamma_p_5_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_spherical_bessel_j0_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_special_zeta_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sqrt_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_square_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_square_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_square_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_squeeze_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_stack_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_stack_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_stack_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_stack_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_mean_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_mean_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_mean_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_std_mean_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_std_mean_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sub_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sub_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sub_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sub_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_sum_to_size_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_t_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_t_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_t_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tan_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tan_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tan_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tanh_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tanh_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tanh_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tensor_split_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_to_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_to_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_to_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trace_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_trace_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_trace_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_trace_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'diag is not supported by nvfuser'
test_python_ref_executor__refs_transpose_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_transpose_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_transpose_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_transpose_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_transpose_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tril_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tril_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_indices_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_indices_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_indices_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_tril_indices_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_triu_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_triu_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_indices_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_indices_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_indices_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_triu_indices_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_true_divide_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_trunc_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unbind_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unbind_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unbind_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unbind_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unflatten_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unfold_copy_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_unsqueeze_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_mean_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_mean_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_mean_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_var_mean_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_var_mean_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_as_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_as_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_as_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_as_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_view_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vsplit_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vstack_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vstack_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vstack_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_vstack_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_where_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_where_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_where_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_where_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_zeros_executor_aten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_zeros_executor_aten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_zeros_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_aten_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_bool (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor__refs_zeros_executor_nvfuser_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_native_batch_norm_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_native_batch_norm_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_native_batch_norm_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_native_batch_norm_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_aten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_aten_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_aten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_aten_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_nvfuser_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_nvfuser_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_nvfuser_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_executor_ops_nvprims_var_mean_executor_nvfuser_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Only runs on cuda'
test_python_ref_meta__refs_abs_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_abs_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_abs_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_abs_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_abs_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_acos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acos_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_acosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_acosh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_add_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_add_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addcdiv_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addcdiv_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_addcdiv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addcdiv_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_addr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_addr_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_addr_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_all_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_all_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_all_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_allclose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_allclose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_allclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_allclose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_allclose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amax_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_amin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_any_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_any_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_any_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_arange_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_as_strided_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_bool (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_as_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_as_strided_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_as_strided_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Errors when storage_offset is included'
test_python_ref_meta__refs_asin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_asin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_asinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_asinh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atanh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_1d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_1d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_1d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_2d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_2d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_2d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_2d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_3d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_3d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_atleast_3d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_atleast_3d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_and_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_and_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_and_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_and_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_and_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_left_shift_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_left_shift_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_left_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_left_shift_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_left_shift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_not_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_not_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_not_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_not_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_not_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_or_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_or_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_or_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_or_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_or_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_xor_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_xor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_xor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_xor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_bitwise_xor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_broadcast_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_broadcast_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_broadcast_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_broadcast_to_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_broadcast_to_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cat_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cat_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cat_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ceil_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_chunk_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_chunk_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_chunk_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_chunk_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_max_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_min_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clamp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_clone_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_clone_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_clone_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_clone_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_column_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_column_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_column_stack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_column_stack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_conj_physical_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_conj_physical_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_conj_physical_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_physical_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_conj_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_conj_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_conj_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_conj_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_constant_pad_nd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_constant_pad_nd_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_constant_pad_nd_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_contiguous_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_contiguous_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_contiguous_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_contiguous_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_copysign_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cos_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cosh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cumsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_cumsum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_diag_embed_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_diag_embed_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_diag_embed_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diag_embed_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_diagonal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_diagonal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_diagonal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_diagonal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_digamma_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_floor_rounding_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_div_no_rounding_mode_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_div_no_rounding_mode_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_no_rounding_mode_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_div_trunc_rounding_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_dsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_dsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_dsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_dstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_dstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_dstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_dstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_empty_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_empty_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_empty_like_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_like_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_empty_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_empty_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_eq_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_eq_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_eq_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eq_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_erfinv_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_exp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_exp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_expand_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_expand_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_expand_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_expand_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expand_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_expm1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_eye_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_eye_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_eye_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fft_fft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_fftshift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_hfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ifftshift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_ihfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_irfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fft_rfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_meta__refs_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_flatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_flatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_flatten_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flatten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_flip_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_flip_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flip_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_fliplr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_fliplr_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fliplr_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_flipud_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_flipud_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_flipud_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_float_power_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_float_power_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_float_power_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_divide_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_floor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmax_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_fmod_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_frac_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_frac_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_frac_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gcd_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gcd_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gcd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gcd_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gcd_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ge_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_gt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_heaviside_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_hsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_hsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_hsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_hstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_hstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_hstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hypot_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_hypot_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_i0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igamma_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igammac_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igammac_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_igammac_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_imag_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_imag_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_imag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_add_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_add_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_add_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_copy_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_copy_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_select_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_index_select_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_index_select_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isclose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isclose_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isfinite_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isfinite_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isfinite_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isfinite_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isinf_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isinf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isinf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isinf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isnan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isnan_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isnan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isneginf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isposinf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isreal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isreal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_isreal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_isreal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lcm_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lcm_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lcm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lcm_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lcm_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_le_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lgamma_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_matrix_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_matrix_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_matrix_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_matrix_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_matrix_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_svd_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_svd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_svd_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_svdvals_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_svdvals_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_svdvals_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_vector_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_vector_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_vector_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linalg_vector_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linalg_vector_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_linspace_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_linspace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_log10_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log10_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log1p_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_log2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_softmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_softmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_log_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_log_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_log_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_and_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_and_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_and_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_not_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_not_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_not_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_or_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_or_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_or_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_xor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logical_xor_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logical_xor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logspace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_logsumexp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_lt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_masked_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_masked_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_masked_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_masked_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_maximum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_list_of_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_meshgrid_variadic_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_minimum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_movedim_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_movedim_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_movedim_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_movedim_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_mul_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_mul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_mul_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_mul_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nan_to_num_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_narrow_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_narrow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_narrow_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_narrow_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_native_layer_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_native_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ne_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ne_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ne_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_neg_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_neg_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_neg_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_neg_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_empty_strided_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_empty_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_empty_strided_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_strided_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_empty_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_empty_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_full_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_full_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_full_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_full_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_ones_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_ones_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_new_zeros_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_new_zeros_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nextafter_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nextafter_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_celu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_celu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_dropout_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_dropout_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_elu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_elu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_gelu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_gelu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_glu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_glu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardtanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardtanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardtanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardtanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardtanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hardtanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hinge_embedding_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_hinge_embedding_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_huber_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_huber_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_huber_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_l1_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_l1_loss_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_nn_functional_l1_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_nn_functional_l1_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_l1_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_layer_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_leaky_relu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_leaky_relu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_margin_ranking_loss_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_mish_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_mse_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_mse_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pairwise_distance_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_pdist_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_poisson_nll_loss_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_prelu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_prelu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu6_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_relu_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_selu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_selu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_softplus_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_softplus_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_softshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_softshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_tanhshrink_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_nn_functional_threshold_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ones_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ones_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_permute_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_permute_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_permute_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_permute_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_positive_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_positive_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_positive_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_positive_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_pow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_pow_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_pow_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_prod_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_randn_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_randn_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_randn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_randn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_randn_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_randn_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ravel_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ravel_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_ravel_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_ravel_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_real_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_real_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_real_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reciprocal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reciprocal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reciprocal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_remainder_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_repeat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_repeat_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_repeat_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reshape_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reshape_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reshape_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reshape_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reshape_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_reshape_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_reshape_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_roll_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_roll_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_roll_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_roll_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_rot90_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_rot90_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rot90_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_round_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_rsqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsqrt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_rsub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_rsub_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_rsub_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sgn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sgn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sgn_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sgn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sigmoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sigmoid_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sign_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_signbit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sinc_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sinh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_softmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_softmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_bessel_j1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i0e_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_i1e_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_logit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_3_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_multigammaln_mvlgamma_p_5_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_spherical_bessel_j0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_special_zeta_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sqrt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_square_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_square_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_square_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_squeeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_squeeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_squeeze_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_squeeze_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_stack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_stack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_std_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_std_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_std_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_std_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_std_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sub_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sub_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sub_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sum_to_size_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sum_to_size_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_to_size_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_sum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_sum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_t_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_t_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_t_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tanh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tensor_split_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tensor_split_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tensor_split_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_to_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_to_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_trace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'diag is not supported by meta'
test_python_ref_meta__refs_trace_xpu_float64 (__main__.TestCommonXPU) ... skipped 'diag is not supported by meta'
test_python_ref_meta__refs_trace_xpu_int16 (__main__.TestCommonXPU) ... skipped 'diag is not supported by meta'
test_python_ref_meta__refs_trace_xpu_int32 (__main__.TestCommonXPU) ... skipped 'diag is not supported by meta'
test_python_ref_meta__refs_trace_xpu_int64 (__main__.TestCommonXPU) ... skipped 'diag is not supported by meta'
test_python_ref_meta__refs_trace_xpu_int8 (__main__.TestCommonXPU) ... skipped 'diag is not supported by meta'
test_python_ref_meta__refs_trace_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'diag is not supported by meta'
test_python_ref_meta__refs_transpose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_transpose_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_transpose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_transpose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_transpose_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_indices_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tril_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_tril_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_tril_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_indices_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_triu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_triu_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_triu_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_true_divide_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_true_divide_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_true_divide_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_trunc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unbind_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unbind_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unbind_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unbind_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unflatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unflatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unflatten_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unflatten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unfold_copy_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unfold_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unfold_copy_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unfold_copy_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unsqueeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unsqueeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_unsqueeze_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_unsqueeze_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_var_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_var_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_var_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_var_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_var_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_view_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_view_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_view_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_view_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_view_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_view_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_view_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_vsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_vsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_vsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_vstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_vstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_vstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_vstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_where_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_where_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_where_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_where_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_meta__refs_zeros_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta__refs_zeros_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta_ops_nvprims_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta_ops_nvprims_native_batch_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta_ops_nvprims_var_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta_ops_nvprims_var_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta_ops_nvprims_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_meta_ops_nvprims_var_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_ops_nvprims_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_ops_nvprims_native_batch_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_ops_nvprims_var_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_ops_nvprims_var_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_ops_nvprims_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_ops_nvprims_var_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_abs_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_abs_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_abs_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_abs_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_acos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acos_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_acosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_acosh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_add_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_add_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addcdiv_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addcdiv_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_addcdiv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addcdiv_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_addr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_addr_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_addr_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_all_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_all_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_all_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_allclose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_allclose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_allclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_allclose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_allclose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amax_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_amin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_any_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_any_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_any_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_arange_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_as_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_as_strided_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_as_strided_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_asin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_asinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_asinh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atanh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_1d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_1d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_1d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_2d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_2d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_2d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_2d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_3d_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_3d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_atleast_3d_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_atleast_3d_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_and_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_and_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_and_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_and_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_and_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_left_shift_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_left_shift_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_left_shift_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_left_shift_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_left_shift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_not_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_not_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_not_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_not_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_not_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_or_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_or_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_or_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_or_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_or_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_xor_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_xor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_xor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_xor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_bitwise_xor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_broadcast_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_broadcast_to_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_broadcast_to_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cat_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cat_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cat_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ceil_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_chunk_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_chunk_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_chunk_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_chunk_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_max_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_min_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clamp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_clone_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_clone_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_clone_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_clone_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_column_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_column_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_column_stack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_column_stack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_conj_physical_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_conj_physical_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_conj_physical_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_physical_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_conj_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_conj_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_conj_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_conj_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_constant_pad_nd_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_contiguous_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_contiguous_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_contiguous_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_contiguous_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_copysign_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cos_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cosh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cumsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_cumsum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_diag_embed_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_diag_embed_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_diag_embed_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diag_embed_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_diagonal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_diagonal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_diagonal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_diagonal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_digamma_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_floor_rounding_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_no_rounding_mode_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_div_trunc_rounding_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_dsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_dsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_dsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_dstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_dstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_dstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_dstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_empty_like_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_empty_like_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_empty_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_empty_like_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_like_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_empty_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_empty_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_eq_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_eq_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_eq_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_eq_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eq_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_erfinv_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_exp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_exp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_expand_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_expand_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_expand_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_expand_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expand_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_expm1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_eye_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_eye_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_eye_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_fftshift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_hfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_complex32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_float16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ifftshift_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_ihfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_complex128 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_irfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfft_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_bool (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_float64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_int16 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_int32 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_int64 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_int8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fft_rfftn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "case has skip key and won't run on XPU"
test_python_ref_torch_fallback__refs_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_flatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_flatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_flatten_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flatten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_flip_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_flip_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flip_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_fliplr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_fliplr_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fliplr_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_flipud_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_flipud_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_flipud_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_float_power_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_float_power_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_float_power_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Skipped!'
test_python_ref_torch_fallback__refs_floor_divide_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_divide_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_floor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmax_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_fmod_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_frac_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_frac_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_frac_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gcd_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gcd_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gcd_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gcd_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gcd_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ge_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_gt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_heaviside_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_hsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_hsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_hsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_hstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_hstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_hstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hypot_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_hypot_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_i0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igamma_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igammac_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igammac_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_igammac_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_imag_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_imag_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_imag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_add_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_add_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_add_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_add_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_copy_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_copy_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_select_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_index_select_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_index_select_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isclose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isclose_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isfinite_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isfinite_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isfinite_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isfinite_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isinf_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isinf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isinf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isinf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isnan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isnan_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isnan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isneginf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isposinf_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isreal_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isreal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_isreal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_isreal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lcm_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lcm_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lcm_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lcm_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lcm_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_le_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lgamma_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_matrix_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_matrix_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_matrix_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_matrix_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_matrix_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_svd_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_svd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_svd_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_svdvals_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_svdvals_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_svdvals_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_vector_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_vector_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_vector_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linalg_vector_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linalg_vector_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_linspace_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_linspace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_log10_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log10_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log1p_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_log2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log2_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_softmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_softmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_log_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_log_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_log_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_and_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_and_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_and_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_not_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_not_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_not_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_or_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_or_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_or_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_xor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logical_xor_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logical_xor_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logspace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_logsumexp_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_lt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_masked_fill_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_masked_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_masked_fill_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_masked_fill_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_maximum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_list_of_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_meshgrid_variadic_tensors_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_minimum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_movedim_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_movedim_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_movedim_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_movedim_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_mul_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_mul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_mul_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_mul_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nan_to_num_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_narrow_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_narrow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_narrow_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_narrow_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_native_layer_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_native_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ne_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ne_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ne_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_neg_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_neg_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_neg_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_neg_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_strided_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty_strided is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_bool (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_empty_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_empty_xpu_float16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_int16 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_int32 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_int64 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_int8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_empty_xpu_uint8 (__main__.TestCommonXPU) ... skipped 'Expected: empty is not comparable'
test_python_ref_torch_fallback__refs_new_full_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_full_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_full_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_full_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_full_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_ones_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_ones_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_new_zeros_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_new_zeros_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nextafter_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nextafter_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_celu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_celu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_dropout_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped 'Expected: dropout is not comparable'
test_python_ref_torch_fallback__refs_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped 'Expected: dropout is not comparable'
test_python_ref_torch_fallback__refs_nn_functional_dropout_xpu_float64 (__main__.TestCommonXPU) ... skipped 'Expected: dropout is not comparable'
test_python_ref_torch_fallback__refs_nn_functional_elu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_elu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_gelu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_gelu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_glu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_glu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardtanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardtanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardtanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardtanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardtanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hardtanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hinge_embedding_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_hinge_embedding_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_huber_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_huber_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_huber_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_l1_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_l1_loss_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_nn_functional_l1_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_nn_functional_l1_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_l1_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_layer_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_layer_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_leaky_relu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_leaky_relu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_margin_ranking_loss_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_mish_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_mse_loss_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_mse_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pairwise_distance_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_pdist_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_poisson_nll_loss_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_prelu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_prelu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu6_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_relu_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_selu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_selu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_softplus_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_softplus_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_softshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_softshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_tanhshrink_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_nn_functional_threshold_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_norm_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_norm_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_norm_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ones_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ones_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ones_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_permute_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_permute_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_permute_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_permute_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_positive_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_positive_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_positive_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_positive_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_pow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_pow_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_pow_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_prod_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_randn_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_randn_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_randn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_randn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_randn_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_randn_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ravel_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ravel_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_ravel_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_ravel_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_real_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_real_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_real_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reciprocal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reciprocal_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reciprocal_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_remainder_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_repeat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_repeat_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_repeat_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reshape_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reshape_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reshape_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reshape_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reshape_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_reshape_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_reshape_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_roll_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_roll_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_roll_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_roll_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_rot90_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_rot90_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rot90_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_round_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_rsqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsqrt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_rsub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_rsub_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_rsub_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sgn_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sgn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sgn_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sgn_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sigmoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sigmoid_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sign_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_signbit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sin_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sinc_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sinh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_softmax_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_softmax_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_bessel_j1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i0e_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_i1e_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_logit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_1_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_3_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_multigammaln_mvlgamma_p_5_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_spherical_bessel_j0_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_special_zeta_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sqrt_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_square_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_square_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_square_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_squeeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_squeeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_squeeze_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_squeeze_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_stack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_stack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_stack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_std_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_std_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_std_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_std_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_std_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sub_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sub_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sub_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sum_to_size_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sum_to_size_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_to_size_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_sum_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_sum_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_t_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_t_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_t_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tan_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tanh_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tensor_split_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tensor_split_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tensor_split_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_to_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_to_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trace_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_trace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trace_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trace_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trace_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trace_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trace_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trace_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_transpose_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_transpose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_transpose_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_transpose_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_indices_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tril_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_tril_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_tril_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_indices_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_indices_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_triu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_triu_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_triu_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_true_divide_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_true_divide_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_true_divide_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_trunc_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unbind_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unbind_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unbind_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unbind_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unflatten_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unflatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unflatten_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unflatten_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unfold_copy_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unfold_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unfold_copy_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unfold_copy_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unsqueeze_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unsqueeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_unsqueeze_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_unsqueeze_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_mean_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_var_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_var_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_var_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_var_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_var_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_view_as_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_view_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_view_as_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_as_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_view_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_view_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_view_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_view_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_vsplit_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_vsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_vsplit_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vsplit_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_vstack_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_vstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_vstack_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_vstack_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_where_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_where_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_where_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_where_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_bool (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_complex128 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_zeros_xpu_complex32 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'dtype not support on XPU'
test_python_ref_torch_fallback__refs_zeros_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_int16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_int32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_int64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_int8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback__refs_zeros_xpu_uint8 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback_ops_nvprims_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback_ops_nvprims_native_batch_norm_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback_ops_nvprims_var_mean_xpu_bfloat16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback_ops_nvprims_var_mean_xpu_float16 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback_ops_nvprims_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_python_ref_torch_fallback_ops_nvprims_var_mean_xpu_float64 (__main__.TestCommonXPU) ... skipped "onlyNativeDeviceTypes: doesn't run on xpu"
test_variant_consistency_eager_H_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_H_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_T_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_T_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___getitem___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___getitem___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___radd___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___radd___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rdiv___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rdiv___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rmatmul___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rmatmul___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rmod___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rmul___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rmul___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rpow___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rpow___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rsub___xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager___rsub___xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_abs_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_abs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_acos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_acos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_acosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_acosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addbmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addcdiv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addcdiv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addcmul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addcmul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addmm_decomposed_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addmm_decomposed_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addmv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addmv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_addr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_all_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_all_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_allclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_allclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_aminmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_angle_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_angle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_any_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_any_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_arange_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_argsort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_argwhere_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_argwhere_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_as_strided_scatter_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_as_strided_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_as_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_as_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_asin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_asin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_asinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_asinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atan2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atleast_1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atleast_1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atleast_2d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atleast_2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atleast_3d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_atleast_3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_baddbmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_baddbmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bernoulli_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bfloat16_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bfloat16_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_block_diag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_block_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bool_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bool_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_broadcast_shapes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_broadcast_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_broadcast_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_broadcast_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_broadcast_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_bucketize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_byte_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_byte_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cartesian_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cartesian_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cdist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ceil_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_chalf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_chalf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_char_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_char_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cholesky_inverse_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cholesky_inverse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cholesky_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cholesky_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cholesky_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_chunk_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_chunk_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_clamp_max_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_clamp_min_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_clamp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_clone_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_clone_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_column_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_column_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_combinations_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_combinations_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_conj_physical_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_conj_physical_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_conj_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_constant_pad_nd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_constant_pad_nd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_contiguous_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_contiguous_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_copysign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_corrcoef_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_corrcoef_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cos_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cos_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cosh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cosh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_count_nonzero_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_count_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cov_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cov_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cross_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cummax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cummin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cumprod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cumsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cumulative_trapezoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_cumulative_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_deg2rad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diag_embed_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diag_embed_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diagflat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diagflat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diagonal_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diagonal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diagonal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diff_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_diff_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_digamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dist_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_div_floor_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_div_no_rounding_mode_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_div_no_rounding_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_div_trunc_rounding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_double_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_double_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_dstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_einsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_einsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_empty_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_empty_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_eq_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_eq_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_equal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_equal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_erf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_erfc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_erfinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_exp2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_exp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_expand_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_expand_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_expand_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_expand_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_expm1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_eye_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_eye_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_fftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_hfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_hfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_hfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_hfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_hfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_hfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifftshift_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ifftshift_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ihfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ihfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_ihfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_irfft2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_irfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_irfft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_irfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_irfftn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_irfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_rfft2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_rfft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fft_rfftn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_flatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_flatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_flip_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_flip_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fliplr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fliplr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_flipud_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_flipud_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_float_power_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_float_power_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_float_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_float_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_floor_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_floor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_fmod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_frac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_frexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_full_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_full_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_gather_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_gather_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ge_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_geqrf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_geqrf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_gradient_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_gradient_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_gt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_half_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_half_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_heaviside_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_histc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_histogram_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_histogramdd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_hsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_hsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_hstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_hstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_hypot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_igamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_igammac_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_imag_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_put_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_put_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_reduce_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_index_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_inner_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_inner_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_int_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_int_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isclose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isclose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isfinite_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isfinite_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isinf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isnan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isnan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isneginf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isposinf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isreal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_isreal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_istft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_istft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_2inputs_2outputs_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_2inputs_2outputs_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_4inputs_with_extra_args_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_4inputs_with_extra_args_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_binary_return_by_ref_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_binary_return_by_ref_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_binary_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_unary_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_jiterator_unary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_kron_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_kron_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_kthvalue_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ldexp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ldexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_le_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lerp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lerp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lgamma_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cholesky_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cholesky_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cholesky_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cholesky_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cond_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cond_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cross_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_cross_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_det_singular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_det_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_det_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_det_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eig_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eig_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eigh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eigh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eigvals_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eigvals_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eigvalsh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_eigvalsh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_householder_product_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_householder_product_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_inv_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_inv_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_inv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_inv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_ldl_factor_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_ldl_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_ldl_factor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_ldl_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_ldl_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_ldl_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lstsq_grad_oriented_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lstsq_grad_oriented_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lstsq_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lstsq_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_factor_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_factor_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_factor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_factor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_power_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_power_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_rank_hermitian_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_rank_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_rank_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_matrix_rank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_multi_dot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_multi_dot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_norm_subgradients_at_zero_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_norm_subgradients_at_zero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_pinv_hermitian_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_pinv_hermitian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_pinv_singular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_pinv_singular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_pinv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_pinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_qr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_slogdet_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_slogdet_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_solve_ex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_solve_ex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_solve_triangular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_solve_triangular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_svd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_svdvals_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_svdvals_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_tensorinv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_tensorinv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_tensorsolve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_tensorsolve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_vander_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_vander_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_vecdot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_vecdot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_vector_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linalg_vector_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_linspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log10_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log10_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log1p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log2_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log_softmax_dtype_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log_softmax_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_log_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logaddexp2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logcumsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logdet_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logdet_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_and_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_and_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_not_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_not_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_or_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_or_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_xor_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logical_xor_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logspace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logspace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_long_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_long_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lu_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lu_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lu_unpack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lu_unpack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_lu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mH_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mH_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mT_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mT_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_argmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_argmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_cumprod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_cumprod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_cumsum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_cumsum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_fill_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_fill_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_log_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_logaddexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_logsumexp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_median_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_normalize_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_scatter_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_std_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_std_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_sum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_var_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_masked_var_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_matmul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_matmul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_matrix_exp_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_matrix_exp_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_max_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_max_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_max_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_maximum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_median_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_meshgrid_list_of_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_meshgrid_list_of_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_meshgrid_variadic_tensors_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_meshgrid_variadic_tensors_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_min_binary_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_min_reduction_no_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_min_reduction_with_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_minimum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mode_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_movedim_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_movedim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_msort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mul_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mul_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_multinomial_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mv_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mv_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mvlgamma_mvlgamma_p_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mvlgamma_mvlgamma_p_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_mvlgamma_mvlgamma_p_5_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nan_to_num_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nanmean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nanmedian_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nanquantile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nansum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_narrow_copy_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_narrow_copy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_narrow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_narrow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_native_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_native_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ne_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ne_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_neg_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_empty_strided_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_empty_strided_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_empty_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_empty_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_full_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_full_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_new_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nextafter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional__scaled_dot_product_attention_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_adaptive_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_adaptive_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_adaptive_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_adaptive_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_adaptive_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_adaptive_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_avg_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_avg_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_avg_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_batch_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_binary_cross_entropy_with_logits_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_binary_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_celu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv2d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv_transpose1d_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv_transpose1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv_transpose2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_conv_transpose3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_cosine_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_cosine_similarity_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_cross_entropy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_ctc_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_dropout2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_dropout3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_dropout_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_elu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_embedding_bag_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_embedding_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_feature_alpha_dropout_with_train_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_feature_alpha_dropout_without_train_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_feature_alpha_dropout_without_train_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_fractional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_fractional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_gaussian_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_gelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_glu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_grid_sample_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_group_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_hardshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_hardsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_hardswish_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_hardtanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_hinge_embedding_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_huber_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_instance_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_interpolate_area_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_interpolate_bicubic_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_interpolate_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_interpolate_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_interpolate_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_interpolate_trilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_kl_div_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_l1_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_layer_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_leaky_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_linear_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_linear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_local_response_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_logsigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_margin_ranking_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_pool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_pool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_pool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_unpool1d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_unpool1d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_unpool2d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_unpool2d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_unpool3d_grad_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_max_unpool3d_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_mish_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_mse_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_multi_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_multilabel_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_multilabel_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_normalize_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_normalize_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_circular_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_circular_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_constant_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_constant_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_reflect_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_reflect_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_replicate_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pad_replicate_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pairwise_distance_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pairwise_distance_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pdist_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pixel_shuffle_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pixel_shuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pixel_unshuffle_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_pixel_unshuffle_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_poisson_nll_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_prelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_relu6_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_relu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_rrelu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_selu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_silu_complex_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_silu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_smooth_l1_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_soft_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_softmin_with_dtype_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_softmin_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_softmin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_softplus_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_softshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_softsign_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_softsign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_tanhshrink_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_tanhshrink_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_threshold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_triplet_margin_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_triplet_margin_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_triplet_margin_with_distance_loss_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_triplet_margin_with_distance_loss_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_unfold_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_upsample_bilinear_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nn_functional_upsample_nearest_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nonzero_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_nonzero_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_fro_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_fro_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_inf_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_inf_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_nuc_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_nuc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_norm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_normal_number_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_normal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ones_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ones_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ones_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ones_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ormqr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ormqr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_outer_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_outer_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_pca_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_permute_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_permute_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_pinverse_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_pinverse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_polar_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_polygamma_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_polygamma_polygamma_n_1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_polygamma_polygamma_n_2_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_polygamma_polygamma_n_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_polygamma_polygamma_n_4_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_positive_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_positive_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_pow_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_pow_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_prod_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_put_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_put_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_qr_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_qr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_quantile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rad2deg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rand_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rand_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_randint_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_randn_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_randn_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_randn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_randn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ravel_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_ravel_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_real_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_reciprocal_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_reciprocal_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_remainder_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_renorm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_renorm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_repeat_interleave_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_repeat_interleave_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_repeat_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_repeat_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_reshape_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_reshape_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_reshape_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_reshape_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resize__xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resize__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resize_as__xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resize_as__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resolve_conj_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resolve_conj_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resolve_neg_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_resolve_neg_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_roll_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_roll_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rot90_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rot90_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_round_decimals_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_round_decimals_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_round_decimals_neg_3_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_round_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rsqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rsqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rsub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_rsub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_add_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_add_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_reduce_amax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_reduce_amin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_reduce_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_reduce_prod_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_reduce_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_searchsorted_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_segment_reduce_lengths_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_segment_reduce_offsets_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_select_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_select_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_select_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sgn_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sgn_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_short_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_short_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sigmoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sigmoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sign_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_signbit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sin_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sin_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sinc_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sinc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sinh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sinh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_slice_scatter_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_slice_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_slice_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_softmax_with_dtype_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_softmax_with_dtype_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_softmax_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sort_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sparse_sampled_addmm_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sparse_sampled_addmm_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_airy_ai_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_bessel_j1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_bessel_y0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_bessel_y1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_entr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_erfcx_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_hermite_polynomial_h_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_hermite_polynomial_he_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_i0e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_i1e_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_laguerre_polynomial_l_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_legendre_polynomial_p_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_log_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_modified_bessel_i0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_modified_bessel_i1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_ndtr_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_ndtri_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_polygamma_special_polygamma_n_0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_scaled_modified_bessel_k0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_scaled_modified_bessel_k1_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_shifted_chebyshev_polynomial_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_shifted_chebyshev_polynomial_u_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_shifted_chebyshev_polynomial_v_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_shifted_chebyshev_polynomial_w_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_spherical_bessel_j0_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_xlog1py_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_special_zeta_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_split_list_args_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_split_list_args_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_split_with_sizes_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_split_with_sizes_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_split_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_split_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sqrt_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sqrt_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_square_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_square_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_squeeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_squeeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_stack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_stack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_std_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_std_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_std_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_std_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_stft_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_stft_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sub_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sub_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sum_to_size_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sum_to_size_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sum_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_sum_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_svd_lowrank_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_svd_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_svd_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_symeig_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_symeig_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_t_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_t_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_take_along_dim_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_take_along_dim_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_take_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_take_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tan_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tan_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tanh_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tanh_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tensor_split_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tensor_split_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tensordot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tensordot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tile_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tile_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_to_sparse_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_to_sparse_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_to_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_to_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_topk_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_trace_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_trace_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_transpose_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_transpose_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_trapezoid_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_trapezoid_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_trapz_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_trapz_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_triangular_solve_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_triangular_solve_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tril_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_tril_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_triu_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_triu_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_true_divide_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_true_divide_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_trunc_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unbind_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unbind_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unflatten_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unflatten_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unfold_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unfold_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_uniform_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_uniform_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unique_consecutive_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unique_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unsqueeze_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_unsqueeze_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_var_mean_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_var_mean_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_var_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_var_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_vdot_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_vdot_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_view_as_complex_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_view_as_real_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_view_as_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_view_as_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_view_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_view_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_vsplit_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_vsplit_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_vstack_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_vstack_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_where_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_where_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_xlogy_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_zero__xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_zero__xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_zeros_like_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_zeros_like_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_zeros_xpu_complex64 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'
test_variant_consistency_eager_zeros_xpu_float32 (__main__.TestCommonXPU) ... skipped 'not ready on XPU'

======================================================================
ERROR: test_non_standard_bool_values_chalf_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 435, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 547, in test_non_standard_bool_values
    expect = op(sample.input, *sample.args, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 1068, in __call__
    return self.op(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_methods_invocations.py", line 14122, in <lambda>
    op=lambda x, *args, **kwargs: x.chalf(*args, **kwargs),
RuntimeError: "copy_" not implemented for 'ComplexHalf'

======================================================================
ERROR: test_non_standard_bool_values_clamp_max_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 435, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 547, in test_non_standard_bool_values
    expect = op(sample.input, *sample.args, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 1068, in __call__
    return self.op(*args, **kwargs)
RuntimeError: "clamp_max_dpcpp" not implemented for 'Bool'

======================================================================
ERROR: test_non_standard_bool_values_clamp_min_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 435, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 547, in test_non_standard_bool_values
    expect = op(sample.input, *sample.args, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 1068, in __call__
    return self.op(*args, **kwargs)
RuntimeError: "clamp_min_dpcpp" not implemented for 'Bool'

======================================================================
ERROR: test_non_standard_bool_values_lgamma_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 435, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 547, in test_non_standard_bool_values
    expect = op(sample.input, *sample.args, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 1068, in __call__
    return self.op(*args, **kwargs)
RuntimeError: result type Float can't be cast to the desired output type Bool

======================================================================
ERROR: test_non_standard_bool_values_masked_mean_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 435, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 547, in test_non_standard_bool_values
    expect = op(sample.input, *sample.args, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 1068, in __call__
    return self.op(*args, **kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/masked/_ops.py", line 1389, in mean
    total = sum(input, dim, keepdim=keepdim, dtype=dtype)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/masked/_ops.py", line 1071, in sum
    return torch.sum(mask_input, dim_, bool(keepdim), dtype=dtype)
RuntimeError: "sum" not implemented for 'Bool'

======================================================================
ERROR: test_non_standard_bool_values_mode_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 435, in instantiated_test
    raise rte
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 547, in test_non_standard_bool_values
    expect = op(sample.input, *sample.args, **sample.kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 1068, in __call__
    return self.op(*args, **kwargs)
RuntimeError: "mode" not implemented for 'Bool'

======================================================================
FAIL: test_non_standard_bool_values_H_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 26 (up to 0.001 allowed)
Relative difference: 26.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_T_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 60 (up to 0.001 allowed)
Relative difference: 60.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values___getitem___xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 63 / 125 (50.4%)
Greatest absolute difference: 252 at index (1, 1, 1) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (1, 1, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values___radd___xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 71 (up to 0.001 allowed)
Relative difference: 71.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values___rand___xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 19 (up to 0.001 allowed)
Relative difference: 19.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values___rdiv___xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 213 (up to 0.001 allowed)
Relative difference: 213.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values___rmul___xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 185 (up to 0.001 allowed)
Relative difference: 185.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values___ror___xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 5 (80.0%)
Greatest absolute difference: 223 at index (4,) (up to 0.001 allowed)
Greatest relative difference: 223.0 at index (4,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values___rxor___xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 211 (up to 0.001 allowed)
Relative difference: 211.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_acos_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 5 / 20 (25.0%)
Greatest absolute difference: 200 at index (6,) (up to 0.001 allowed)
Greatest relative difference: 200.0 at index (6,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_acosh_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 11 / 20 (55.0%)
Greatest absolute difference: 247 at index (8,) (up to 0.001 allowed)
Greatest relative difference: 247.0 at index (8,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_add_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 95 (up to 0.001 allowed)
Relative difference: 95.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_addr_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 31 / 50 (62.0%)
Greatest absolute difference: 243 at index (1, 3) (up to 0.001 allowed)
Greatest relative difference: 243.0 at index (1, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_all_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 2 (100.0%)
Greatest absolute difference: 151 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 151.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_amax_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 2 (50.0%)
Greatest absolute difference: 53 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 53.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_amin_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 125 (up to 0.001 allowed)
Relative difference: 125.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_angle_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 194 / 400 (48.5%)
Greatest absolute difference: 253 at index (14, 12) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (14, 12) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_any_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 31 (up to 0.001 allowed)
Relative difference: 31.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_argsort_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 7999 / 8000 (100.0%)
Greatest absolute difference: 253 at index (160,) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (160,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_argwhere_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 4 (50.0%)
Greatest absolute difference: 73 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 73.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_as_strided_scatter_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 179 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 179.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_as_strided_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 70 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 70.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_asin_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 187 / 400 (46.8%)
Greatest absolute difference: 253 at index (4, 4) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (4, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_asinh_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 191 / 400 (47.8%)
Greatest absolute difference: 252 at index (3, 6) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (3, 6) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_atan2_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 101 (up to 0.001 allowed)
Relative difference: 101.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_atan_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 188 / 400 (47.0%)
Greatest absolute difference: 253 at index (19, 7) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (19, 7) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_atanh_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 171 / 400 (42.8%)
Greatest absolute difference: 253 at index (4, 7) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (4, 7) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_atleast_1d_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 299 / 625 (47.8%)
Greatest absolute difference: 253 at index (1, 3, 3, 2) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (1, 3, 3, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_atleast_2d_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 291 / 625 (46.6%)
Greatest absolute difference: 253 at index (0, 1, 3, 4) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0, 1, 3, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_atleast_3d_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 295 / 625 (47.2%)
Greatest absolute difference: 253 at index (2, 0, 1, 3) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (2, 0, 1, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_bfloat16_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 40 (up to 0.001 allowed)
Relative difference: 40.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_bitwise_and_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 15 (up to 0.001 allowed)
Relative difference: 15.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_bitwise_not_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 12 / 20 (60.0%)
Greatest absolute difference: 250 at index (15,) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (15,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_bitwise_or_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 159 (up to 0.001 allowed)
Relative difference: 159.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_bitwise_xor_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 46 (up to 0.001 allowed)
Relative difference: 46.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_block_diag_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 5 (40.0%)
Greatest absolute difference: 231 at index (0, 0) (up to 0.001 allowed)
Greatest relative difference: 231.0 at index (0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_bool_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 61 (up to 0.001 allowed)
Relative difference: 61.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_broadcast_tensors_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 2 (50.0%)
Greatest absolute difference: 73 at index (0, 1, 0) (up to 0.001 allowed)
Greatest relative difference: 73.0 at index (0, 1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_broadcast_to_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 5 (20.0%)
Greatest absolute difference: 231 at index (1, 0, 0) (up to 0.001 allowed)
Greatest relative difference: 231.0 at index (1, 0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_byte_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 76 (up to 0.001 allowed)
Relative difference: 76.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_cartesian_prod_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 2 (50.0%)
Greatest absolute difference: 201 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 201.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_cat_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 249, in tt
    return list(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 14 / 25 (56.0%)
Greatest absolute difference: 233 at index (2, 0) (up to 0.001 allowed)
Greatest relative difference: 233.0 at index (2, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_char_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 80 (up to 0.001 allowed)
Relative difference: 80.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_chunk_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 61 / 125 (48.8%)
Greatest absolute difference: 252 at index (2, 2, 2) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (2, 2, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_clone_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 129 / 250 (51.6%)
Greatest absolute difference: 251 at index (0, 0, 3) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (0, 0, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_column_stack_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 249, in tt
    return list(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 10 (40.0%)
Greatest absolute difference: 239 at index (3, 0, 0) (up to 0.001 allowed)
Greatest relative difference: 239.0 at index (3, 0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_combinations_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 2 (50.0%)
Greatest absolute difference: 199 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 199.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_conj_physical_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 208 / 400 (52.0%)
Greatest absolute difference: 253 at index (15, 7) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (15, 7) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_conj_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 20 (50.0%)
Greatest absolute difference: 218 at index (15,) (up to 0.001 allowed)
Greatest relative difference: 218.0 at index (15,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_constant_pad_nd_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 9 (44.4%)
Greatest absolute difference: 208 at index (0, 1, 1) (up to 0.001 allowed)
Greatest relative difference: 208.0 at index (0, 1, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_contiguous_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 132 / 250 (52.8%)
Greatest absolute difference: 253 at index (0, 7, 2) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0, 7, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_copysign_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 25 (up to 0.001 allowed)
Relative difference: 25.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_cos_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 20 (45.0%)
Greatest absolute difference: 236 at index (13,) (up to 0.001 allowed)
Greatest relative difference: 236.0 at index (13,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_cosh_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 11 / 20 (55.0%)
Greatest absolute difference: 179 at index (9,) (up to 0.001 allowed)
Greatest relative difference: 179.0 at index (9,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_count_nonzero_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 2 (100.0%)
Greatest absolute difference: 212 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 212.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_deg2rad_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 20 (50.0%)
Greatest absolute difference: 237 at index (7,) (up to 0.001 allowed)
Greatest relative difference: 237.0 at index (7,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_diag_embed_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 14 / 25 (56.0%)
Greatest absolute difference: 250 at index (4, 4) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (4, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_diag_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 56 / 100 (56.0%)
Greatest absolute difference: 253 at index (4, 5) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (4, 5) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_diagflat_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 2 (50.0%)
Greatest absolute difference: 253 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_diagonal_scatter_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 49 / 100 (49.0%)
Greatest absolute difference: 251 at index (8, 9) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (8, 9) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_diagonal_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 14 / 25 (56.0%)
Greatest absolute difference: 230 at index (3, 1) (up to 0.001 allowed)
Greatest relative difference: 230.0 at index (3, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_diff_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 149 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 149.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_digamma_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 15 / 20 (75.0%)
Greatest absolute difference: 246 at index (8,) (up to 0.001 allowed)
Greatest relative difference: 246.0 at index (8,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_div_no_rounding_mode_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 113 (up to 0.001 allowed)
Relative difference: 113.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_double_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 6 (66.7%)
Greatest absolute difference: 207 at index (0, 0) (up to 0.001 allowed)
Greatest relative difference: 207.0 at index (0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_dsplit_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 54 / 125 (43.2%)
Greatest absolute difference: 252 at index (2, 2, 2) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (2, 2, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_dstack_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 5 (80.0%)
Greatest absolute difference: 193 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 193.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_eq_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 48 (up to 0.001 allowed)
Relative difference: 48.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_equal_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 189 (up to 0.001 allowed)
Relative difference: 189.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_erf_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 204 / 400 (51.0%)
Greatest absolute difference: 253 at index (16, 9) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (16, 9) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_erfc_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 20 (45.0%)
Greatest absolute difference: 227 at index (15,) (up to 0.001 allowed)
Greatest relative difference: 227.0 at index (15,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_erfinv_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 211 / 400 (52.8%)
Greatest absolute difference: 253 at index (0, 7) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0, 7) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_exp2_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 14 / 20 (70.0%)
Greatest absolute difference: 226 at index (13,) (up to 0.001 allowed)
Greatest relative difference: 226.0 at index (13,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_exp_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 20 (45.0%)
Greatest absolute difference: 202 at index (13,) (up to 0.001 allowed)
Greatest relative difference: 202.0 at index (13,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_expand_as_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 5 (60.0%)
Greatest absolute difference: 229 at index (0, 0, 0) (up to 0.001 allowed)
Greatest relative difference: 229.0 at index (0, 0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_expand_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 5 (40.0%)
Greatest absolute difference: 192 at index (0, 0, 0) (up to 0.001 allowed)
Greatest relative difference: 192.0 at index (0, 0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_expm1_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 203 / 400 (50.7%)
Greatest absolute difference: 248 at index (7, 12) (up to 0.001 allowed)
Greatest relative difference: 248.0 at index (7, 12) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_fill_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 11 / 20 (55.0%)
Greatest absolute difference: 185 at index (10,) (up to 0.001 allowed)
Greatest relative difference: 185.0 at index (10,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_flatten_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 61 / 125 (48.8%)
Greatest absolute difference: 247 at index (0, 2, 1) (up to 0.001 allowed)
Greatest relative difference: 247.0 at index (0, 2, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_flip_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 125 / 250 (50.0%)
Greatest absolute difference: 253 at index (0, 8, 0) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0, 8, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_fliplr_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 130 / 250 (52.0%)
Greatest absolute difference: 250 at index (2, 1, 2) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (2, 1, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_flipud_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 123 / 250 (49.2%)
Greatest absolute difference: 252 at index (1, 1, 0) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (1, 1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_float_power_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 244 (up to 0.001 allowed)
Relative difference: 244.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_float_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 6 (16.7%)
Greatest absolute difference: 88 at index (0, 0) (up to 0.001 allowed)
Greatest relative difference: 88.0 at index (0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_fmax_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 185 (up to 0.001 allowed)
Relative difference: 185.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_fmin_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 168 (up to 0.001 allowed)
Relative difference: 168.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_full_like_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 95 (up to 0.001 allowed)
Relative difference: 95.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_gather_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 19 / 50 (38.0%)
Greatest absolute difference: 233 at index (3, 3) (up to 0.001 allowed)
Greatest relative difference: 233.0 at index (3, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_ge_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 227 (up to 0.001 allowed)
Relative difference: 227.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_gt_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 99 (up to 0.001 allowed)
Relative difference: 99.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_half_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 114 (up to 0.001 allowed)
Relative difference: 114.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_heaviside_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 20 (up to 0.001 allowed)
Relative difference: 20.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_hsplit_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 6 (16.7%)
Greatest absolute difference: 147 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 147.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_hstack_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 5 (40.0%)
Greatest absolute difference: 200 at index (3,) (up to 0.001 allowed)
Greatest relative difference: 200.0 at index (3,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_i0_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 5 (80.0%)
Greatest absolute difference: 205 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 205.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_index_add_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 67 (up to 0.001 allowed)
Relative difference: 67.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_index_copy_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 137 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 137.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_index_fill_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 15 / 25 (60.0%)
Greatest absolute difference: 248 at index (3, 4) (up to 0.001 allowed)
Greatest relative difference: 248.0 at index (3, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_index_put_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 6 / 25 (24.0%)
Greatest absolute difference: 165 at index (2, 2) (up to 0.001 allowed)
Greatest relative difference: 165.0 at index (2, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_index_select_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 1 (100.0%)
Greatest absolute difference: 70 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 70.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_int_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 248 (up to 0.001 allowed)
Relative difference: 248.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_isclose_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 155 (up to 0.001 allowed)
Relative difference: 155.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_isfinite_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 7 / 20 (35.0%)
Greatest absolute difference: 138 at index (17,) (up to 0.001 allowed)
Greatest relative difference: 138.0 at index (17,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_isinf_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 216 / 400 (54.0%)
Greatest absolute difference: 250 at index (4, 5) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (4, 5) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_isnan_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 187 / 400 (46.8%)
Greatest absolute difference: 253 at index (10, 10) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (10, 10) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_isneginf_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 177 / 400 (44.2%)
Greatest absolute difference: 253 at index (1, 5) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (1, 5) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_isposinf_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 198 / 400 (49.5%)
Greatest absolute difference: 253 at index (10, 9) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (10, 9) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_isreal_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 20 (50.0%)
Greatest absolute difference: 222 at index (5,) (up to 0.001 allowed)
Greatest relative difference: 222.0 at index (5,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_kron_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 17 / 25 (68.0%)
Greatest absolute difference: 247 at index (3, 3) (up to 0.001 allowed)
Greatest relative difference: 247.0 at index (3, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_ldexp_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 182 (up to 0.001 allowed)
Relative difference: 182.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_le_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 94 (up to 0.001 allowed)
Relative difference: 94.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_log10_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 7 / 20 (35.0%)
Greatest absolute difference: 230 at index (5,) (up to 0.001 allowed)
Greatest relative difference: 230.0 at index (5,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_log1p_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 197 / 400 (49.2%)
Greatest absolute difference: 251 at index (10, 14) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (10, 14) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_log2_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 8 / 20 (40.0%)
Greatest absolute difference: 203 at index (16,) (up to 0.001 allowed)
Greatest relative difference: 203.0 at index (16,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_log_softmax_dtype_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 5 (40.0%)
Greatest absolute difference: 92 at index (4,) (up to 0.001 allowed)
Greatest relative difference: 92.0 at index (4,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_log_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 20 (45.0%)
Greatest absolute difference: 235 at index (17,) (up to 0.001 allowed)
Greatest relative difference: 235.0 at index (17,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_logical_and_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 5 (60.0%)
Greatest absolute difference: 243 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 243.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_logical_not_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 20 (50.0%)
Greatest absolute difference: 251 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_logical_or_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 170 (up to 0.001 allowed)
Relative difference: 170.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_logical_xor_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 5 (20.0%)
Greatest absolute difference: 110 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 110.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_logit_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 66 / 125 (52.8%)
Greatest absolute difference: 251 at index (0, 2, 4) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (0, 2, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_logsumexp_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 103 (up to 0.001 allowed)
Relative difference: 103.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_long_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 184 (up to 0.001 allowed)
Relative difference: 184.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_lt_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 132 (up to 0.001 allowed)
Relative difference: 132.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_mH_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 6 (66.7%)
Greatest absolute difference: 252 at index (0, 1, 1) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (0, 1, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_mT_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 160 at index (0, 1, 1) (up to 0.001 allowed)
Greatest relative difference: 160.0 at index (0, 1, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_masked_fill_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 11 / 25 (44.0%)
Greatest absolute difference: 239 at index (3, 3) (up to 0.001 allowed)
Greatest relative difference: 239.0 at index (3, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_masked_prod_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 13 (up to 0.001 allowed)
Relative difference: 13.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_masked_scatter_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 14 / 25 (56.0%)
Greatest absolute difference: 247 at index (0, 4) (up to 0.001 allowed)
Greatest relative difference: 247.0 at index (0, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_masked_select_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 49 / 100 (49.0%)
Greatest absolute difference: 252 at index (5, 2) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (5, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_masked_sum_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 260, in transform
    tt(self.kwargs),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 253, in tt
    return {k: tt(v) for k, v in t.items()}
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 253, in <dictcomp>
    return {k: tt(v) for k, v in t.items()}
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 75 (up to 0.001 allowed)
Relative difference: 75.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_max_binary_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 4 (up to 0.001 allowed)
Relative difference: 4.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_max_reduction_no_dim_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 58 / 125 (46.4%)
Greatest absolute difference: 253 at index (3, 3, 1) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (3, 3, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_max_reduction_with_dim_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 73 / 125 (58.4%)
Greatest absolute difference: 253 at index (0, 1, 0) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0, 1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_maximum_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 221 (up to 0.001 allowed)
Relative difference: 221.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_meshgrid_list_of_tensors_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 249, in tt
    return list(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 3 (66.7%)
Greatest absolute difference: 244 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 244.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_meshgrid_variadic_tensors_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 102 (up to 0.001 allowed)
Relative difference: 102.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_min_binary_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 5 (80.0%)
Greatest absolute difference: 189 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 189.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_min_reduction_no_dim_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 64 / 125 (51.2%)
Greatest absolute difference: 252 at index (4, 0, 2) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (4, 0, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_min_reduction_with_dim_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 63 / 125 (50.4%)
Greatest absolute difference: 253 at index (3, 3, 0) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (3, 3, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_minimum_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 5 (60.0%)
Greatest absolute difference: 228 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 228.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_movedim_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 24 (37.5%)
Greatest absolute difference: 233 at index (2, 0, 0, 0) (up to 0.001 allowed)
Greatest relative difference: 233.0 at index (2, 0, 0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_msort_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 7999 / 8000 (100.0%)
Greatest absolute difference: 253 at index (290,) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (290,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_mul_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 79 (up to 0.001 allowed)
Relative difference: 79.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nan_to_num_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 13 / 20 (65.0%)
Greatest absolute difference: 230 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 230.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nansum_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 209 (up to 0.001 allowed)
Relative difference: 209.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_narrow_copy_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 72 / 125 (57.6%)
Greatest absolute difference: 251 at index (0, 2, 3) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (0, 2, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_narrow_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 61 / 125 (48.8%)
Greatest absolute difference: 250 at index (0, 1, 0) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (0, 1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_ne_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 39 (up to 0.001 allowed)
Relative difference: 39.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_new_full_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 202 (up to 0.001 allowed)
Relative difference: 202.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_new_ones_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 25 (40.0%)
Greatest absolute difference: 250 at index (1, 3) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (1, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_new_zeros_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 170 (up to 0.001 allowed)
Relative difference: 170.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nn_functional_cosine_embedding_loss_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 25 (36.0%)
Greatest absolute difference: 220 at index (3, 3) (up to 0.001 allowed)
Greatest relative difference: 220.0 at index (3, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nn_functional_feature_alpha_dropout_without_train_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 25 (36.0%)
Greatest absolute difference: 229 at index (4, 4) (up to 0.001 allowed)
Greatest relative difference: 229.0 at index (4, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nn_functional_pad_circular_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 18 (55.6%)
Greatest absolute difference: 236 at index (0, 1, 1) (up to 0.001 allowed)
Greatest relative difference: 236.0 at index (0, 1, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nn_functional_pad_constant_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 8 / 9 (88.9%)
Greatest absolute difference: 250 at index (0, 2, 2) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (0, 2, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nn_functional_pixel_shuffle_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 17 / 36 (47.2%)
Greatest absolute difference: 246 at index (0, 4, 1, 0) (up to 0.001 allowed)
Greatest relative difference: 246.0 at index (0, 4, 1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nn_functional_pixel_unshuffle_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 16 / 36 (44.4%)
Greatest absolute difference: 233 at index (0, 0, 2, 4) (up to 0.001 allowed)
Greatest relative difference: 233.0 at index (0, 0, 2, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_nonzero_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 5 (40.0%)
Greatest absolute difference: 226 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 226.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_ones_like_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 171 (up to 0.001 allowed)
Relative difference: 171.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_outer_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 5 (60.0%)
Greatest absolute difference: 245 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 245.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_permute_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 12 / 24 (50.0%)
Greatest absolute difference: 238 at index (0, 1, 0, 3) (up to 0.001 allowed)
Greatest relative difference: 238.0 at index (0, 1, 0, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_polygamma_polygamma_n_0_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 12 / 25 (48.0%)
Greatest absolute difference: 242 at index (3, 0) (up to 0.001 allowed)
Greatest relative difference: 242.0 at index (3, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_prod_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 63 / 125 (50.4%)
Greatest absolute difference: 252 at index (2, 3, 4) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (2, 3, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_put_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 6 / 9 (66.7%)
Greatest absolute difference: 229 at index (1, 1) (up to 0.001 allowed)
Greatest relative difference: 229.0 at index (1, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_rad2deg_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 20 (50.0%)
Greatest absolute difference: 250 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_ravel_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 61 / 125 (48.8%)
Greatest absolute difference: 246 at index (2, 3, 1) (up to 0.001 allowed)
Greatest relative difference: 246.0 at index (2, 3, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_real_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 11 / 20 (55.0%)
Greatest absolute difference: 242 at index (9,) (up to 0.001 allowed)
Greatest relative difference: 242.0 at index (9,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_reciprocal_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 6 / 20 (30.0%)
Greatest absolute difference: 220 at index (9,) (up to 0.001 allowed)
Greatest relative difference: 220.0 at index (9,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_repeat_interleave_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 219 (up to 0.001 allowed)
Relative difference: 219.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_repeat_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 183 (up to 0.001 allowed)
Relative difference: 183.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_reshape_as_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 61 / 125 (48.8%)
Greatest absolute difference: 253 at index (2, 3, 2) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (2, 3, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_reshape_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 67 / 125 (53.6%)
Greatest absolute difference: 252 at index (4, 3, 0) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (4, 3, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_resize__xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 67 / 125 (53.6%)
Greatest absolute difference: 251 at index (3, 1, 3) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (3, 1, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_resize_as__xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 57 / 125 (45.6%)
Greatest absolute difference: 252 at index (3, 1, 0) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (3, 1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_resolve_conj_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 17 / 25 (68.0%)
Greatest absolute difference: 228 at index (1, 4) (up to 0.001 allowed)
Greatest relative difference: 228.0 at index (1, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_resolve_neg_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 8 / 25 (32.0%)
Greatest absolute difference: 246 at index (1, 0) (up to 0.001 allowed)
Greatest relative difference: 246.0 at index (1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_rot90_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 73 / 125 (58.4%)
Greatest absolute difference: 251 at index (1, 0, 2) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (1, 0, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_rsqrt_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 12 / 20 (60.0%)
Greatest absolute difference: 204 at index (6,) (up to 0.001 allowed)
Greatest relative difference: 204.0 at index (6,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_scatter_add_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 28 / 50 (56.0%)
Greatest absolute difference: 236 at index (1, 1) (up to 0.001 allowed)
Greatest relative difference: 236.0 at index (1, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_scatter_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 26 / 50 (52.0%)
Greatest absolute difference: 250 at index (5, 2) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (5, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_select_scatter_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 62 / 125 (49.6%)
Greatest absolute difference: 248 at index (3, 0, 1) (up to 0.001 allowed)
Greatest relative difference: 248.0 at index (3, 0, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_select_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 53 / 125 (42.4%)
Greatest absolute difference: 250 at index (4, 1, 0) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (4, 1, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sgn_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 210 / 400 (52.5%)
Greatest absolute difference: 253 at index (1, 15) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (1, 15) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_short_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 6 (50.0%)
Greatest absolute difference: 191 at index (0, 2) (up to 0.001 allowed)
Greatest relative difference: 191.0 at index (0, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sigmoid_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 20 (50.0%)
Greatest absolute difference: 227 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 227.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sign_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 193 / 400 (48.2%)
Greatest absolute difference: 251 at index (4, 4) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (4, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_signbit_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 216 / 400 (54.0%)
Greatest absolute difference: 253 at index (8, 8) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (8, 8) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sin_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 214 / 400 (53.5%)
Greatest absolute difference: 253 at index (6, 13) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (6, 13) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sinc_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 9 / 20 (45.0%)
Greatest absolute difference: 215 at index (6,) (up to 0.001 allowed)
Greatest relative difference: 215.0 at index (6,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sinh_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 206 / 400 (51.5%)
Greatest absolute difference: 252 at index (18, 13) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (18, 13) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_slice_scatter_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4050 / 8000 (50.6%)
Greatest absolute difference: 253 at index (0, 1, 5) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0, 1, 5) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_slice_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 3 (66.7%)
Greatest absolute difference: 149 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 149.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_softmax_with_dtype_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 5 (80.0%)
Greatest absolute difference: 144 at index (3,) (up to 0.001 allowed)
Greatest relative difference: 144.0 at index (3,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sort_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 7999 / 8000 (100.0%)
Greatest absolute difference: 253 at index (326,) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (326,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_entr_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 12 / 20 (60.0%)
Greatest absolute difference: 253 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_erfcx_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 12 / 20 (60.0%)
Greatest absolute difference: 225 at index (11,) (up to 0.001 allowed)
Greatest relative difference: 225.0 at index (11,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_i0e_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 5 (20.0%)
Greatest absolute difference: 123 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 123.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_i1_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 5 (80.0%)
Greatest absolute difference: 252 at index (0,) (up to 0.0001 allowed)
Greatest relative difference: 252.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_i1e_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 5 (40.0%)
Greatest absolute difference: 10 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 10.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_ndtr_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 5 / 20 (25.0%)
Greatest absolute difference: 207 at index (18,) (up to 0.001 allowed)
Greatest relative difference: 207.0 at index (18,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_ndtri_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 14 / 20 (70.0%)
Greatest absolute difference: 240 at index (7,) (up to 0.001 allowed)
Greatest relative difference: 240.0 at index (7,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_polygamma_special_polygamma_n_0_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 6 / 25 (24.0%)
Greatest absolute difference: 207 at index (2, 0) (up to 0.001 allowed)
Greatest relative difference: 207.0 at index (2, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_xlog1py_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 5 (60.0%)
Greatest absolute difference: 66 at index (0,) (up to 0.001 allowed)
Greatest relative difference: 66.0 at index (0,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_special_zeta_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 259, in transform
    tt(self.args),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 54 (up to 0.001 allowed)
Relative difference: 54.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_split_list_args_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 65 / 125 (52.0%)
Greatest absolute difference: 252 at index (0, 1, 4) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (0, 1, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_split_with_sizes_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 68 / 125 (54.4%)
Greatest absolute difference: 250 at index (4, 2, 4) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (4, 2, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_split_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 67 / 125 (53.6%)
Greatest absolute difference: 242 at index (3, 1, 3) (up to 0.001 allowed)
Greatest relative difference: 242.0 at index (3, 1, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sqrt_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 209 / 400 (52.2%)
Greatest absolute difference: 251 at index (15, 7) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (15, 7) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_square_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 10 / 20 (50.0%)
Greatest absolute difference: 156 at index (17,) (up to 0.001 allowed)
Greatest relative difference: 156.0 at index (17,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_squeeze_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 15 / 25 (60.0%)
Greatest absolute difference: 250 at index (3, 0, 4, 0) (up to 0.001 allowed)
Greatest relative difference: 250.0 at index (3, 0, 4, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_stack_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 249, in tt
    return list(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 12 (33.3%)
Greatest absolute difference: 174 at index (0, 0) (up to 0.001 allowed)
Greatest relative difference: 174.0 at index (0, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sum_to_size_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 108 (up to 0.001 allowed)
Relative difference: 108.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_sum_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 73 (up to 0.001 allowed)
Relative difference: 73.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_t_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 1 / 2 (50.0%)
Greatest absolute difference: 240 at index (1,) (up to 0.001 allowed)
Greatest relative difference: 240.0 at index (1,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_take_along_dim_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 15 / 25 (60.0%)
Greatest absolute difference: 248 at index (0, 4) (up to 0.001 allowed)
Greatest relative difference: 248.0 at index (0, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_take_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 7 / 9 (77.8%)
Greatest absolute difference: 181 at index (0, 2) (up to 0.001 allowed)
Greatest relative difference: 181.0 at index (0, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_tan_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 207 / 400 (51.7%)
Greatest absolute difference: 253 at index (16, 14) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (16, 14) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_tanh_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 215 / 400 (53.8%)
Greatest absolute difference: 252 at index (2, 14) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (2, 14) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_tensor_split_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 65 / 125 (52.0%)
Greatest absolute difference: 252 at index (2, 1, 2) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (2, 1, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_tile_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 6 (66.7%)
Greatest absolute difference: 205 at index (2, 1) (up to 0.001 allowed)
Greatest relative difference: 205.0 at index (2, 1) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_to_sparse_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 15 / 25 (60.0%)
Greatest absolute difference: 247 at index (2, 3) (up to 0.001 allowed)
Greatest relative difference: 247.0 at index (2, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_to_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 310 / 625 (49.6%)
Greatest absolute difference: 253 at index (1, 4, 0, 2) (up to 0.001 allowed)
Greatest relative difference: 253.0 at index (1, 4, 0, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_transpose_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 2 / 6 (33.3%)
Greatest absolute difference: 177 at index (0, 1, 2) (up to 0.001 allowed)
Greatest relative difference: 177.0 at index (0, 1, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_tril_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 49 / 100 (49.0%)
Greatest absolute difference: 252 at index (3, 9) (up to 0.001 allowed)
Greatest relative difference: 252.0 at index (3, 9) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_triu_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 50 / 100 (50.0%)
Greatest absolute difference: 251 at index (3, 5) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (3, 5) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_true_divide_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 197 (up to 0.001 allowed)
Relative difference: 197.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_unbind_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 4 / 5 (80.0%)
Greatest absolute difference: 167 at index (2,) (up to 0.001 allowed)
Greatest relative difference: 167.0 at index (2,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_unflatten_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 6 / 8 (75.0%)
Greatest absolute difference: 187 at index (5,) (up to 0.001 allowed)
Greatest relative difference: 187.0 at index (5,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_unfold_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 217 (up to 0.001 allowed)
Relative difference: 217.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_unique_consecutive_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 167 (up to 0.001 allowed)
Relative difference: 167.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_unique_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 42 (up to 0.001 allowed)
Relative difference: 42.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_unsqueeze_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 25 / 60 (41.7%)
Greatest absolute difference: 236 at index (2, 3, 2) (up to 0.001 allowed)
Greatest relative difference: 236.0 at index (2, 3, 2) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_view_as_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 52 / 125 (41.6%)
Greatest absolute difference: 247 at index (3, 4, 0) (up to 0.001 allowed)
Greatest relative difference: 247.0 at index (3, 4, 0) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_view_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 67 / 125 (53.6%)
Greatest absolute difference: 251 at index (3, 0, 4) (up to 0.001 allowed)
Greatest relative difference: 251.0 at index (3, 0, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_vsplit_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 15 / 30 (50.0%)
Greatest absolute difference: 233 at index (0, 4) (up to 0.001 allowed)
Greatest relative difference: 233.0 at index (0, 4) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_vstack_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 251, in tt
    return tuple(map(tt, t))
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 3 / 5 (60.0%)
Greatest absolute difference: 140 at index (3,) (up to 0.001 allowed)
Greatest relative difference: 140.0 at index (3,) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_where_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 44 / 100 (44.0%)
Greatest absolute difference: 242 at index (6, 8) (up to 0.001 allowed)
Greatest relative difference: 242.0 at index (6, 8) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_xlogy_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Scalars are not close!

Absolute difference: 91 (up to 0.001 allowed)
Relative difference: 91.0 (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_zero__xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 65 / 125 (52.0%)
Greatest absolute difference: 246 at index (2, 4, 3) (up to 0.001 allowed)
Greatest relative difference: 246.0 at index (2, 4, 3) (up to 0.0 allowed)

======================================================================
FAIL: test_non_standard_bool_values_zeros_like_xpu_bool (__main__.TestCommonXPU)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2004, in wrapper
    method(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/common/pytorch_test_base.py", line 430, in instantiated_test
    result = test(self, **param_kwargs)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_device_type.py", line 815, in test_wrapper
    return test(*args, **kwargs)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 548, in test_non_standard_bool_values
    transformed = sample.transform(convert_boolean_tensors)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 258, in transform
    tt(self.input),
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 245, in tt
    return _tt(t)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/opinfo/core.py", line 242, in _tt
    return f(t)
  File "/home/gta/xunsongh/ipex-gpu/tests/gpu/experimental/test/test_ops.py", line 544, in convert_boolean_tensors
    self.assertEqual(ret, x)
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_internal/common_utils.py", line 2468, in assertEqual
    assert_equal(
  File "/home/gta/miniconda3/envs/xunsongh/lib/python3.9/site-packages/torch/testing/_comparison.py", line 1093, in assert_equal
    raise error_metas[0].to_error(msg)
AssertionError: Tensor-likes are not close!

Mismatched elements: 14 / 25 (56.0%)
Greatest absolute difference: 226 at index (0, 1) (up to 0.001 allowed)
Greatest relative difference: 226.0 at index (0, 1) (up to 0.0 allowed)

----------------------------------------------------------------------
Ran 19160 tests in 6.444s

FAILED (failures=241, errors=6, skipped=18910)
Raised CalledProcessError: return code 1.