# NOTE: To build this you will need a docker version >= 19.03 and DOCKER_BUILDKIT=1
#
#       If you do not use buildkit you are not going to have a good time
#
#       For reference:
#           https://docs.docker.com/develop/develop-images/build_enhancements/

ARG BASE_IMAGE=ubuntu:22.04
FROM ${BASE_IMAGE} AS base
RUN if [ -f /etc/apt/apt.conf.d/proxy.conf ]; then rm /etc/apt/apt.conf.d/proxy.conf; fi && \
    if [ ! -z ${HTTP_PROXY} ]; then echo "Acquire::http::Proxy \"${HTTP_PROXY}\";" >> /etc/apt/apt.conf.d/proxy.conf; fi && \
    if [ ! -z ${HTTPS_PROXY} ]; then echo "Acquire::http::Proxy \"${HTTPS_PROXY}\";" >> /etc/apt/apt.conf.d/proxy.conf; fi
RUN apt update && \
    apt full-upgrade -y && \
    DEBIAN_FRONTEND=noninteractive apt install --no-install-recommends -y \
    sudo \
    git \
    wget \
    curl \
    vim \
    patch \
    gcc \
    g++ \
    make \
    pkg-config \
    software-properties-common \
    gnupg \
    gpg-agent
RUN wget -qO - https://repositories.intel.com/gpu/intel-graphics.key | gpg --dearmor --output /usr/share/keyrings/intel-graphics.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/intel-graphics.gpg] https://repositories.intel.com/gpu/ubuntu jammy unified" | tee /etc/apt/sources.list.d/intel-gpu-jammy.list && \
    apt update && \
    apt install -y intel-opencl-icd=23.30.26918.50-736~22.04 \
    level-zero=1.13.1-719~22.04 \
    intel-level-zero-gpu=1.3.26918.50-736~22.04 \
    xpu-smi=1.2.22-31~22.04
RUN wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB | gpg --dearmor | tee /usr/share/keyrings/oneapi-archive-keyring.gpg > /dev/null && \
    echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" | tee /etc/apt/sources.list.d/oneAPI.list && \
    apt update

RUN useradd -m ubuntu
RUN echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
USER ubuntu
WORKDIR /home/ubuntu

RUN curl -fsSL -v -o miniconda.sh -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \
    bash miniconda.sh -b -p ./miniconda3 && \
    rm miniconda.sh && \
    echo "\nsource ~/miniconda3/bin/activate" >> ./.bashrc

FROM base AS dev
RUN sudo apt update && \
    sudo apt install -y level-zero-dev=1.13.1-719~22.04 \
    intel-level-zero-gpu-dev=1.3.26918.50-736~22.04 \
    intel-oneapi-dpcpp-cpp-2024.0 \
    intel-oneapi-mkl-devel-2024.0
RUN sudo apt clean && \
    sudo rm -rf /var/lib/apt/lists/* && \
    if [ -f /etc/apt/apt.conf.d/proxy.conf ]; then sudo rm /etc/apt/apt.conf.d/proxy.conf; fi
RUN mkdir ./intel-extension-for-pytorch
COPY . ./intel-extension-for-pytorch/
RUN sudo chown -R ubuntu:ubuntu ./intel-extension-for-pytorch && \
    cp ./intel-extension-for-pytorch/scripts/compile_bundle.sh ./ && \
    sed -i "s/VER_IPEX=.*/VER_IPEX=/" compile_bundle.sh
RUN . ./miniconda3/bin/activate && \
    conda create -y -n compile_py310 python=3.10 && conda activate compile_py310 && \
    bash compile_bundle.sh /opt/intel/oneapi/compiler/latest /opt/intel/oneapi/mkl/latest pvc,ats-m150,acm-g11

FROM base AS deploy
RUN sudo apt update && \
    sudo apt install -y intel-oneapi-runtime-dpcpp-cpp=2024.0.0-49819 \
    intel-oneapi-runtime-mkl=2024.0.0-49656
RUN sudo apt clean && \
    sudo rm -rf /var/lib/apt/lists/* && \
    if [ -f /etc/apt/apt.conf.d/proxy.conf ]; then sudo rm /etc/apt/apt.conf.d/proxy.conf; fi
RUN mkdir ./wheels
COPY --from=dev /home/ubuntu/pytorch/dist/*.whl ./wheels
COPY --from=dev /home/ubuntu/vision/dist/*.whl ./wheels
COPY --from=dev /home/ubuntu/audio/dist/*.whl ./wheels
COPY --from=dev /home/ubuntu/intel-extension-for-pytorch/dist/*.whl ./wheels
RUN . ./miniconda3/bin/activate && \
    conda create -y -n py310 python=3.10 && conda activate py310 && \
    conda install -y libstdcxx-ng=12 libpng libjpeg-turbo -c conda-forge && \
    python -m pip install ./wheels/*.whl && \
    python -m pip cache purge && \
    conda clean -a -y && \
    rm -rf ./wheels && \
    echo "conda activate py310" >> ./.bashrc && \
    echo "export LD_PRELOAD=${CONDA_PREFIX}/lib/libstdc++.so" >> ./.bashrc
