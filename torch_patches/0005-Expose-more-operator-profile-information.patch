From 2225b6247d72381170812d6a52c8936167cffa77 Mon Sep 17 00:00:00 2001
From: Ye Ting <ting.ye@intel.com>
Date: Fri, 12 Jun 2020 21:13:15 +0800
Subject: [PATCH 5/5] Expose more operator profile information

Update to row_limit from 100 to 10000 for more entries in profiling table.
Update reverse to False in default to make the table entry listed in original order.
---
 torch/autograd/profiler.py | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/torch/autograd/profiler.py b/torch/autograd/profiler.py
index ae4451f0cc..97edc322b4 100644
--- a/torch/autograd/profiler.py
+++ b/torch/autograd/profiler.py
@@ -93,7 +93,7 @@ class EventList(list):
     def cpu_children_populated(self):
         return self._cpu_children_populated
 
-    def table(self, sort_by=None, row_limit=100, header=None):
+    def table(self, sort_by=None, row_limit=10000, header=None):
         """Prints an EventList as a nicely formatted table.
 
         Arguments:
@@ -302,7 +302,7 @@ class profile(object):
             raise RuntimeError("can't export a trace that didn't finish running")
         self.function_events.populate_cpu_children()
 
-    def table(self, sort_by=None, row_limit=100, header=None):
+    def table(self, sort_by=None, row_limit=10000, header=None):
         self._check_finish()
         return self.function_events.table(
             sort_by=sort_by, row_limit=row_limit, header=header)
@@ -860,14 +860,14 @@ def parse_nvprof_trace(path):
 # Pretty printer
 
 
-def build_table(events, sort_by=None, header=None, row_limit=100, use_cuda=True):
+def build_table(events, sort_by=None, header=None, row_limit=10000, use_cuda=True):
     """Prints a summary of events (which can be a list of FunctionEvent or FunctionEventAvg)."""
     if len(events) == 0:
         return ""
 
     if sort_by is not None:
         events = EventList(sorted(
-            events, key=lambda evt: getattr(evt, sort_by), reverse=True
+            events, key=lambda evt: getattr(evt, sort_by), reverse=False
         ), use_cuda=use_cuda)
 
     has_input_shapes = any(
-- 
2.17.1

