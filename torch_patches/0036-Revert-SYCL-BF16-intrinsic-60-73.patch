From 2c078f2ccdbf1a63f9a486bde1beaaac045a7a19 Mon Sep 17 00:00:00 2001
From: ch <hao3.chen@intel.com>
Date: Fri, 14 Oct 2022 14:03:24 +0800
Subject: [PATCH 36/36] Revert "SYCL BF16 intrinsic (#60)" (#73)

This reverts commit d212b0374a45fc00e624b2bd05a97edd780fa572.
---
 c10/util/BFloat16-inl.h | 18 ------------------
 c10/util/BFloat16.h     | 11 -----------
 2 files changed, 29 deletions(-)

diff --git a/c10/util/BFloat16-inl.h b/c10/util/BFloat16-inl.h
index b51bb4d9d7..9dd30d2d5a 100644
--- a/c10/util/BFloat16-inl.h
+++ b/c10/util/BFloat16-inl.h
@@ -3,11 +3,6 @@
 #include <c10/macros/Macros.h>
 #include <limits>
 
-#ifdef SYCL_LANGUAGE_VERSION
-#include <CL/sycl.hpp>
-#include <ext/oneapi/experimental/bfloat16.hpp>
-#endif
-
 namespace c10 {
 
 /// Constructors
@@ -15,8 +10,6 @@ inline C10_HOST_DEVICE BFloat16::BFloat16(float value) {
 #if defined(CUDA_VERSION) && CUDA_VERSION >= 11000 && \
     defined(__CUDA_ARCH__) && __CUDA_ARCH__ >= 800
   x = __bfloat16_as_ushort(__float2bfloat16(value));
-#elif defined(__SYCL_DEVICE_ONLY__)
-  x = sycl::bit_cast<uint16_t>(sycl::ext::oneapi::experimental::bfloat16(value));
 #else
   // RNE by default
   x = detail::round_to_nearest_even(value);
@@ -27,8 +20,6 @@ inline C10_HOST_DEVICE BFloat16::BFloat16(float value) {
 inline C10_HOST_DEVICE BFloat16::operator float() const {
 #if defined(CUDA_VERSION) && CUDA_VERSION >= 11000
   return __bfloat162float(*reinterpret_cast<const __nv_bfloat16*>(&x));
-#elif defined(__SYCL_DEVICE_ONLY__)
-  return float(*reinterpret_cast<const sycl::ext::oneapi::experimental::bfloat16*>(&x));
 #else
   return detail::f32_from_bits(x);
 #endif
@@ -43,15 +34,6 @@ inline C10_HOST_DEVICE BFloat16::operator __nv_bfloat16() const {
 }
 #endif
 
-#ifdef SYCL_LANGUAGE_VERSION
-inline C10_HOST_DEVICE BFloat16::BFloat16(const sycl::ext::oneapi::experimental::bfloat16& value) {
-  x = *reinterpret_cast<const unsigned short*>(&value);
-}
-inline C10_HOST_DEVICE BFloat16::operator sycl::ext::oneapi::experimental::bfloat16() const {
-  return *reinterpret_cast<const sycl::ext::oneapi::experimental::bfloat16*>(&x);
-}
-#endif
-
 // CUDA intrinsics
 
 #if defined(__CUDACC__) || defined(__HIPCC__)
diff --git a/c10/util/BFloat16.h b/c10/util/BFloat16.h
index 428ae79b50..5446eb9419 100644
--- a/c10/util/BFloat16.h
+++ b/c10/util/BFloat16.h
@@ -11,11 +11,6 @@
 #include <cuda_bf16.h>
 #endif
 
-#if defined(SYCL_LANGUAGE_VERSION)
-#include <CL/sycl.hpp>
-#include <ext/oneapi/experimental/bfloat16.hpp>
-#endif
-
 namespace c10 {
 
 namespace detail {
@@ -99,12 +94,6 @@ struct alignas(2) BFloat16 {
   inline C10_HOST_DEVICE BFloat16(const __nv_bfloat16& value);
   explicit inline C10_HOST_DEVICE operator __nv_bfloat16() const;
 #endif
-
-#if defined(SYCL_LANGUAGE_VERSION)
-  inline C10_HOST_DEVICE BFloat16(const sycl::ext::oneapi::experimental::bfloat16& value);
-  explicit inline C10_HOST_DEVICE operator sycl::ext::oneapi::experimental::bfloat16() const;
-#endif
-
 };
 
 } // namespace c10
-- 
2.25.1

