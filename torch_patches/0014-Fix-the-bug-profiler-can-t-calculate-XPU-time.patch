From 06eb56997d25ff82b195bfa23fc856bc76ea396c Mon Sep 17 00:00:00 2001
From: "Xunsong, Huang" <xunsong.huang@intel.com>
Date: Fri, 26 Feb 2021 15:17:01 +0800
Subject: [PATCH 14/14] Fix the bug - profiler can't calculate XPU time

Now, use `use_xpu = True` in your profiler to get the XPU time

Signed-off-by: Xunsong, Huang <xunsong.huang@intel.com>
---
 torch/autograd/profiler.py | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/torch/autograd/profiler.py b/torch/autograd/profiler.py
index 467a5a9a40..4025209048 100644
--- a/torch/autograd/profiler.py
+++ b/torch/autograd/profiler.py
@@ -35,10 +35,12 @@ class EventList(list):
     """A list of Events (for pretty printing)"""
     def __init__(self, *args, **kwargs):
         use_cuda = kwargs.pop('use_cuda', True)
+        use_xpu = kwargs.pop('use_xpu', False)
         profile_memory = kwargs.pop('profile_memory', False)
         super(EventList, self).__init__(*args, **kwargs)
         self._cpu_children_populated = False
         self._use_cuda = use_cuda
+        self._use_xpu = use_xpu
         self._profile_memory = profile_memory
 
     def __str__(self):
@@ -175,6 +177,7 @@ class EventList(list):
             row_limit=row_limit,
             header=header,
             use_cuda=self._use_cuda,
+            use_xpu=self._use_xpu,
             profile_memory=self._profile_memory,
             top_level_events_only=top_level_events_only)
 
@@ -274,7 +277,7 @@ class EventList(list):
         for evt in self:
             stats[get_key(evt, group_by_input_shapes, group_by_stack_n)].add(evt)
 
-        avg_list = EventList(stats.values(), use_cuda=self._use_cuda, profile_memory=self._profile_memory)
+        avg_list = EventList(stats.values(), use_cuda=self._use_cuda, use_xpu=self._use_xpu, profile_memory=self._profile_memory)
         for evt in avg_list:
             evt.stack = evt.stack[:group_by_stack_n]
             if not group_by_input_shapes:
@@ -362,11 +365,13 @@ class profile(object):
             self,
             enabled=True,
             use_cuda=False,
+            use_xpu=False,
             record_shapes=False,
             profile_memory=False,
             with_stack=False):
         self.enabled = enabled
         self.use_cuda = use_cuda
+        self.use_xpu = use_xpu
         self.function_events = None
         if not self.enabled:
             return
@@ -383,6 +388,8 @@ class profile(object):
         self.entered = True
         profiler_kind = torch.autograd.ProfilerState.CUDA if self.use_cuda \
             else torch.autograd.ProfilerState.CPU
+        if self.use_xpu:
+          profiler_kind = torch.autograd.ProfilerState.XPU
 
         config = torch.autograd.ProfilerConfig(
             profiler_kind,
@@ -399,6 +406,7 @@ class profile(object):
         self.function_events = EventList(
             parse_event_records(records),
             use_cuda=self.use_cuda,
+            use_xpu=self.use_xpu,
             profile_memory=self.profile_memory)
         if self.with_stack:
             self.function_events.set_backward_stacktraces()
@@ -919,7 +927,7 @@ class FunctionEventAvg(FormattedTimesMixin):
         assert other.key == self.key
         self.cpu_time_total += other.cpu_time_total
         self.cuda_time_total += other.cuda_time_total
-        self.xpu_time_total += other.xpu_time
+        self.xpu_time_total += other.xpu_time_total
         self.self_cpu_time_total += other.self_cpu_time_total
         self.self_cuda_time_total += other.self_cuda_time_total
         self.self_xpu_time_total += other.self_xpu_time_total
@@ -1241,6 +1249,7 @@ def build_table(
         header=None,
         row_limit=100,
         use_cuda=True,
+        use_xpu=False,
         profile_memory=False,
         top_level_events_only=False):
     """Prints a summary of events (which can be a list of FunctionEvent or FunctionEventAvg)."""
@@ -1250,7 +1259,7 @@ def build_table(
     if sort_by is not None:
         events = EventList(sorted(
             events, key=lambda evt: getattr(evt, sort_by), reverse=True
-        ), use_cuda=use_cuda, profile_memory=profile_memory)
+        ), use_cuda=use_cuda, use_xpu=use_xpu, profile_memory=profile_memory)
 
     has_input_shapes = any(
         [(event.input_shapes is not None and len(event.input_shapes) > 0) for event in events])
@@ -1441,4 +1450,6 @@ def build_table(
     append("XPU time total: {}".format(format_time(xpu_time_total)))
     if use_cuda:
         append("CUDA time total: {}".format(format_time(cuda_time_total)))
+    if use_xpu:
+        append("XPU time total: {}".format(format_time(xpu_time_total)))
     return ''.join(result)
-- 
2.25.1

