From 86ed76d0427b445127648c6763bbe03dffa39553 Mon Sep 17 00:00:00 2001
From: Zekun Chen <zekun.chen@intel.com>
Date: Mon, 25 May 2020 17:04:54 +0800
Subject: [PATCH 04/10] Do NOT define __assert_fail in DPCPP build

To Avoid the signature conflict in DPCPP headers
---
 c10/macros/Macros.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/c10/macros/Macros.h b/c10/macros/Macros.h
index 0258d100b6..70c823d44f 100644
--- a/c10/macros/Macros.h
+++ b/c10/macros/Macros.h
@@ -216,7 +216,7 @@ constexpr uint32_t CUDA_THREADS_PER_BLOCK_FALLBACK = 256;
 // CUDA_ALWAYS_ASSERT is similar to CUDA_KERNEL_ASSERT but checks the assertion
 // even when NDEBUG is defined. This is useful for important assertions in CUDA
 // code that when building Release.
-#if defined(__APPLE__) || defined(__HIP_PLATFORM_HCC__)
+#if defined(__APPLE__) || defined(__HIP_PLATFORM_HCC__) || defined(USE_DPCPP)
 // Those platforms do not support assert()
 #define CUDA_ALWAYS_ASSERT(cond)
 #elif defined(_MSC_VER)
-- 
2.17.1

